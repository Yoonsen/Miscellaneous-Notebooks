;;; -*- mode: fundamental; coding: utf-8; indent-tabs-mode: t; -*-

;;;
;;; Simple Tokeniser
;;;

;;
;; preprocessor rules versioning; auto-maintained upon CVS (or SVN) check-in.
;; 
@$Date: 2011-09-06 22:47:47 +0200 (Tue, 06 Sep 2011) $

;;
;; tokenization pattern: after normalization, the string will be broken up at
;; each occurrence of this pattern; the pattern match itself is deleted.
;;
:[ \t]+
;;;
;;; string rewrite rules: all matches, over the entire string, are replaced by
;;; the right-hand side; grouping (using `(' and `)') in the pattern) and group
;;; references (`\1' for the first group, et al.) carry over part of the match.
;;;
;; Same behaviour as simple_tokenizer.fsr
;; except possession 's'
;; REPP work on the entire string, FSPP work with the tokens.
;
;     regel	beskrivelse
;	1	setter inn ' ' før og etter streng
;	2	endre tabulator til ' '
;	3	fjerner alle duplikate ' '
;	4	fjerner * hvis først i streng
;	5*	hvis token ender med 's' så splitt i 'token-s' +'s'
;	6	hvis [:;!?.-]+' ' så splitt på siste tegn
;	7	hvis [,"'] så splitt i ' '+tegn+' '
;;
;; regel 1
!^(.+)$								 \1 
;;
;; regel 2
!\t								 
;;
;; regel 3
! +								 
;;
;; regel 4
!^ [*]						  
;;
;; regel 5
;;! ([a-z,0-9,æ,ø,å,A-Z,Æ,Ø,Å,-]+)[sS] 			 \1 s 
!([a-z,0-9,æ,ø,å,A-Z,Æ,Ø,Å,-]+)[sS] 			 \1 s 
;;
;; regel 6
!([:;!?\.-] )					 \1 
;;
;; regel 7
!([,"'])					 \1 
;;

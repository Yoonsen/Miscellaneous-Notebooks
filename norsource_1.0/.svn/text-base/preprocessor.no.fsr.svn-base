;;; -*- mode: fundamental; coding: iso-8859-1; indent-tabs-mode: t; -*-

;;;
;;;              - NorSource -
;;; 
;;;    Copyright (c)  NorSource version 0.3
;;;                       2004-2006 
;;;
;;;    Lars Hellan, Dorothee Beermann, Ben Waldron
;;;
;;;    Norwegian University of Science and Technology, 7491 Trondheim
;;;    <norsource@hf.ntnu.no>
;;;

;;; based on preprocessor.fsr (bmw - 23-feb-05)

;;;
;;; preprocessor rules versioning; auto-maintained upon CVS check-in.
;;; 
@$Date: 2008-02-18 13:12:19 $

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; tokenization pattern: after normalization, the string will be broken up at
;;; each occurrence of this pattern; the pattern match itself is deleted.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
:[ \t]+

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; string rewrite rules: all matches, over the entire string, are replaced by
;;; the right-hand side; grouping (using `(' and `)') in the pattern) and group
;;; references (`\1' for the first group, et al.) carry over part of the match.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;
;;; pad the full string with trailing and leading whitespace; makes matches for
;;; word boundaries a little easier down the road.
;;;
!^(.+)$					 \1 

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; from here on, token-specific rules, i.e. the pattern has to match the full
;;; string of the token (implicit `^' and `$' anchoring).  three types of rules
;;; for now: (i) substitution (`-'), replacing the token with the right-hand
;;; side match, (ii) augmentation (`+'), adding an alternative spelling for the
;;; token, and ersatzing (`^'), effectively a substitution but recording what
;;; the original string was for later retrieval 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;; remove * at start of word

-^[*](.+)					\1

;;
;; optionally, split possessive "s" clitic off as separate token
;;

+(.+)(s)					\1 \2

;;
;; optionally, split off final period to allow non-abbrevs
;;

+(.+?)([/,-:()"'#.!?]+)				\1 \2

;;
;; optionally, split around /,-:()"'#.!?
;; to_do: recursion
;;

+(.+)([/,-:()"'#.!?])([^/,-:()"'#.!?]+)		\1 \2 \3


^[-a-zA-Z0-9]+@[-.a-zA-z0-9]+			EmailErsatz


;fix_me
;^[0-9]+\.[0-9]+				DecimalErsatz
^[0-9]{1,2}/[0-9]{1,2}				FractionErsatz
^[0-9]{1,3},[0-9]{3}				NumberErsatz
^[0-9]{1,3},[0-9]{1,3},[0-9]{3}			NumberErsatz

;^[2-9]{1}					OneDigitErsatz
;^[0-9]{2}					TwoDigitErsatz
^[0-9]{3}					ThreeDigitErsatz
^[0-9]{4}					FourDigitErsatz
^[0-9]{5}					FiveDigitErsatz
^[0-9]{6}					SixDigitErsatz
^[0-9]{7}					SevenDigitErsatz
^[0-9]{8}					EightDigitErsatz
^[0-9]{9}					NineDigitErsatz
^[0-9]{10}					TenDigitErsatz
^[0-9]{11}					ElevenDigitErsatz
^[0-9]{12}					TwelveDigitErsatz
^[0-9]{13,}					ThirteenPlusDigitErsatz

^[0-2]?[0-9]:[0-5][0-9]				ClockTimeErsatz

^<?http://.*>?					WebErsatz
^<?www\.[a-zA-Z0-9.?%/_-]+>?			WebErsatz
^<?[a-zA-Z0-9_-]+@[a-zA-Z0-9._-]+>?		EmailErsatz

^'[0-9][0-9]					YearErsatz


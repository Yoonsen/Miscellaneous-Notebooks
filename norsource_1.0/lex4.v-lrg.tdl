;;; -*- Mode: tdl; Coding: utf-8; -*-
;;;
;;;              - NorSource -
;;; 
;;;    Copyright (c)  NorSource 1.0
;;;                     
;;;
;;;
;;;    Norwegian University of Science and Technology, 7491 Trondheim
;;;    
;;;

abandonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "abandonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abandonere-rel" ].

abbreviere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "abbreviere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abbreviere_v-tr_rel" ].

abdisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "abdisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abdisere_v-intr_rel" ].

abonnere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "abonnere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_abonnere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

abonnere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "abonnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abonnere_v-intr_rel" ].

abortere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "abortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abortere_v-intr_rel" ].

absentere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "absentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_absentere_v-tr_rel" ].

absolvere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "absolvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_absolvere_v-intr_rel" ].

absolvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "absolvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_absolvere_v-tr_rel" ].

absorbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "absorbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_absorbere_v-tr_rel" ].

abstrahere_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "abstrahere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_abstrahere_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

abstrahere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "abstrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abstrahere_v-intr_rel" ].

abstrahere_tr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "abstrahere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_abstrahere_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

abstrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "abstrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_abstrahere_v-tr_rel" ].

adaptere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "adaptere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_adaptere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

adaptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adaptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adaptere_v-tr_rel" ].

addere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "addere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_addere_v-tr_rel" ].

adherere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "adherere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adherere_v-intrObl_rel" ].

adjektivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adjektivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adjektivere_v-tr_rel" ].

adle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "adle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adle_v-intr_rel" ].

adle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "adle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adle_v-tr_rel" ].

adlyde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "adlyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adlyde_v-intr_rel" ].

adlyde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "adlyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adlyde_v-tr_rel" ].

administrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "administrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_administrere_v-tr_rel" ].

adoptere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "adoptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adoptere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

adoptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adoptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adoptere_v-tr_rel" ].

adressere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "adressere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_adressere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

adressere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adressere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adressere_v-tr_rel" ].

adsorbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adsorbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adsorbere_v-tr_rel" ].

adstringere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "adstringere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_adstringere_v-tr_rel" ].

advare_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "advare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_advare_v-trObl_rel" ].

advare_intrObl := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "advare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_advare_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC mot-k ].

advare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "advare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_advare_v-tr_rel" ].

advisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "advisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_advisere_v-tr_rel" ].

affektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "affektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_affektere_v-tr_rel" ].

affisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "affisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_affisere_v-tr_rel" ].

afrikanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "afrikanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_afrikanisere_v-tr_rel" ].

age_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "age" >,
   SYNSEM.LKEYS.KEYREL.PRED "_age_v-tr_rel" ].

age_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "age" >,
   SYNSEM.LKEYS.KEYREL.PRED "_age_v-tr_rel" ].

agere_copnom := v-copN &
 [ INFLECTION nonfstr-te,
   STEM < "agere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agere_v-copN_rel" ].

agere_intr-secpr-rais := v-intrScpr-suNrg-scInfORscAdjORscPPORscEQUAT &
 [ INFLECTION nonfstr-te,
   STEM < "agere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agere_v-intrScpr_rel" ].

agere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "agere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agere_v-intr_rel" ].

agglutinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "agglutinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agglutinere_v-intr_rel" ].

agglutinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "agglutinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agglutinere_v-tr_rel" ].

agitere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "agitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agitere_v-intrObl_rel" ].

agitere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "agitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agitere_v-intr_rel" ].

agne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "agne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_agne_v-tr_rel" ].

ajourføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ajourføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ajourføre_v-tr_rel" ].

ake_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ake_v-intr_rel" ].

akke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "akke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akke_v-intr_rel" ].

akke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "akke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akke_v-tr_rel" ].

akkedere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "akkedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkedere_v-intrObl_rel" ].

akkedere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "akkedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkedere_v-intr_rel" ].

akklimatisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "akklimatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akklimatisere_v-tr_rel" ].

akklimatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akklimatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akklimatisere_v-tr_rel" ].

akkommodere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "akkommodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkommodere_v-tr_rel" ].

akkommodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akkommodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkommodere_v-tr_rel" ].

akkompagnere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "akkompagnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkompagnere_v-intr_rel" ].

akkompagnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akkompagnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkompagnere_v-tr_rel" ].

akkordere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "akkordere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_akkordere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

akkordere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "akkordere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkordere_v-intr_rel" ].

akkreditere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akkreditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkreditere_v-tr_rel" ].

akkumulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akkumulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkumulere_v-tr_rel" ].

akkvirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "akkvirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akkvirere_v-intr_rel" ].

akselerere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "akselerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akselerere_v-intr_rel" ].

akselerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akselerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akselerere_v-tr_rel" ].

aksentuere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "aksentuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aksentuere_v-tr_rel" ].

aksentuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aksentuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aksentuere_v-tr_rel" ].

akseptere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "akseptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akseptere_v-tr_rel" ].

akseptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akseptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akseptere_v-tr_rel" ].

aksjonere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "aksjonere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_aksjonere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

aksjonere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "aksjonere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_aksjonere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

aksjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "aksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aksjonere_v-intr_rel" ].

aksle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "aksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aksle_v-tr_rel" ].

aksle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "aksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aksle_v-tr_rel" ].

akte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "akte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akte_v-tr_rel" ].

akte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "akte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akte_v-tr_rel" ].

akte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "akte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akte_v-tr_rel" ].

akterutsegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "akterutsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akterutsegle_v-tr_rel" ].

akterutseile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "akterutseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_akterutseile_v-tr_rel" ].

aktivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aktivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aktivere_v-tr_rel" ].

aktivisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "aktivisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aktivisere_v-tr_rel" ].

aktivisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aktivisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aktivisere_v-tr_rel" ].

aktualisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aktualisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aktualisere_v-tr_rel" ].

alarmere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "alarmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alarmere_v-tr_rel" ].

alboge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "alboge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alboge_v-trPath_rel" ].

albue_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "albue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_albue_v-trPath_rel" ].

aldersbestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aldersbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aldersbestemme_v-tr_rel" ].

aldre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "aldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aldre_v-tr_rel" ].

aldres_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "aldres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aldres_v-intr_rel" ].

ale_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "ale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ale_v-intrObl_rel" ].

ale_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "ale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ale_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

alfabetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "alfabetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alfabetisere_v-tr_rel" ].

alienere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "alienere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alienere_v-tr_rel" ].

alkoholisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "alkoholisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alkoholisere_v-tr_rel" ].

allitterere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "allitterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_allitterere_v-intr_rel" ].

allitterere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "allitterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_allitterere_v-tr_rel" ].

allokere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "allokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_allokere_v-trObl_rel" ].

allokere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "allokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_allokere_v-tr_rel" ].

alludere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "alludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alludere_v-intrObl_rel" ].

alterere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "alterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alterere_v-tr_rel" ].

alternere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "alternere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_alternere_v-intr_rel" ].

aluminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aluminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aluminere_v-tr_rel" ].

amalgamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "amalgamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amalgamere_v-tr_rel" ].

ambulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ambulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ambulere_v-intr_rel" ].

amerikanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "amerikanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amerikanisere_v-tr_rel" ].

amme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "amme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amme_v-intr_rel" ].

amme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "amme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amme_v-tr_rel" ].

amortisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "amortisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amortisere_v-tr_rel" ].

amputere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "amputere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_amputere_v-tr_rel" ].

analysere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "analysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_analysere_v-trObl_rel" ].

analysere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "analysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_analysere_v-tr_rel" ].

anbefale_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "anbefale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anbefale_v-ditr_rel" ].

anbefale_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "anbefale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anbefale_v-ditr_rel" ].

anbefale_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "anbefale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anbefale_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

anbefale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anbefale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anbefale_v-tr_rel" ].

anbringe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "anbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anbringe_v-trScpr_rel" ].

ande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ande_v-intr_rel" ].

andra_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "andra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_andra_v-intrObl_rel" ].

anduve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anduve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anduve_v-tr_rel" ].

andøve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "andøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_andøve_v-intr_rel" ].

ane_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "ane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ane_v-intrComp_rel" ].

ane_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "ane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ane_v-tr_rel" ].

ane_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ane_v-tr_rel" ].

anerkjenne_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "anerkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anerkjenne_v-trScpr_rel" ].

anerkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anerkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anerkjenne_v-tr_rel" ].

anestesere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anestesere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anestesere_v-tr_rel" ].

anfalle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "anfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anfalle_v-tr_rel" ].

anfekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anfekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anfekte_v-tr_rel" ].

anføre_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "anføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anføre_v-trScpr_rel" ].

anføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anføre_v-tr_rel" ].

ange_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ange_v-intr_rel" ].

angi_tr-obl-til := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "angi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_angi_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

angi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "angi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angi_v-tr_rel" ].

angle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "angle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angle_v-tr_rel" ].

anglifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anglifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anglifisere_v-tr_rel" ].

anglisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anglisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anglisere_v-tr_rel" ].

angre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "angre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_angre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

angre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "angre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angre_v-tr_rel" ].

angre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "angre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angre_v-tr_rel" ].

angripe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "angripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angripe_v-intr_rel" ].

angripe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "angripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angripe_v-tr_rel" ].

angå_io-epon := v-trExpnSu-expnDECL &
 [ INFLECTION finstr-tt,
   STEM < "angå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angå_v-trExpnSu_rel" ].

angå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "angå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_angå_v-tr_rel" ].

anholde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "anholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anholde_v-intrObl_rel" ].

anholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "anholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anholde_v-tr_rel" ].

animalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "animalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_animalisere_v-tr_rel" ].

animere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "animere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_animere_v-trObl_rel" ].

animere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "animere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_animere_v-tr_rel" ].

anke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "anke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anke_v-intr_rel" ].

anke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anke_v-tr_rel" ].

anklage_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "anklage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anklage_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

anklage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "anklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anklage_v-tr_rel" ].

ankre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ankre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ankre_v-intrPrtcl_rel" ].

ankre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ankre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ankre_v-tr_rel" ].

anlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "anlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anlegge_v-tr_rel" ].

anløpe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "anløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anløpe_v-intr_rel" ].

anløpe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "anløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anløpe_v-tr_rel" ].

anmasse_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "anmasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anmasse_v-ditr_rel" ].

anmelde_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "anmelde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anmelde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

anmelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anmelde_v-tr_rel" ].

anmerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anmerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anmerke_v-tr_rel" ].

anmode_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "anmode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anmode_v-trObl_rel" ].

annamme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "annamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_annamme_v-tr_rel" ].

annektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "annektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_annektere_v-tr_rel" ].

annonsere_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "annonsere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_annonsere_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

annonsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "annonsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_annonsere_v-tr_rel" ].

annullere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "annullere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_annullere_v-tr_rel" ].

anodisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anodisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anodisere_v-tr_rel" ].

anordne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "anordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anordne_v-ditr_rel" ].

anordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anordne_v-tr_rel" ].

anrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anrette_v-tr_rel" ].

anrike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anrike_v-tr_rel" ].

anrope_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anrope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anrope_v-tr_rel" ].

ansette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ansette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ansette_v-tr_rel" ].

anskaffe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "anskaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anskaffe_v-ditr_rel" ].

anskaffe_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "anskaffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anskaffe_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

anskaffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anskaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anskaffe_v-tr_rel" ].

anskue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anskue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anskue_v-tr_rel" ].

anskueliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "anskueliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anskueliggjøre_v-tr_rel" ].

anslå_tr-secpr-til := v-trScpr-scObNrg_scPredprtclTil &
 [ INFLECTION finstr-tt,
   STEM < "anslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anslå_v-trScpr_rel" ].

anslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "anslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anslå_v-tr_rel" ].

anspenne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "anspenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anspenne_v-tr_rel" ].

anspenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anspenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anspenne_v-tr_rel" ].

anspore_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "anspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anspore_v-trObl_rel" ].

anspore_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "anspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anspore_v-trObl_rel" ].

anstifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "anstifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anstifte_v-tr_rel" ].

anstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anstille_v-tr_rel" ].

anstrenge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "anstrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anstrenge_v-tr_rel" ].

anstrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anstrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anstrenge_v-tr_rel" ].

anstå_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "anstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anstå_v-tr_rel" ].

ansøke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "ansøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ansøke_v-intrObl_rel" ].

ansøke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ansøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ansøke_v-trObl_rel" ].

anta_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "anta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anta_v-tr_rel" ].

anta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "anta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anta_v-tr_rel" ].

antaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antaste_v-tr_rel" ].

antedatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "antedatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antedatere_v-tr_rel" ].

antegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antegne_v-tr_rel" ].

antenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "antenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antenne_v-tr_rel" ].

antesipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "antesipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antesipere_v-tr_rel" ].

antikisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "antikisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antikisere_v-tr_rel" ].

antikrympbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antikrympbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antikrympbehandle_v-tr_rel" ].

antikrøllbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antikrøllbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antikrøllbehandle_v-tr_rel" ].

antirefleksbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antirefleksbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antirefleksbehandle_v-tr_rel" ].

antirustbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antirustbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antirustbehandle_v-tr_rel" ].

antistatbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antistatbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antistatbehandle_v-tr_rel" ].

antyde_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "antyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antyde_v-intrComp_rel" ].

antyde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "antyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antyde_v-tr_rel" ].

antyde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "antyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_antyde_v-tr_rel" ].

anvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anvende_v-tr_rel" ].

anvise_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "anvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anvise_v-ditr_rel" ].

anvise_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "anvise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_anvise_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

anvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "anvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_anvise_v-tr_rel" ].

ape_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ape" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ape_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

apokopere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "apokopere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_apokopere_v-intr_rel" ].

apostrofere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "apostrofere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_apostrofere_v-intr_rel" ].

appellere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "appellere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_appellere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

appellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "appellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_appellere_v-tr_rel" ].

applaudere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "applaudere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_applaudere_v-intr_rel" ].

applaudere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "applaudere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_applaudere_v-tr_rel" ].

applikere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "applikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_applikere_v-intr_rel" ].

applikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "applikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_applikere_v-tr_rel" ].

applisere_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "applisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_applisere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

applisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "applisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_applisere_v-tr_rel" ].

apportere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "apportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_apportere_v-intr_rel" ].

apportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "apportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_apportere_v-tr_rel" ].

appretere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "appretere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_appretere_v-tr_rel" ].

approbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "approbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_approbere_v-tr_rel" ].

appropriere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "appropriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_appropriere_v-tr_rel" ].

aptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aptere_v-tr_rel" ].

arbeide_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "arbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arbeide_v-intr_rel" ].

arbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "arbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arbeide_v-tr_rel" ].

arde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "arde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arde_v-tr_rel" ].

arge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "arge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arge_v-tr_rel" ].

argumentere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "argumentere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_argumentere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

argumentere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "argumentere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_argumentere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

argumentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "argumentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_argumentere_v-intr_rel" ].

arkaisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arkaisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arkaisere_v-tr_rel" ].

arkebusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arkebusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arkebusere_v-tr_rel" ].

arkivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arkivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arkivere_v-tr_rel" ].

arme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "arme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

armere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "armere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_armere_v-tr_rel" ].

aromatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aromatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aromatisere_v-tr_rel" ].

arrangere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arrangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arrangere_v-tr_rel" ].

arrestere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "arrestere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_arrestere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

arrestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arrestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arrestere_v-tr_rel" ].

arretere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arretere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arretere_v-tr_rel" ].

arrivere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "arrivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arrivere_v-intr_rel" ].

arrondere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "arrondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arrondere_v-tr_rel" ].

arte_tr-refl-secpr-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "arte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arte_v-trScpr_rel" ].

artikulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "artikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_artikulere_v-intr_rel" ].

artikulere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "artikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_artikulere_v-tr_rel" ].

artikulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "artikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_artikulere_v-tr_rel" ].

artsbestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "artsbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_artsbestemme_v-tr_rel" ].

arve_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "arve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_arve_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

arve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "arve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_arve_v-tr_rel" ].

ase_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ase_v-intr_rel" ].

ase_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ase_v-trPrtcl_rel" ].

asfaltere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "asfaltere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_asfaltere_v-tr_rel" ].

aspirere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "aspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aspirere_v-intrObl_rel" ].

aspirere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "aspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aspirere_v-tr_rel" ].

assimilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "assimilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assimilere_v-tr_rel" ].

assistere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "assistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assistere_v-tr_rel" ].

assortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "assortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assortere_v-tr_rel" ].

assosiere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "assosiere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_assosiere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

assosiere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "assosiere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_assosiere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

assurere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "assurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assurere_v-trObl_rel" ].

assurere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "assurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assurere_v-tr_rel" ].

assurere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "assurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assurere_v-trObl_rel" ].

assurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "assurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_assurere_v-tr_rel" ].

astringere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "astringere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_astringere_v-tr_rel" ].

atomisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "atomisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atomisere_v-tr_rel" ].

atrofiere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "atrofiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atrofiere_v-intr_rel" ].

atskille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "atskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atskille_v-tr_rel" ].

atspre_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "atspre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atspre_v-tr_rel" ].

atspre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "atspre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atspre_v-tr_rel" ].

atsprede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "atsprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atsprede_v-tr_rel" ].

atsprede_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "atsprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_atsprede_v-tr_rel" ].

attachere_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "attachere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attachere_v-ditr_rel" ].

attachere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "attachere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_attachere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

attachere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "attachere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attachere_v-tr_rel" ].

attakkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "attakkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attakkere_v-tr_rel" ].

attestere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "attestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attestere_v-tr_rel" ].

attestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "attestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attestere_v-tr_rel" ].

attrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "attrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attrahere_v-tr_rel" ].

attrå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "attrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_attrå_v-tr_rel" ].

auke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "auke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_auke_v-intrPrtcl_rel" ].

auke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "auke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_auke_v-intr_rel" ].

auke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "auke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_auke_v-tr_rel" ].

auksjonere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "auksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_auksjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

aure_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "aure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_aure_v-intr_rel" ].

ause_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ause_v-intrObl_rel" ].

ause_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ause_v-intrPrtcl_rel" ].

ause_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ause_v-intr_rel" ].

ause_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ause_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

ause_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ause_v-tr_rel" ].

autoklavere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "autoklavere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_autoklavere_v-tr_rel" ].

automatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "automatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_automatisere_v-tr_rel" ].

autorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "autorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_autorisere_v-tr_rel" ].

avalere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "avalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avalere_v-intr_rel" ].

avalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avalere_v-tr_rel" ].

avansere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "avansere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avansere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

avansere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "avansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avansere_v-intr_rel" ].

avansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avansere_v-tr_rel" ].

avbalansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avbalansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbalansere_v-tr_rel" ].

avbestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avbestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbestille_v-tr_rel" ].

avbetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbetale_v-tr_rel" ].

avbilde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avbilde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbilde_v-tr_rel" ].

avbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbinde_v-tr_rel" ].

avblåse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avblåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avblåse_v-tr_rel" ].

avbryte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbryte_v-tr_rel" ].

avbøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avbøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbøte_v-tr_rel" ].

avbøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "avbøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avbøye_v-tr_rel" ].

avdampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avdampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdampe_v-tr_rel" ].

avdekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avdekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdekke_v-tr_rel" ].

avdele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avdele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdele_v-tr_rel" ].

avdempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avdempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdempe_v-tr_rel" ].

avdra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avdra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdra_v-tr_rel" ].

avdramatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avdramatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avdramatisere_v-tr_rel" ].

avduke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avduke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avduke_v-tr_rel" ].

avertere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "avertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avertere_v-intrObl_rel" ].

avertere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avertere_v-tr_rel" ].

avfase_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avfase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfase_v-tr_rel" ].

avfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfatte_v-tr_rel" ].

avfeie_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "avfeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfeie_v-tr_rel" ].

avfeie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "avfeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfeie_v-tr_rel" ].

avferdige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avferdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avferdige_v-tr_rel" ].

avfette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avfette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfette_v-tr_rel" ].

avfinne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "avfinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avfinne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

avfolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avfolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfolke_v-tr_rel" ].

avfyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avfyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avfyre_v-tr_rel" ].

avføde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avføde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avføde_v-tr_rel" ].

avføre_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "avføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avføre_v-ditr_rel" ].

avgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgi_v-tr_rel" ].

avgjøre_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "avgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgjøre_v-intrComp_rel" ].

avgjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "avgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgjøre_v-tr_rel" ].

avgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgjøre_v-tr_rel" ].

avgrense_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "avgrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgrense_v-tr_rel" ].

avgrense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avgrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgrense_v-tr_rel" ].

avgå_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "avgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgå_v-intrPrtcl_rel" ].

avgå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "avgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avgå_v-intr_rel" ].

avheimle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avheimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avheimle_v-tr_rel" ].

avhende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avhende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avhende_v-tr_rel" ].

avhenge_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "avhenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avhenge_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

avhente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avhente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avhente_v-tr_rel" ].

avherde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avherde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avherde_v-tr_rel" ].

avhjelpe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avhjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avhjelpe_v-tr_rel" ].

avhjemle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avhjemle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avhjemle_v-tr_rel" ].

avholde_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "avholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avholde_v-trObl_rel" ].

avholde_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "avholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avholde_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

avholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avholde_v-tr_rel" ].

avhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avhøre_v-tr_rel" ].

avise_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avise_v-tr_rel" ].

avkante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkante_v-tr_rel" ].

avkjøle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "avkjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkjøle_v-tr_rel" ].

avkjøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avkjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkjøle_v-tr_rel" ].

avkjønne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkjønne_v-tr_rel" ].

avklare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avklare_v-tr_rel" ].

avkle_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "avkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkle_v-ditr_rel" ].

avkle_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-dd,
   STEM < "avkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkle_v-ditr_rel" ].

avkle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "avkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkle_v-tr_rel" ].

avkode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkode_v-tr_rel" ].

avkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkoke_v-tr_rel" ].

avkolonisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avkolonisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkolonisere_v-tr_rel" ].

avkorte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkorte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkorte_v-tr_rel" ].

avkrefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkrefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkrefte_v-tr_rel" ].

avkreve_ditr := v-ditr &
 [ INFLECTION nonfstr-de,
   STEM < "avkreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkreve_v-ditr_rel" ].

avkreve_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "avkreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkreve_v-trObl_rel" ].

avkriminalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avkriminalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkriminalisere_v-tr_rel" ].

avkristne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avkristne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avkristne_v-tr_rel" ].

avlaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avlaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlaste_v-tr_rel" ].

avle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "avle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avle_v-intrObl_rel" ].

avle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avle_v-tr_rel" ].

avlede_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "avlede" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avlede_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

avlede_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "avlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlede_v-tr_rel" ].

avlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlede_v-tr_rel" ].

avlegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "avlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlegge_v-ditr_rel" ].

avlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlegge_v-tr_rel" ].

avleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "avleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avleie_v-tr_rel" ].

avleire_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "avleire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avleire_v-tr_rel" ].

avleire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avleire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avleire_v-tr_rel" ].

avlese_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlese_v-tr_rel" ].

avlevere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "avlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlevere_v-ditr_rel" ].

avlevere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "avlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlevere_v-trObl_rel" ].

avlevere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlevere_v-tr_rel" ].

avlive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avlive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlive_v-tr_rel" ].

avlokke_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "avlokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlokke_v-ditr_rel" ].

avlure_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "avlure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlure_v-ditr_rel" ].

avluse_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avluse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avluse_v-tr_rel" ].

avlyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlyse_v-tr_rel" ].

avlytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avlytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlytte_v-tr_rel" ].

avlåse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avlåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlåse_v-tr_rel" ].

avlønne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avlønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avlønne_v-tr_rel" ].

avløse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avløse_v-tr_rel" ].

avløyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avløyse_v-tr_rel" ].

avmagnetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avmagnetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmagnetisere_v-tr_rel" ].

avmagre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "avmagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmagre_v-tr_rel" ].

avmagre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avmagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmagre_v-tr_rel" ].

avmerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avmerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmerke_v-tr_rel" ].

avmilitarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avmilitarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmilitarisere_v-tr_rel" ].

avmytologisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avmytologisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmytologisere_v-tr_rel" ].

avmåle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avmåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmåle_v-tr_rel" ].

avmønstre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "avmønstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmønstre_v-intr_rel" ].

avmønstre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avmønstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avmønstre_v-tr_rel" ].

avnasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avnasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avnasjonalisere_v-tr_rel" ].

avnorske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avnorske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avnorske_v-tr_rel" ].

avpasse_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "avpasse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avpasse_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

avpasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avpasse_v-tr_rel" ].

avpatruljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avpatruljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avpatruljere_v-tr_rel" ].

avpolitisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avpolitisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avpolitisere_v-tr_rel" ].

avreagere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "avreagere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avreagere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

avreagere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "avreagere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avreagere_v-intr_rel" ].

avreise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "avreise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avreise_v-intr_rel" ].

avrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avrette_v-tr_rel" ].

avrime_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avrime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avrime_v-tr_rel" ].

avrunde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avrunde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avrunde_v-tr_rel" ].

avruse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "avruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avruse_v-tr_rel" ].

avruse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avruse_v-tr_rel" ].

avruste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "avruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avruste_v-intr_rel" ].

avruste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avruste_v-tr_rel" ].

avsanne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "avsanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsanne_v-tr_rel" ].

avsanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsanne_v-tr_rel" ].

avse_tr-obl-til := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "avse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avse_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

avse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avse_v-tr_rel" ].

avsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsende_v-tr_rel" ].

avsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsette_v-tr_rel" ].

avsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsi_v-tr_rel" ].

avsile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avsile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsile_v-tr_rel" ].

avskaffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskaffe_v-tr_rel" ].

avskalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "avskalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskalle_v-intr_rel" ].

avskalle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskalle_v-tr_rel" ].

avskilte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskilte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskilte_v-tr_rel" ].

avskipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskipe_v-tr_rel" ].

avskjedige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskjedige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskjedige_v-tr_rel" ].

avskjerme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskjerme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskjerme_v-tr_rel" ].

avskjære_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "avskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskjære_v-ditr_rel" ].

avskjære_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "avskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskjære_v-trObl_rel" ].

avskjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskjære_v-tr_rel" ].

avskoge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskoge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskoge_v-tr_rel" ].

avskrape_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrape_v-tr_rel" ].

avskrekke_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "avskrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrekke_v-trObl_rel" ].

avskrekke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "avskrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrekke_v-trObl_rel" ].

avskrekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avskrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrekke_v-tr_rel" ].

avskrive_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "avskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrive_v-trScpr_rel" ].

avskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avskrive_v-tr_rel" ].

avsky_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "avsky" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsky_v-tr_rel" ].

avslutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avslutte_v-tr_rel" ].

avslutte_obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "avslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avslutte_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC med-k ].

avslå_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "avslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avslå_v-tr_rel" ].

avslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avslå_v-tr_rel" ].

avsløre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "avsløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsløre_v-tr_rel" ].

avsløre_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "avsløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsløre_v-trScpr_rel" ].

avsløre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "avsløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsløre_v-trScpr_rel" ].

avsløre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avsløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsløre_v-tr_rel" ].

avsondre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "avsondre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsondre_v-trObl_rel" ].

avsondre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avsondre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsondre_v-tr_rel" ].

avsone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsone_v-tr_rel" ].

avspalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avspalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspalte_v-tr_rel" ].

avspasere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "avspasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspasere_v-intr_rel" ].

avspasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avspasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspasere_v-tr_rel" ].

avspeile_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avspeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspeile_v-tr_rel" ].

avspeile_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avspeile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avspeile_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

avspeile_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avspeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspeile_v-tr_rel" ].

avsperre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsperre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsperre_v-tr_rel" ].

avspise_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "avspise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspise_v-trObl_rel" ].

avspise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avspise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspise_v-tr_rel" ].

avspore_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspore_v-intr_rel" ].

avspore_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avspore_v-tr_rel" ].

avstedkomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avstedkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstedkomme_v-tr_rel" ].

avstemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstemme_v-tr_rel" ].

avstive_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "avstive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstive_v-tr_rel" ].

avstraffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avstraffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstraffe_v-tr_rel" ].

avstresse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "avstresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstresse_v-intr_rel" ].

avstresse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avstresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstresse_v-tr_rel" ].

avstå_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION finstr-tt,
   STEM < "avstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstå_v-trObl_rel" ].

avstå_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "avstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstå_v-trObl_rel" ].

avstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "avstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstå_v-tr_rel" ].

avstøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avstøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avstøpe_v-tr_rel" ].

avsvekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsvekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsvekke_v-tr_rel" ].

avsverge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsverge_v-tr_rel" ].

avsverje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avsverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsverje_v-tr_rel" ].

avsvi_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "avsvi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsvi_v-tr_rel" ].

avsynge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "avsynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avsynge_v-tr_rel" ].

avta_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "avta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avta_v-intrObl_rel" ].

avta_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "avta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avta_v-intr_rel" ].

avtale_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "avtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtale_v-tr_rel" ].

avtale_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "avtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtale_v-tr_rel" ].

avtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtale_v-tr_rel" ].

avtalefeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avtalefeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtalefeste_v-tr_rel" ].

avtegne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "avtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtegne_v-tr_rel" ].

avtegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtegne_v-tr_rel" ].

avtjene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avtjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtjene_v-tr_rel" ].

avtrappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avtrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtrappe_v-tr_rel" ].

avtvinge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "avtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtvinge_v-ditr_rel" ].

avtvinge_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "avtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avtvinge_v-trObl_rel" ].

avveie_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "avveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avveie_v-trObl_rel" ].

avveie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "avveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avveie_v-tr_rel" ].

avvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvende_v-tr_rel" ].

avvenne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avvenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvenne_v-trObl_rel" ].

avvenne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "avvenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvenne_v-tr_rel" ].

avvente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avvente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvente_v-tr_rel" ].

avverge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "avverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avverge_v-tr_rel" ].

avverge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avverge_v-tr_rel" ].

avverje_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "avverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avverje_v-tr_rel" ].

avverje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avverje_v-tr_rel" ].

avvike_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "avvike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_avvike_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

avvikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvikle_v-tr_rel" ].

avvirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvirke_v-tr_rel" ].

avvise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "avvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvise_v-tr_rel" ].

avvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "avvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvise_v-tr_rel" ].

avvæpne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "avvæpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_avvæpne_v-tr_rel" ].

bable_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bable_v-intr_rel" ].

bade_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bade_v-intr_rel" ].

bade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bade_v-tr_rel" ].

bagatellisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bagatellisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bagatellisere_v-tr_rel" ].

baisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "baisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baisse_v-intr_rel" ].

bakbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bakbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakbinde_v-tr_rel" ].

bake_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "bake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bake_v-ditr_rel" ].

bake_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bake_v-intr_rel" ].

bake_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bake_v-tr_rel" ].

bakke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "bakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakke_v-intrImpersObl_rel" ].

bakke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakke_v-intrPrtcl_rel" ].

bakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakke_v-intr_rel" ].

bakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

bakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakke_v-tr_rel" ].

bakse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakse_v-intrObl_rel" ].

bakse_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakse_v-tr_rel" ].

bakse_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakse_v-trPath_rel" ].

baksnakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "baksnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baksnakke_v-tr_rel" ].

baktale_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "baktale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baktale_v-tr_rel" ].

bakvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bakvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bakvaske_v-tr_rel" ].

balansere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "balansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_balansere_v-intr_rel" ].

balansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "balansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_balansere_v-tr_rel" ].

bale_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bale_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

balkanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "balkanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_balkanisere_v-tr_rel" ].

ballaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ballaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ballaste_v-tr_rel" ].

ballottere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ballottere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ballottere_v-intr_rel" ].

balsamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "balsamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_balsamere_v-tr_rel" ].

banalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "banalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banalisere_v-tr_rel" ].

bandasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bandasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bandasjere_v-tr_rel" ].

bande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bande_v-tr_rel" ].

bandlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bandlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bandlegge_v-tr_rel" ].

bane_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bane_v-ditr_rel" ].

bane_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bane_v-trObl_rel" ].

bane_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bane_v-trPath_rel" ].

bane_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bane_v-tr_rel" ].

banke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "banke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_banke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

banke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "banke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banke_v-intr_rel" ].

banke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "banke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

banke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "banke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banke_v-tr_rel" ].

banne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "banne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banne_v-intrObl_rel" ].

banne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "banne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_banne_v-intr_rel" ].

bannlyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bannlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bannlyse_v-tr_rel" ].

bannsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bannsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bannsette_v-tr_rel" ].

barbere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "barbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barbere_v-tr_rel" ].

barbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "barbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barbere_v-tr_rel" ].

bardunere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bardunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bardunere_v-tr_rel" ].

bare_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "bare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bare_v-trObl_rel" ].

bare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bare_v-tr_rel" ].

bare_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bare_v-trObl_rel" ].

barke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "barke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barke_v-tr_rel" ].

barrikadere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "barrikadere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barrikadere_v-tr_rel" ].

barrikadere_tr-refl-obl-mot := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "barrikadere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_barrikadere_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

barrikadere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "barrikadere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barrikadere_v-tr_rel" ].

barske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "barske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_barske_v-tr_rel" ].

base_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "base" >,
   SYNSEM.LKEYS.KEYREL.PRED "_base_v-intr_rel" ].

basere_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "basere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_basere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

basere_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "basere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_basere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

baske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "baske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baske_v-intrObl_rel" ].

baske_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "baske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baske_v-trPath_rel" ].

baste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "baste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baste_v-tr_rel" ].

basunere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "basunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_basunere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

baute_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "baute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_baute_v-trPath_rel" ].

be_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_be_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

be_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_be_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

be_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_be_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

be_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM.LKEYS.KEYREL.PRED "_be_v-intr_rel" ].

be_tr-obl-om := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_be_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

be_tr-obl-på := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_be_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

be_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "be" >,
   SYNSEM.LKEYS.KEYREL.PRED "_be_v-tr_rel" ].

bearbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bearbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bearbeide_v-tr_rel" ].

bebo_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bebo" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebo_v-tr_rel" ].

bebreide_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bebreide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebreide_v-ditr_rel" ].

bebreide_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bebreide" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bebreide_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

bebreide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bebreide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebreide_v-tr_rel" ].

bebude_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bebude" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebude_v-tr_rel" ].

bebude_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bebude" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebude_v-tr_rel" ].

bebygge_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "bebygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bebygge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bebygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bebygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebygge_v-tr_rel" ].

bebyrde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bebyrde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bebyrde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bebyrde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bebyrde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bebyrde_v-tr_rel" ].

bedage_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bedage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedage_v-intr_rel" ].

bede_acc-cum-inf := v-trScpr-scObNrg_scBareinf &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-trScpr_rel" ].

bede_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-intrObl_rel" ].

bede_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-intr_rel" ].

bede_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-trObl_rel" ].

bede_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-trObl_rel" ].

bede_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bede_v-tr_rel" ].

bedekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bedekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedekke_v-tr_rel" ].

bedre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedre_v-tr_rel" ].

bedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedre_v-tr_rel" ].

bedrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bedrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedrive_v-tr_rel" ].

bedrøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bedrøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedrøve_v-tr_rel" ].

bedyre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bedyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedyre_v-tr_rel" ].

bedyre_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bedyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedyre_v-tr_rel" ].

bedåre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bedåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedåre_v-tr_rel" ].

bedømme_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "bedømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bedømme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

bedømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bedømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedømme_v-tr_rel" ].

bedøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bedøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bedøve_v-tr_rel" ].

beedige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beedige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beedige_v-tr_rel" ].

befale_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "befale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befale_v-intrObl_rel" ].

befale_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-te,
   STEM < "befale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befale_v-ditr_rel" ].

befale_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "befale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befale_v-tr_rel" ].

befare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "befare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befare_v-tr_rel" ].

befatte_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "befatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befatte_v-trObl_rel" ].

befatte_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "befatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_befatte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

befeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "befeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befeste_v-tr_rel" ].

befinne_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "befinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_befinne_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

befinne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "befinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_befinne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

befinne_tr-secpr-adj := v-trScpr-scObNrg_scAdj &
 [ INFLECTION nonfstr-strong,
   STEM < "befinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befinne_v-trScpr_rel" ].

beflitte_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "beflitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beflitte_v-trObl_rel" ].

beflitte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beflitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beflitte_v-trObl_rel" ].

befolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "befolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befolke_v-tr_rel" ].

befordre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "befordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befordre_v-tr_rel" ].

befrakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "befrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befrakte_v-tr_rel" ].

befri_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "befri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_befri_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

befri_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "befri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_befri_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

befri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "befri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befri_v-tr_rel" ].

befrukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "befrukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_befrukte_v-tr_rel" ].

beføle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "beføle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beføle_v-tr_rel" ].

begeistre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "begeistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begeistre_v-intr_rel" ].

begeistre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "begeistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begeistre_v-tr_rel" ].

begi_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION finstr-tt,
   STEM < "begi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begi_v-trPath_rel" ].

begi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "begi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begi_v-tr_rel" ].

begjære_acc-cum-inf := v-trScpr-scObNrg_scBareinf &
 [ INFLECTION nonfstr-te,
   STEM < "begjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begjære_v-trScpr_rel" ].

begjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "begjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begjære_v-tr_rel" ].

beglo_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "beglo" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beglo_v-tr_rel" ].

begrave_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "begrave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrave_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

begrave_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "begrave" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begrave_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

begrave_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "begrave" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begrave_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

begrave_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "begrave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrave_v-tr_rel" ].

begrense_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "begrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrense_v-tr_rel" ].

begrense_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "begrense" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begrense_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

begrense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "begrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrense_v-tr_rel" ].

begrepsbestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "begrepsbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrepsbestemme_v-tr_rel" ].

begripe_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "begripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begripe_v-intrComp_rel" ].

begripe_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "begripe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begripe_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

begripe_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "begripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begripe_v-tr_rel" ].

begripe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "begripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begripe_v-tr_rel" ].

begrunne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "begrunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrunne_v-intrComp_rel" ].

begrunne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "begrunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrunne_v-tr_rel" ].

begrunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "begrunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begrunne_v-tr_rel" ].

begunstige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "begunstige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begunstige_v-tr_rel" ].

begynne_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "begynne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begynne_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

begynne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "begynne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_begynne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

begynne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "begynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begynne_v-tr_rel" ].

begynne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "begynne" >,
   SYNSEM.LOCAL.CAT.QVAL.DOBJECT.LOCAL.CONT.HOOK.INDEX.SORT referential-thing,
   SYNSEM.LKEYS.KEYREL.PRED "_begynne_v-tr_rel" ].

begå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "begå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_begå_v-tr_rel" ].

behage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "behage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behage_v-tr_rel" ].

behandle_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "behandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behandle_v-trAdv_rel" ].

behandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "behandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behandle_v-tr_rel" ].

behefte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "behefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behefte_v-trObl_rel" ].

behefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "behefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behefte_v-tr_rel" ].

beherske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beherske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beherske_v-tr_rel" ].

beherske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beherske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beherske_v-tr_rel" ].

beholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "beholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beholde_v-tr_rel" ].

behøve_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-de,
   STEM < "behøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behøve_v-tr_rel" ].

behøve_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "behøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behøve_v-tr_rel" ].

behøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "behøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_behøve_v-tr_rel" ].

beile_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "beile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beile_v-intrObl_rel" ].

beine_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "beine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beine_v-intr_rel" ].

beine_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "beine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beine_v-tr_rel" ].

beine_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beine_v-tr_rel" ].

beinflyge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "beinflyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beinflyge_v-intr_rel" ].

beinflyge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "beinflyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beinflyge_v-intr_rel" ].

beinke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "beinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beinke_v-intrObl_rel" ].

beinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beinke_v-tr_rel" ].

beise_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beise_v-tr_rel" ].

beiskne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "beiskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beiskne_v-intr_rel" ].

beite_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "beite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beite_v-intr_rel" ].

beite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beite_v-tr_rel" ].

bejae_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bejae" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bejae_v-tr_rel" ].

beke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "beke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beke_v-tr_rel" ].

beke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "beke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beke_v-tr_rel" ].

bekjempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bekjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjempe_v-tr_rel" ].

bekjenne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bekjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjenne_v-ditr_rel" ].

bekjenne_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bekjenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bekjenne_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

bekjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bekjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjenne_v-tr_rel" ].

bekjentgjøre_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "bekjentgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjentgjøre_v-intrComp_rel" ].

bekjentgjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "bekjentgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjentgjøre_v-tr_rel" ].

bekjentgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bekjentgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekjentgjøre_v-tr_rel" ].

beklage_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklage_v-intr_rel" ].

beklage_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklage_v-intrComp_rel" ].

beklage_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklage_v-tr_rel" ].

beklage_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beklage_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

beklage_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beklage_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

beklage_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklage_v-tr_rel" ].

beklage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklage_v-tr_rel" ].

bekle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekle_v-tr_rel" ].

beklippe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "beklippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beklippe_v-tr_rel" ].

bekomme_tr-obladv := v-trAdv &
 [ INFLECTION nonfstr-strong,
   STEM < "bekomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekomme_v-trAdv_rel" ].

bekoste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bekoste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekoste_v-tr_rel" ].

bekranse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bekranse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekranse_v-tr_rel" ].

bekrefte_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "bekrefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekrefte_v-intrComp_rel" ].

bekrefte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bekrefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekrefte_v-tr_rel" ].

bekrefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bekrefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekrefte_v-tr_rel" ].

beksle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beksle_v-tr_rel" ].

bekvemme_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "bekvemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekvemme_v-trObl_rel" ].

bekvemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bekvemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekvemme_v-tr_rel" ].

bekymre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bekymre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bekymre_v-tr_rel" ].

bekymre_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bekymre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bekymre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

bekymre_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bekymre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bekymre_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

belage_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "belage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_belage_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

belaste_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "belaste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_belaste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

belaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "belaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belaste_v-tr_rel" ].

belegge_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "belegge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_belegge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

belegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "belegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belegge_v-tr_rel" ].

beleire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beleire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beleire_v-tr_rel" ].

belemre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "belemre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belemre_v-trObl_rel" ].

belesse_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "belesse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_belesse_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

belje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "belje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belje_v-intr_rel" ].

belje_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "belje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belje_v-trScprShft_rel" ].

belje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "belje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belje_v-tr_rel" ].

belme_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "belme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belme_v-trScprShft_rel" ].

belme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "belme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belme_v-tr_rel" ].

belyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "belyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belyse_v-tr_rel" ].

belåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "belåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belåne_v-tr_rel" ].

belære_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "belære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belære_v-ditr_rel" ].

belære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "belære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belære_v-tr_rel" ].

belønne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "belønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_belønne_v-tr_rel" ].

beløpe_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "beløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beløpe_v-trObl_rel" ].

bemanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bemanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemanne_v-tr_rel" ].

bemektige_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bemektige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemektige_v-ditr_rel" ].

bemerke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bemerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemerke_v-tr_rel" ].

bemerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bemerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemerke_v-tr_rel" ].

bemyndige_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "bemyndige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemyndige_v-trObl_rel" ].

bemyndige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bemyndige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemyndige_v-tr_rel" ].

bemøye_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "bemøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bemøye_v-trObl_rel" ].

bende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bende_v-tr_rel" ].

bene_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "bene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bene_v-intr_rel" ].

bene_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bene_v-tr_rel" ].

bene_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bene_v-tr_rel" ].

benekte_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "benekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benekte_v-intrComp_rel" ].

benekte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "benekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benekte_v-tr_rel" ].

benekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "benekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benekte_v-tr_rel" ].

benevne_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "benevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benevne_v-ditr_rel" ].

benevne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "benevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benevne_v-tr_rel" ].

benke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "benke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benke_v-intrObl_rel" ].

benke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "benke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benke_v-tr_rel" ].

benke_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "benke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benke_v-trObl_rel" ].

benke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "benke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benke_v-tr_rel" ].

benytte_tr-refl-obl-av := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "benytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_benytte_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

benytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "benytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benytte_v-tr_rel" ].

benåde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "benåde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_benåde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

benåde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "benåde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_benåde_v-tr_rel" ].

beordre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "beordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beordre_v-trObl_rel" ].

beordre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "beordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beordre_v-trScpr_rel" ].

beordre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "beordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beordre_v-tr_rel" ].

beordre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beordre_v-tr_rel" ].

beplante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beplante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beplante_v-tr_rel" ].

beramme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beramme_v-trObl_rel" ].

beramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beramme_v-tr_rel" ].

berede_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "berede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berede_v-trObl_rel" ].

berede_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "berede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berede_v-tr_rel" ].

beregne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-ditr_rel" ].

beregne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-tr_rel" ].

beregne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-intrComp_rel" ].

beregne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-trObl_rel" ].

beregne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-tr_rel" ].

beregne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beregne_v-tr_rel" ].

berekne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-ditr_rel" ].

berekne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-tr_rel" ].

berekne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-intrComp_rel" ].

berekne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-trObl_rel" ].

berekne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-tr_rel" ].

berekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "berekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berekne_v-tr_rel" ].

berette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "berette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berette_v-intrObl_rel" ].

berette_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "berette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berette_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

berette_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "berette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berette_v-tr_rel" ].

berette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "berette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berette_v-tr_rel" ].

berettige_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "berettige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berettige_v-trObl_rel" ].

berettige_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "berettige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berettige_v-tr_rel" ].

berge_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "berge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berge_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

berge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "berge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berge_v-tr_rel" ].

berge_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "berge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berge_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

berge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "berge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berge_v-tr_rel" ].

bergta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "bergta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bergta_v-tr_rel" ].

berike_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "berike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berike_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

berike_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "berike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berike_v-tr_rel" ].

berike_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "berike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berike_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

berike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "berike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berike_v-tr_rel" ].

beriktige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beriktige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beriktige_v-tr_rel" ].

bero_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "bero" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bero_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bero_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "bero" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bero_v-intr_rel" ].

berolige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "berolige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berolige_v-tr_rel" ].

berte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "berte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berte_v-intr_rel" ].

beruse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beruse_v-tr_rel" ].

beruse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beruse_v-tr_rel" ].

berømme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "berømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berømme_v-trObl_rel" ].

berømme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "berømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berømme_v-tr_rel" ].

berømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "berømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berømme_v-tr_rel" ].

berøre_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "berøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berøre_v-trObl_rel" ].

berøre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "berøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_berøre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

berøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "berøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berøre_v-tr_rel" ].

berøve_ditr := v-ditr &
 [ INFLECTION nonfstr-de,
   STEM < "berøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_berøve_v-ditr_rel" ].

bese_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "bese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bese_v-tr_rel" ].

besegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besegle_v-tr_rel" ].

beseire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beseire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beseire_v-tr_rel" ].

besette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "besette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besette_v-tr_rel" ].

besifre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besifre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besifre_v-tr_rel" ].

besikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besikte_v-tr_rel" ].

besiktige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besiktige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besiktige_v-tr_rel" ].

besinne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "besinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besinne_v-tr_rel" ].

besitte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "besitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besitte_v-tr_rel" ].

besjele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "besjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besjele_v-tr_rel" ].

beskadige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beskadige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskadige_v-tr_rel" ].

beskatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beskatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskatte_v-tr_rel" ].

beskikke_obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beskikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskikke_v-trAdv_rel" ].

;beskikke_tr-obl := v-trObl &
; [ INFLECTION nonfstr-et,
;   STEM < "beskikke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_beskikke_v_rel" ].

beskikke_tr-secpr-til := v-trScpr-scObNrg_scPredprtclTil &
 [ INFLECTION nonfstr-et,
   STEM < "beskikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskikke_v-trScpr_rel" ].

;beskikke_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "beskikke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_beskikke_v_rel" ].

beskjeftige_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beskjeftige" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beskjeftige_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

beskjeftige_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "beskjeftige" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beskjeftige_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

beskjeftige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beskjeftige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskjeftige_v-tr_rel" ].

beskjære_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "beskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskjære_v-ditr_rel" ].

beskjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "beskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskjære_v-tr_rel" ].

beskne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "beskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskne_v-intr_rel" ].

beskrive_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "beskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskrive_v-intrComp_rel" ].

beskrive_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "beskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskrive_v-trScpr_rel" ].

beskrive_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "beskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskrive_v-tr_rel" ].

beskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "beskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskrive_v-tr_rel" ].

beskue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beskue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskue_v-tr_rel" ].

beskylde_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "beskylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskylde_v-trObl_rel" ].

beskylde_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "beskylde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beskylde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

beskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "beskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskyte_v-tr_rel" ].

beskytte_tr-obl-mot := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beskytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beskytte_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

beskytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beskytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beskytte_v-tr_rel" ].

beslaglegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "beslaglegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslaglegge_v-tr_rel" ].

beslutte_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "beslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslutte_v-trObl_rel" ].

beslutte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "beslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslutte_v-tr_rel" ].

beslutte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "beslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslutte_v-tr_rel" ].

beslutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslutte_v-tr_rel" ].

beslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "beslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beslå_v-tr_rel" ].

besmitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besmitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besmitte_v-tr_rel" ].

besnakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besnakke_v-tr_rel" ].

besnære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "besnære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besnære_v-tr_rel" ].

bespise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bespise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bespise_v-tr_rel" ].

bespotte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bespotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bespotte_v-tr_rel" ].

bestemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-intr_rel" ].

bestemme_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-trObl_rel" ].

bestemme_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-intrComp_rel" ].

bestemme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-trObl_rel" ].

bestemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-tr_rel" ].

bestemme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-tr_rel" ].

bestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestemme_v-tr_rel" ].

bestige_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bestige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestige_v-tr_rel" ].

bestikke_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "bestikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestikke_v-trObl_rel" ].

bestikke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bestikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestikke_v-tr_rel" ].

bestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestille_v-tr_rel" ].

bestjele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bestjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestjele_v-tr_rel" ].

bestorme_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bestorme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bestorme_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bestorme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bestorme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestorme_v-tr_rel" ].

bestrebe_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "bestrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestrebe_v-trObl_rel" ].

bestrebe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bestrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestrebe_v-tr_rel" ].

bestri_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-dd,
   STEM < "bestri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestri_v-intrComp_rel" ].

bestri_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "bestri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestri_v-tr_rel" ].

bestri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bestri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestri_v-tr_rel" ].

bestride_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "bestride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestride_v-intrComp_rel" ].

bestride_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "bestride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestride_v-tr_rel" ].

bestride_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bestride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestride_v-tr_rel" ].

bestryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bestryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestryke_v-tr_rel" ].

bestråle_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bestråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestråle_v-tr_rel" ].

bestykke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bestykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestykke_v-trObl_rel" ].

bestykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bestykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestykke_v-tr_rel" ].

bestyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bestyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestyre_v-tr_rel" ].

bestyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bestyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestyrke_v-tr_rel" ].

bestå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "bestå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bestå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bestå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "bestå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestå_v-intr_rel" ].

bestå_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION finstr-tt,
   STEM < "bestå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestå_v-intrObl_rel" ].

bestå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "bestå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestå_v-tr_rel" ].

bestøve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bestøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bestøve_v-tr_rel" ].

besudle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besudle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besudle_v-tr_rel" ].

besvangre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besvangre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvangre_v-tr_rel" ].

besvare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "besvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvare_v-tr_rel" ].

besverge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besverge_v-tr_rel" ].

besverje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besverje_v-tr_rel" ].

besvime_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "besvime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvime_v-intr_rel" ].

besvære_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "besvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvære_v-trObl_rel" ].

besvære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "besvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvære_v-tr_rel" ].

besvære_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "besvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvære_v-trObl_rel" ].

besvære_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "besvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besvære_v-tr_rel" ].

besynge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "besynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besynge_v-tr_rel" ].

besøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "besøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besøke_v-tr_rel" ].

besørge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "besørge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besørge_v-tr_rel" ].

besørge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "besørge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_besørge_v-tr_rel" ].

beta_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "beta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beta_v-ditr_rel" ].

beta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "beta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beta_v-tr_rel" ].

betakke_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "betakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betakke_v-trObl_rel" ].

betakke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "betakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betakke_v-tr_rel" ].

betakke_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "betakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_betakke_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

betale_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betale_v-ditr_rel" ].

betale_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_betale_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

betale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betale_v-intr_rel" ].

betale_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_betale_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

betale_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betale_v-tr_rel" ].

betale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "betale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betale_v-tr_rel" ].

bete_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "bete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bete_v-tr_rel" ].

bete_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION finstr-dd,
   STEM < "bete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bete_v-trScpr_rel" ].

betegne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "betegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betegne_v-trScpr_rel" ].

betegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "betegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betegne_v-tr_rel" ].

betenke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "betenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betenke_v-trObl_rel" ].

betenke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "betenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betenke_v-tr_rel" ].

betenke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "betenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betenke_v-tr_rel" ].

betinge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "betinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betinge_v-ditr_rel" ].

betinge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "betinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betinge_v-tr_rel" ].

betjene_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "betjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betjene_v-trObl_rel" ].

betjene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "betjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betjene_v-tr_rel" ].

betle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "betle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betle_v-intr_rel" ].

betone_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "betone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betone_v-trScpr_rel" ].

betone_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "betone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betone_v-tr_rel" ].

betrakte_acc-cum-inf := v-trScpr-scObNrg_scBareinf &
 [ INFLECTION nonfstr-et,
   STEM < "betrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betrakte_v-trScpr_rel" ].

betrakte_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "betrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betrakte_v-trScpr_rel" ].

betrakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "betrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betrakte_v-tr_rel" ].

betre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "betre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betre_v-tr_rel" ].

betrede_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "betrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betrede_v-tr_rel" ].

betro_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "betro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betro_v-ditr_rel" ].

betro_ditr-subord := v-ditr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "betro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betro_v-ditr_rel" ].

betro_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "betro" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_betro_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

betvile_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "betvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betvile_v-tr_rel" ].

betvile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "betvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betvile_v-tr_rel" ].

betvinge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "betvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_betvinge_v-tr_rel" ].

bety_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "bety" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bety_v-tr_rel" ].

bety_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bety" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bety_v-tr_rel" ].

beundre_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beundre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beundre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

bevare_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "bevare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevare_v-trObl_rel" ].

bevare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bevare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevare_v-tr_rel" ].

beve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "beve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beve_v-intr_rel" ].

bevege_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-de,
   STEM < "bevege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevege_v-trObl_rel" ].

bevege_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "bevege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevege_v-tr_rel" ].

bevege_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bevege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevege_v-tr_rel" ].

beverte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beverte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beverte_v-trObl_rel" ].

beverte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beverte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beverte_v-tr_rel" ].

bevilge_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "bevilge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevilge_v-ditr_rel" ].

bevilge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bevilge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevilge_v-ditr_rel" ].

bevilge_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bevilge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bevilge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

bevilge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bevilge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevilge_v-tr_rel" ].

bevirke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bevirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevirke_v-tr_rel" ].

bevirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bevirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevirke_v-tr_rel" ].

bevise_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "bevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevise_v-intrComp_rel" ].

bevise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "bevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevise_v-tr_rel" ].

bevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevise_v-tr_rel" ].

bevisstgjøre_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "bevisstgjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bevisstgjøre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

bevisstgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bevisstgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevisstgjøre_v-tr_rel" ].

bevitne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "bevitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevitne_v-tr_rel" ].

bevitne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bevitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevitne_v-tr_rel" ].

bevokte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bevokte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevokte_v-tr_rel" ].

bevre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevre_v-intr_rel" ].

bevæpne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bevæpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevæpne_v-tr_rel" ].

bevæpne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bevæpne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bevæpne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bevæpne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bevæpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bevæpne_v-tr_rel" ].

beånde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beånde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beånde_v-tr_rel" ].

beære_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "beære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_beære_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

beære_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "beære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_beære_v-tr_rel" ].

bibeholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bibeholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bibeholde_v-tr_rel" ].

bibringe_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "bibringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bibringe_v-ditr_rel" ].

bibringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bibringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bibringe_v-tr_rel" ].

bidra_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "bidra" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bidra_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bie_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bie_v-intrObl_rel" ].

bie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bie_v-intr_rel" ].

bifalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bifalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bifalle_v-tr_rel" ].

bikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bikke_v-intr_rel" ].

bikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bikke_v-tr_rel" ].

bikte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bikte_v-tr_rel" ].

bikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bikte_v-tr_rel" ].

bile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bile_v-intr_rel" ].

bile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "bile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bile_v-trScpr_rel" ].

bilegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bilegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bilegge_v-tr_rel" ].

billettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "billettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_billettere_v-intr_rel" ].

billige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "billige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_billige_v-tr_rel" ].

;binde_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr-strong,
;   STEM < "binde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_binde_v-intrObl_rel" ].

binde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_binde_v-trScpr_rel" ].

binde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_binde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

binde_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_binde_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

binde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_binde_v-tr_rel" ].

binde_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_binde_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

binde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "binde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_binde_v-tr_rel" ].

bisette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bisette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bisette_v-tr_rel" ].

bistå_tr-obl-med := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "bistå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bistå_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bistå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "bistå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bistå_v-tr_rel" ].

bite_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "bite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bite_v-intrObl_rel" ].

bite_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bite_v-intr_rel" ].

bite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC fast-k ].

bite_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "bite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bite_v-trScprShft_rel" ].

bite_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bite_v-tr_rel" ].

bivuakkere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bivuakkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bivuakkere_v-intr_rel" ].

bivåne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bivåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bivåne_v-tr_rel" ].

bla_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "bla" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bla_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

bla_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "bla" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bla_v-intrPrtcl_rel" ].

bla_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "bla" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bla_v-intr_rel" ].

blaffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blaffe_v-intr_rel" ].

blafre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blafre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blafre_v-intr_rel" ].

blakke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "blakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blakke_v-tr_rel" ].

blakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blakke_v-tr_rel" ].

blakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blakne_v-intr_rel" ].

blakre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blakre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blakre_v-intr_rel" ].

blamere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "blamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blamere_v-tr_rel" ].

blamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blamere_v-tr_rel" ].

blande_tr-arg12-secpred_ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blande_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

blande_tr-arg12-secpred_sammen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blande_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

blande_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blande_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

blande_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blande_v-tr_rel" ].

blande_tr-refl-obl-borti := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blande_v-trObl_rel",
            LOCAL.KEY-SPEC borti-k ] ].

blande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blande_v-tr_rel" ].

blanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blanke_v-tr_rel" ].

blankpusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blankpusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blankpusse_v-tr_rel" ].

blankslite_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "blankslite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blankslite_v-tr_rel" ].

blasonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blasonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blasonere_v-tr_rel" ].

blautgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "blautgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blautgjøre_v-tr_rel" ].

blautkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blautkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blautkoke_v-tr_rel" ].

bleige_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bleige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bleige_v-tr_rel" ].

bleike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bleike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bleike_v-tr_rel" ].

bleikne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bleikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bleikne_v-intr_rel" ].

bleke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bleke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bleke_v-tr_rel" ].

blekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "blekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blekke_v-intrObl_rel" ].

blekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "blekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

blekne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blekne_v-intr_rel" ].

blende_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blende_v-tr_rel" ].

bli_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "bli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bli_v-intrPrtcl_rel" ].

blidgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "blidgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blidgjøre_v-tr_rel" ].

blinde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blinde_v-tr_rel" ].

blingse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blingse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blingse_v-intr_rel" ].

blinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blinke_v-intr_rel" ].

blinke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "blinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blinke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

blinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blinke_v-tr_rel" ].

blitse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blitse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blitse_v-intr_rel" ].

blive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "blive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blive_v-intr_rel" ].

blogge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blogge_v-tr_rel" ].

blokke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "blokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blokke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

blokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blokke_v-tr_rel" ].

blokkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blokkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blokkere_v-tr_rel" ].

blomstre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "blomstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blomstre_v-intrPrtcl_rel" ].

blomstre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blomstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blomstre_v-intr_rel" ].

blote_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "blote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blote_v-intrObl_rel" ].

blote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blote_v-intr_rel" ].

blote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blote_v-tr_rel" ].

blotte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "blotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blotte_v-tr_rel" ].

blotte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "blotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blotte_v-tr_rel" ].

blottlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "blottlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blottlegge_v-tr_rel" ].

blottstille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "blottstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blottstille_v-tr_rel" ].

blottstille_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "blottstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blottstille_v-trObl_rel" ].

blottstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blottstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blottstille_v-tr_rel" ].

blues_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "blues" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blues_v-intr_rel" ].

blunde_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "blunde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blunde_v-intrPrtcl_rel" ].

blunde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blunde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blunde_v-intr_rel" ].

blunke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blunke_v-intr_rel" ].

blusse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "blusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blusse_v-intrPrtcl_rel" ].

blyges_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "blyges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blyges_v-intrObl_rel" ].

blyges_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "blyges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blyges_v-intr_rel" ].

blåholde_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "blåholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blåholde_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

blåholde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "blåholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blåholde_v-tr_rel" ].

blåne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blåne_v-intr_rel" ].

blånekte_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "blånekte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blånekte_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

blånekte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "blånekte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blånekte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

blånekte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blånekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blånekte_v-intr_rel" ].

blånekte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "blånekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blånekte_v-tr_rel" ].

blåse_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "blåse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blåse_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

blåse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "blåse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_blåse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

blåse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "blåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blåse_v-intrPrtcl_rel" ].

blåse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "blåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blåse_v-trScpr_rel" ].

blåse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "blåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blåse_v-tr_rel" ].

blære_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "blære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blære_v-intr_rel" ].

blære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "blære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blære_v-tr_rel" ].

blø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "blø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blø_v-intr_rel" ].

blø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "blø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_blø_v-tr_rel" ].

bløde_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "bløde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløde_v-intr_rel" ].

bløde_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bløde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløde_v-tr_rel" ].

bløffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bløffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløffe_v-intr_rel" ].

bløffe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bløffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløffe_v-trPrtcl_rel" ].

bløffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bløffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløffe_v-tr_rel" ].

bløgge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bløgge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløgge_v-tr_rel" ].

bløte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bløte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløte_v-tr_rel" ].

bløte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bløte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløte_v-tr_rel" ].

bløtgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bløtgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløtgjøre_v-tr_rel" ].

bløtkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bløtkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløtkoke_v-tr_rel" ].

bløtlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bløtlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløtlegge_v-tr_rel" ].

bløyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløyte_v-tr_rel" ].

bløyte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløyte_v-tr_rel" ].

bløytlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bløytlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bløytlegge_v-tr_rel" ].

;bo_intr-obl-i := v-intrObl-oblN &
; [ INFLECTION finstr-dd,
;   STEM < "bo" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_bo_v_rel",
;            LOCAL.KEY-SPEC i-k ] ].


boble_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "boble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boble_v-intrPrtcl_rel" ].

boble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "boble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boble_v-intr_rel" ].

boge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "boge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boge_v-tr_rel" ].

boge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "boge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boge_v-tr_rel" ].

bogne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bogne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bogne_v-intr_rel" ].

boikotte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "boikotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boikotte_v-tr_rel" ].

bokføre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "bokføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokføre_v-trScpr_rel" ].

bokføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bokføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokføre_v-tr_rel" ].

bokne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bokne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokne_v-intr_rel" ].

bokse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokse_v-intr_rel" ].

bokse_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokse_v-tr_rel" ].

bokse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokse_v-tr_rel" ].

bokstavere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bokstavere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bokstavere_v-tr_rel" ].

bole_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bole_v-intr_rel" ].

bole_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bole_v-tr_rel" ].

bolne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bolne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bolne_v-intrPrtcl_rel" ].

bolte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bolte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bolte_v-trScpr_rel" ].

bolte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bolte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bolte_v-tr_rel" ].

boltre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "boltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_boltre_v-tr_rel" ].

bombardere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "bombardere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bombardere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bombardere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bombardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bombardere_v-tr_rel" ].

bombe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bombe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bombe_v-tr_rel" ].

bomme_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bomme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bomme_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bomme_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bomme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bomme_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bomme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bomme_v-intr_rel" ].

bomme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bomme_v-trObl_rel" ].

bomme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bomme_v-tr_rel" ].

bone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bone_v-tr_rel" ].

bonge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bonge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bonge_v-tr_rel" ].

bonitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bonitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bonitere_v-tr_rel" ].

booke_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "booke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_booke_v-ditr_rel" ].

booke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "booke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_booke_v-tr_rel" ].

;borde_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "borde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_borde_v_rel" ].

;borde_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "borde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_borde_v_rel" ].

bordkle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bordkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bordkle_v-tr_rel" ].

bore_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bore" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bore_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

bore_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bore_v-intr_rel" ].

bore_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bore_v-trScpr_rel" ].

bore_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bore_v-trPath_rel" ].

bore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bore_v-tr_rel" ].

borge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "borge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_borge_v-intrObl_rel" ].

bortbygsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bortbygsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortbygsle_v-tr_rel" ].

bortfalle_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bortfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortfalle_v-intr_rel" ].

bortfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bortfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortfeste_v-tr_rel" ].

bortforklare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bortforklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortforklare_v-tr_rel" ].

bortfrakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bortfrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortfrakte_v-tr_rel" ].

bortføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bortføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortføre_v-tr_rel" ].

bortlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bortlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortlede_v-tr_rel" ].

bortse_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "bortse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bortse_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

bortsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bortsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortsette_v-tr_rel" ].

bortødsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bortødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bortødsle_v-tr_rel" ].

bosette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bosette_v-trScpr_rel" ].

bosette_tr-refl-obl-bak := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bosette_v-trObl_rel",
            LOCAL.KEY-SPEC bak-k ] ].

bosette_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bosette_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

bosette_tr-refl-obl-mellom := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bosette_v-trObl_rel",
            LOCAL.KEY-SPEC mellom-k ] ].

bosette_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bosette_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bosette_tr-refl-obl-under := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bosette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bosette_v-trObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

botanisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "botanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botanisere_v-intr_rel" ].

botlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "botlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botlegge_v-tr_rel" ].

botne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "botne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botne_v-intrObl_rel" ].

botne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "botne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botne_v-intr_rel" ].

botne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "botne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botne_v-tr_rel" ].

botnfelle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "botnfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botnfelle_v-tr_rel" ].

botnfelle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "botnfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botnfelle_v-tr_rel" ].

botnfryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "botnfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botnfryse_v-intr_rel" ].

botnskrape_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "botnskrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_botnskrape_v-tr_rel" ].

bowle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bowle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bowle_v-intr_rel" ].

brake_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "brake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brake_v-intrImpers_rel" ].

brake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brake_v-intr_rel" ].

brakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brakke_v-tr_rel" ].

bramme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bramme_v-intr_rel" ].

brase_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "brase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brase_v-intr_rel" ].

brase_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brase_v-intr_rel" ].

braske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "braske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_braske_v-intr_rel" ].

braske_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "braske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_braske_v-trObl_rel" ].

bratne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bratne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bratne_v-intr_rel" ].

braute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "braute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_braute_v-intr_rel" ].

braute_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "braute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_braute_v-trPath_rel" ].

bravere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bravere_v-intr_rel" ].

bravere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "bravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bravere_v-trObl_rel" ].

;bre_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION finstr-dd,
;   STEM < "bre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_bre_v_rel" ].

bre_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "bre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bre_v-tr_rel" ].

bre_tv-dir := v-tr-obDir &
 [ INFLECTION finstr-dd,
   STEM < "bre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bre_v-tr_rel" ].

breie_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_breie_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

breie_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_breie_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

breie_tr-obl-over := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_breie_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

breie_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breie_v-trScprShft_rel" ].

breie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breie_v-tr_rel" ].

breie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "breie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breie_v-tr_rel" ].

breke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "breke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breke_v-intr_rel" ].

brekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "brekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brekke_v-trScpr_rel" ].

brekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "brekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brekke_v-tr_rel" ].

brekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "brekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brekke_v-tr_rel" ].

bremme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bremme_v-tr_rel" ].

bremse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bremse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bremse_v-intrPrtcl_rel" ].

bremse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bremse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bremse_v-intr_rel" ].

bremse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bremse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bremse_v-tr_rel" ].

brenne_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-intrImpersObl_rel" ].

brenne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-intrObl_rel" ].

brenne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-intrPrtcl_rel" ].

brenne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-trScpr_rel" ].

brenne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-tr_rel" ].

brenne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "brenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brenne_v-tr_rel" ].

brennemerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brennemerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brennemerke_v-tr_rel" ].

bresere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bresere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bresere_v-tr_rel" ].

breste_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "breste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breste_v-intrObl_rel" ].

breste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "breste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breste_v-intr_rel" ].

breste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "breste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_breste_v-tr_rel" ].

brette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "brette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

brette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brette_v-tr_rel" ].

brettsegle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brettsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brettsegle_v-intr_rel" ].

brettseile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "brettseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brettseile_v-intr_rel" ].

brife_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "brife" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_brife_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

brife_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brife" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brife_v-tr_rel" ].

brikettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "brikettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brikettere_v-intr_rel" ].

briljere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "briljere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_briljere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

briljere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "briljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_briljere_v-intr_rel" ].

bringe_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "bringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bringe_v-ditr_rel" ].

bringe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bringe_v-trScpr_rel" ].

bringe_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "bringe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bringe_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

bringe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "bringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bringe_v-trScprShft_rel" ].

bringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bringe_v-tr_rel" ].

brise_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "brise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brise_v-intrImpers_rel" ].

briske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "briske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_briske_v-tr_rel" ].

briste_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "briste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_briste_v-intrObl_rel" ].

briste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "briste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_briste_v-intr_rel" ].

brodde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brodde_v-intr_rel" ].

brodde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brodde_v-tr_rel" ].

brodere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "brodere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_brodere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

brodere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "brodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brodere_v-intr_rel" ].

brodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "brodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brodere_v-tr_rel" ].

brolegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "brolegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brolegge_v-tr_rel" ].

bronse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bronse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bronse_v-intr_rel" ].

bronse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bronse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bronse_v-tr_rel" ].

bronsere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bronsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bronsere_v-intr_rel" ].

bronsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bronsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bronsere_v-tr_rel" ].

brosjere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "brosjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brosjere_v-intr_rel" ].

brosjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "brosjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brosjere_v-tr_rel" ].

brotne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brotne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brotne_v-intr_rel" ].

brotsje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brotsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brotsje_v-intr_rel" ].

bruke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "bruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruke_v-tr_rel" ].

bruke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruke_v-tr_rel" ].

bruke_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "bruke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bruke_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bruke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruke_v-tr_rel" ].

brulegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "brulegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brulegge_v-tr_rel" ].

brumle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "brumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brumle_v-intrImpers_rel" ].

brumle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brumle_v-intr_rel" ].

brumme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brumme_v-intr_rel" ].

brune_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "brune" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brune_v-tr_rel" ].

brune_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brune" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brune_v-tr_rel" ].

brunsteike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "brunsteike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brunsteike_v-tr_rel" ].

brunsteke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "brunsteke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brunsteke_v-tr_rel" ].

bruse_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "bruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruse_v-intrImpersObl_rel" ].

bruse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "bruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruse_v-intrPrtcl_rel" ].

bruse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "bruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bruse_v-intr_rel" ].

brutalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "brutalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brutalisere_v-tr_rel" ].

bry_tr-obl-med := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "bry" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bry_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bry_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "bry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bry_v-tr_rel" ].

bry_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "bry" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bry_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bry_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "bry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bry_v-tr_rel" ].

brydde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "brydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brydde_v-intr_rel" ].

brygge_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "brygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_brygge_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

brygge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brygge_v-tr_rel" ].

bryne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryne_v-tr_rel" ].

bryne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bryne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bryne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

bryne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryne_v-tr_rel" ].

bryske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bryske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryske_v-tr_rel" ].

bryste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bryste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryste_v-tr_rel" ].

bryte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bryte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bryte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-intrPrtcl_rel" ].

bryte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-intr_rel" ].

bryte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-trPrtcl_rel" ].

bryte_tr-arg12-secpred_ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

bryte_tr-arg12-secpred_opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

bryte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-trObl_rel" ].

bryte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bryte_v-tr_rel" ].

bråbremse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bråbremse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråbremse_v-intr_rel" ].

bråke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bråke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråke_v-intrImpers_rel" ].

bråke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bråke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråke_v-intr_rel" ].

bråke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bråke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråke_v-tr_rel" ].

bråne_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråne_v-intr_rel" ].

bråne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråne_v-tr_rel" ].

bråstanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bråstanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråstanse_v-intr_rel" ].

bråstanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bråstanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bråstanse_v-tr_rel" ].

brødfø_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "brødfø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brødfø_v-tr_rel" ].

brødfø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "brødfø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brødfø_v-tr_rel" ].

brøle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "brøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brøle_v-intrObl_rel" ].

brøle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "brøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brøle_v-intr_rel" ].

brøyte_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "brøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brøyte_v-ditr_rel" ].

brøyte_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "brøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brøyte_v-trPath_rel" ].

brøyte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "brøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_brøyte_v-tr_rel" ].

bu_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "bu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bu_v-intrObl_rel" ].

bu_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "bu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bu_v-trObl_rel" ].

bu_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "bu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bu_v-trObl_rel" ].

budsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "budsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_budsende_v-tr_rel" ].

budsjettere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "budsjettere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_budsjettere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

budsjettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "budsjettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_budsjettere_v-tr_rel" ].

bue_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bue_v-tr_rel" ].

bue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bue_v-tr_rel" ].

bugne_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bugne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bugne_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

bugne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bugne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bugne_v-intr_rel" ].

bukke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukke_v-intrPrtcl_rel" ].

bukke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukke_v-intr_rel" ].

bukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukke_v-tr_rel" ].

buklande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "buklande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buklande_v-intr_rel" ].

buksere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "buksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buksere_v-tr_rel" ].

buksere_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "buksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buksere_v-trPath_rel" ].

buksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "buksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buksere_v-tr_rel" ].

bukte_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukte_v-tr_rel" ].

bukte_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "bukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukte_v-trPath_rel" ].

bukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bukte_v-tr_rel" ].

buldre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "buldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buldre_v-intrImpers_rel" ].

buldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "buldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buldre_v-intr_rel" ].

bule_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "bule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bule_v-intrPrtcl_rel" ].

bulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bulke_v-intr_rel" ].

bulke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bulke_v-tr_rel" ].

bulne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bulne_v-intrPrtcl_rel" ].

bulne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bulne_v-intr_rel" ].

bumse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bumse_v-intrPrtcl_rel" ].

bunke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunke_v-trPrtcl_rel" ].

bunke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunke_v-trScpr_rel" ].

bunkre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bunkre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunkre_v-intrPrtcl_rel" ].

bunkre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bunkre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunkre_v-intr_rel" ].

bunkre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bunkre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunkre_v-tr_rel" ].

bunne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunne_v-intrObl_rel" ].

bunne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunne_v-intr_rel" ].

bunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunne_v-tr_rel" ].

bunnfelle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bunnfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunnfelle_v-tr_rel" ].

bunnfelle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bunnfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunnfelle_v-tr_rel" ].

bunnfryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bunnfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunnfryse_v-intr_rel" ].

bunnskrape_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bunnskrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunnskrape_v-tr_rel" ].

bunte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bunte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

bunte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bunte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bunte_v-tr_rel" ].

bure_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bure_v-intr_rel" ].

bure_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bure_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

buse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "buse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buse_v-intrObl_rel" ].

buse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "buse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buse_v-intrPrtcl_rel" ].

;busette_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "busette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_busette_v-trScpr_rel" ].

busette_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "busette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_busette_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

busette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "busette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_busette_v-tr_rel" ] ].

;buske_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr-et,
;   STEM < "buske" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_buske_v-tr_rel" ].

;busse_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "busse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_busse_v-intr_rel" ].

buste_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "buste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buste_v-trPrtcl_rel" ].

buste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "buste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_buste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

butte_intr-obl-borti := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "butte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_butte_v-intrObl_rel",
            LOCAL.KEY-SPEC borti-k ] ].

by_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-ditr_rel" ].

by_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_by_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

by_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_by_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

by_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-ditr_rel" ].

by_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-trPrtcl_rel" ].

by_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

by_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_by_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

by_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_by_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

by_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-tr_rel" ].

by_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "by" >,
   SYNSEM.LKEYS.KEYREL.PRED "_by_v-tr_rel" ].

byde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "byde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_byde_v-intrObl_rel" ].

byde_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-strong,
   STEM < "byde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_byde_v-ditr_rel" ].

bygge_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bygge_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bygge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygge_v-intr_rel" ].

bygge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygge_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

bygge_tr-arg12-secpred_opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

bygge_tr-arg12-secpred_ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

;bygge_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "bygge" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_bygge_v_rel" ].

bygsle_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "bygsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygsle_v-ditr_rel" ].

bygsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bygsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bygsle_v-tr_rel" ].

bykse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "bykse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bykse_v-intr_rel" ].

bykse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bykse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bykse_v-intr_rel" ].

;bylte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "bylte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_bylte_v-trScpr_rel" ].

byråkratisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "byråkratisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_byråkratisere_v-tr_rel" ].

bysse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bysse_v-intr_rel" ].

bysse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bysse_v-tr_rel" ].

bytte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bytte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bytte_v-intr_rel" ].

bytte_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bytte_v-intrObl_rel" ].

;TODO - define this type
bytte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bytte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

bytte_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bytte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bytte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bytte_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

bytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bytte_v-tr_rel" ].

byttelåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "byttelåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_byttelåne_v-tr_rel" ].

båndlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "båndlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_båndlegge_v-tr_rel" ].

båre_iv := v-intr &
 [ INFLECTION nonfstr-te,			;; sjekk
   STEM < "båre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_båre_v-intr_rel" ].

bære_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "bære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bære_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bære_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "bære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bære_v-intr_rel" ].

bære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "bære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bære_v-trScpr_rel" ].

bære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "bære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bære_v-tr_rel" ].

bære_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bære_v-tr_rel" ].

bæsje_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "bæsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bæsje_v-intrPrtcl_rel" ].

bæsje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bæsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bæsje_v-intr_rel" ].

bølge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "bølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bølge_v-intr_rel" ].

bølge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bølge_v-intr_rel" ].

bølgje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "bølgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bølgje_v-intr_rel" ].

;bønnfalle_obj-eq-pp := v-trObl-oblEqObInf &
; [ INFLECTION nonfstr,
;   STEM < "bønnfalle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_bønnfalle_v_rel" ].

;bønnfalle_tr-obl-til := v-trObl &
; [ INFLECTION nonfstr,
;   STEM < "bønnfalle" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_bønnfalle_v_rel",
;            LOCAL.KEY-SPEC til-k ] ].

bønnfalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bønnfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bønnfalle_v-tr_rel" ].

bønnhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "bønnhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bønnhøre_v-tr_rel" ].

børse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "børse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børse_v-intr_rel" ].

børse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "børse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børse_v-tr_rel" ].

børsnotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "børsnotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børsnotere_v-tr_rel" ].

børste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "børste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børste_v-trScpr_rel" ].

børste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "børste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børste_v-tr_rel" ].

børste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "børste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_børste_v-tr_rel" ].

bøte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "bøte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_bøte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

bøte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "bøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøte_v-tr_rel" ].

bøtelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "bøtelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøtelegge_v-tr_rel" ].

bøye_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-intrObl_rel" ].

bøye_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-intrPrtcl_rel" ].

bøye_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-trScpr_rel" ].

bøye_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-tr_rel" ].

bøye_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-tr_rel" ].

bøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "bøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_bøye_v-tr_rel" ].

campe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "campe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_campe_v-intr_rel" ].

cashe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "cashe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_cashe_v-trScpr_rel" ].

cashe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "cashe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_cashe_v-tr_rel" ].

celebrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "celebrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_celebrere_v-intr_rel" ].

celebrere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "celebrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_celebrere_v-tr_rel" ].

celebrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "celebrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_celebrere_v-tr_rel" ].

changere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "changere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_changere_v-intr_rel" ].

chartre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "chartre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_chartre_v-tr_rel" ].

chevrotere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "chevrotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_chevrotere_v-intr_rel" ].

chiffrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "chiffrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_chiffrere_v-tr_rel" ].

choke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "choke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_choke_v-intr_rel" ].

clinche_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "clinche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_clinche_v-intr_rel" ].

clutche_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "clutche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_clutche_v-intr_rel" ].

cruise_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "cruise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_cruise_v-intr_rel" ].

cruise_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "cruise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_cruise_v-intr_rel" ].

cyanidisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "cyanidisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_cyanidisere_v-tr_rel" ].

dabbe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dabbe_v-intrPrtcl_rel" ].

dadle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dadle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dadle_v-tr_rel" ].

daffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "daffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daffe_v-intr_rel" ].

dagdrømme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dagdrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dagdrømme_v-intr_rel" ].

dage_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dage_v-intrImpers_rel" ].

dages_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-strong,
   STEM < "dages" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dages_v-intrImpers_rel" ].

dale_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "dale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dale_v-intrPrtcl_rel" ].

dale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dale_v-intr_rel" ].

dalke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dalke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dalke_v-intrObl_rel" ].

dalke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dalke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dalke_v-trPrtcl_rel" ].

dalte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dalte_v-intrObl_rel" ].

dalte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dalte_v-intrPrtcl_rel" ].

dalte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dalte_v-intr_rel" ].

damascere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "damascere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_damascere_v-tr_rel" ].

dampe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-intr_rel" ].

dampe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-intrObl_rel" ].

dampe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-intrPrtcl_rel" ].

dampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-intr_rel" ].

dampe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

dampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampe_v-tr_rel" ].

dampkoke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dampkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampkoke_v-intr_rel" ].

dampkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dampkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dampkoke_v-tr_rel" ].

dandere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "dandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dandere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

dandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dandere_v-tr_rel" ].

dangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dangle_v-intr_rel" ].

dangle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dangle_v-tr_rel" ].

danke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "danke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

danne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "danne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danne_v-ditr_rel" ].

danne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "danne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danne_v-tr_rel" ].

danse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "danse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danse_v-intr_rel" ].

;danse_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "danse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_danse_v-intr_rel" ].

danse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "danse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danse_v-tr_rel" ].

danske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "danske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_danske_v-intr_rel" ].

darre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "darre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_darre_v-intr_rel" ].

daske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "daske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daske_v-intrObl_rel" ].

daske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "daske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daske_v-tr_rel" ].

databehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "databehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_databehandle_v-tr_rel" ].

dataføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dataføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dataføre_v-tr_rel" ].

datastyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "datastyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_datastyre_v-tr_rel" ].

datere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "datere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_datere_v-trObl_rel" ].

datere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "datere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_datere_v-trObl_rel" ].

datere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "datere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_datere_v-tr_rel" ].

datostemple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "datostemple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_datostemple_v-tr_rel" ].

daude_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "daude" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daude_v-intr_rel" ].

daugjødsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "daugjødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daugjødsle_v-tr_rel" ].

dauhogge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dauhogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dauhogge_v-tr_rel" ].

dauhugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dauhugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dauhugge_v-tr_rel" ].

daukjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "daukjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_daukjøre_v-tr_rel" ].

debattere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "debattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_debattere_v-intr_rel" ].

debattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "debattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_debattere_v-tr_rel" ].

debitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "debitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_debitere_v-tr_rel" ].

debutere_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "debutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_debutere_v-intrLghtScpr_rel" ].

debutere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "debutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_debutere_v-intr_rel" ].

dechiffrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dechiffrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dechiffrere_v-tr_rel" ].

dedisere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dedisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dedisere_v-trObl_rel" ].

dedusere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dedusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dedusere_v-trObl_rel" ].

dedusere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "dedusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dedusere_v-tr_rel" ].

dedusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dedusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dedusere_v-tr_rel" ].

defilere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "defilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_defilere_v-intr_rel" ].

definere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "definere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_definere_v-trScpr_rel" ].

definere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "definere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_definere_v-trScpr_rel" ].

definere_tr-secpr-for := v-trScpr-scObNrg_scPredprtclFor &
 [ INFLECTION nonfstr-te,
   STEM < "definere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_definere_v-trScpr_rel" ].

definere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "definere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_definere_v-tr_rel" ].

deflatere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "deflatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deflatere_v-intr_rel" ].

deflatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deflatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deflatere_v-tr_rel" ].

deflorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deflorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deflorere_v-tr_rel" ].

deformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deformere_v-tr_rel" ].

degenerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "degenerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_degenerere_v-tr_rel" ].

degge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "degge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_degge_v-intrObl_rel" ].

degradere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "degradere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_degradere_v-tr_rel" ].

dehydrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dehydrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dehydrere_v-tr_rel" ].

deise_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "deise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deise_v-intr_rel" ].

deise_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "deise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deise_v-intrObl_rel" ].

;deise_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "deise" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_deise_v-trScpr_rel" ].

dekantere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekantere_v-tr_rel" ].

dekatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekatere_v-tr_rel" ].

dekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "dekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekke_v-intrObl_rel" ].

dekke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "dekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekke_v-intr_rel" ].

dekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "dekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekke_v-tr_rel" ].

dekke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "dekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekke_v-tr_rel" ].

deklamere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "deklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklamere_v-intr_rel" ].

deklamere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "deklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklamere_v-tr_rel" ].

deklamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklamere_v-tr_rel" ].

deklarere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deklarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklarere_v-tr_rel" ].

deklassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deklassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklassere_v-tr_rel" ].

deklinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deklinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deklinere_v-tr_rel" ].

dekode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dekode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekode_v-tr_rel" ].

dekomponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekomponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekomponere_v-tr_rel" ].

dekorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekorere_v-tr_rel" ].

dekortere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dekortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekortere_v-intr_rel" ].

dekortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekortere_v-tr_rel" ].

dekretere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "dekretere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekretere_v-tr_rel" ].

dekretere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekretere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekretere_v-tr_rel" ].

dekupere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dekupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dekupere_v-tr_rel" ].

delabialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "delabialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delabialisere_v-tr_rel" ].

dele_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-intrObl_rel" ].

dele_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-intr_rel" ].

dele_tr-arg12-secpred_opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

dele_tr-arg12-secpred_ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

dele_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-trObl_rel" ].

dele_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-tr_rel" ].

dele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dele_v-tr_rel" ].

delegere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "delegere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delegere_v-trObl_rel" ].

delegere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "delegere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delegere_v-tr_rel" ].

delere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "delere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delere_v-tr_rel" ].

delikatere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "delikatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delikatere_v-tr_rel" ].

delikatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "delikatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delikatere_v-tr_rel" ].

delirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "delirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delirere_v-intr_rel" ].

delje_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "delje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delje_v-intrObl_rel" ].

delje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "delje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delje_v-intr_rel" ].

delta_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "delta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delta_v-intrObl_rel" ].

delta_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "delta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_delta_v-intr_rel" ].

demaskere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "demaskere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demaskere_v-tr_rel" ].

demaskere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demaskere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demaskere_v-tr_rel" ].

dementere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "dementere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dementere_v-tr_rel" ].

dementere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dementere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dementere_v-tr_rel" ].

demilitarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demilitarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demilitarisere_v-tr_rel" ].

demisjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "demisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demisjonere_v-intr_rel" ].

demme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "demme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

demobilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demobilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demobilisere_v-tr_rel" ].

demokratisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demokratisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demokratisere_v-tr_rel" ].

demolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demolere_v-tr_rel" ].

demonstrere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "demonstrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demonstrere_v-intrObl_rel" ].

demonstrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "demonstrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demonstrere_v-intr_rel" ].

demonstrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demonstrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demonstrere_v-tr_rel" ].

demontere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demontere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demontere_v-tr_rel" ].

demoralisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "demoralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demoralisere_v-tr_rel" ].

dempe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dempe_v-tr_rel" ].

dempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dempe_v-tr_rel" ].

demre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "demre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demre_v-intrObl_rel" ].

demre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "demre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_demre_v-intr_rel" ].

denasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "denasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denasjonalisere_v-tr_rel" ].

denaturalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "denaturalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denaturalisere_v-tr_rel" ].

denaturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "denaturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denaturere_v-tr_rel" ].

denge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "denge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

denge_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "denge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denge_v-tr_rel" ].

denotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "denotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denotere_v-tr_rel" ].

denudere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "denudere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_denudere_v-tr_rel" ].

deoksidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deoksidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deoksidere_v-tr_rel" ].

deponere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "deponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deponere_v-trScpr_rel" ].

deponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deponere_v-tr_rel" ].

deportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deportere_v-tr_rel" ].

deppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "deppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deppe_v-intr_rel" ].

deppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "deppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deppe_v-tr_rel" ].

depravere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "depravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_depravere_v-tr_rel" ].

deprimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deprimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deprimere_v-tr_rel" ].

deprivatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "deprivatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deprivatisere_v-tr_rel" ].

derangere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "derangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_derangere_v-tr_rel" ].

derelinkvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "derelinkvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_derelinkvere_v-tr_rel" ].

derivere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "derivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_derivere_v-intr_rel" ].

derivere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "derivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_derivere_v-trObl_rel" ].

derivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "derivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_derivere_v-tr_rel" ].

desarmere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desarmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desarmere_v-tr_rel" ].

desavuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desavuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desavuere_v-tr_rel" ].

desentralisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desentralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desentralisere_v-tr_rel" ].

desertere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "desertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desertere_v-intr_rel" ].

desidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desidere_v-tr_rel" ].

designe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "designe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_designe_v-tr_rel" ].

desillusjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desillusjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desillusjonere_v-tr_rel" ].

desimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desimere_v-tr_rel" ].

desinfisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desinfisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desinfisere_v-tr_rel" ].

desinformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desinformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desinformere_v-tr_rel" ].

desintegrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desintegrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desintegrere_v-tr_rel" ].

desoksidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desoksidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desoksidere_v-tr_rel" ].

desorganisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desorganisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desorganisere_v-tr_rel" ].

desorientere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "desorientere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_desorientere_v-tr_rel" ].

destillere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "destillere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_destillere_v-tr_rel" ].

destruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "destruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_destruere_v-tr_rel" ].

detaljbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "detaljbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detaljbehandle_v-tr_rel" ].

detaljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "detaljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detaljere_v-tr_rel" ].

detasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "detasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detasjere_v-tr_rel" ].

determinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "determinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_determinere_v-tr_rel" ].

detonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "detonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detonere_v-intr_rel" ].

detonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "detonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detonere_v-tr_rel" ].

detronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "detronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_detronisere_v-tr_rel" ].

dette_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "dette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dette_v-intrPrtcl_rel" ].

dette_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "dette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dette_v-intr_rel" ].

devaluere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "devaluere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_devaluere_v-tr_rel" ].

deviere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "deviere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deviere_v-intrObl_rel" ].

deviere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "deviere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_deviere_v-intr_rel" ].

diagnostisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diagnostisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diagnostisere_v-tr_rel" ].

dialysere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dialysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dialysere_v-tr_rel" ].

die_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "die" >,
   SYNSEM.LKEYS.KEYREL.PRED "_die_v-intr_rel" ].

die_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "die" >,
   SYNSEM.LKEYS.KEYREL.PRED "_die_v-tr_rel" ].

differensiere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "differensiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_differensiere_v-intrObl_rel" ].

differensiere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "differensiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_differensiere_v-trObl_rel" ].

differensiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "differensiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_differensiere_v-tr_rel" ].

differere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "differere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_differere_v-intr_rel" ].

diffundere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "diffundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diffundere_v-intr_rel" ].

diftongere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diftongere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diftongere_v-tr_rel" ].

digge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "digge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_digge_v-tr_rel" ].

digitalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "digitalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_digitalisere_v-tr_rel" ].

dikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikke_v-intrObl_rel" ].

dikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikke_v-intr_rel" ].

dikke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "dikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikke_v-trObl_rel" ].

dikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikke_v-tr_rel" ].

dikte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikte_v-intr_rel" ].

dikte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

dikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dikte_v-tr_rel" ].

diktere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "diktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diktere_v-ditr_rel" ].

diktere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diktere_v-tr_rel" ].

dille_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dille_v-intrObl_rel" ].

dille_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dille_v-intr_rel" ].

dilte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dilte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dilte_v-intrObl_rel" ].

dilte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dilte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dilte_v-intr_rel" ].

dimensjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dimensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimensjonere_v-tr_rel" ].

dimittere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dimittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimittere_v-trObl_rel" ].

dimittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dimittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimittere_v-tr_rel" ].

dimme_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dimme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimme_v-intrImpers_rel" ].

dimme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dimme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimme_v-intr_rel" ].

dimme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dimme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dimme_v-tr_rel" ].

dinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dinere_v-intr_rel" ].

dingle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dingle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dingle_v-intrObl_rel" ].

dingle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dingle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dingle_v-intr_rel" ].

dirigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dirigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dirigere_v-tr_rel" ].

dirke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dirke_v-trPrtcl_rel" ].

dirke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dirke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

dirre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dirre_v-intr_rel" ].

disiplinere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "disiplinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disiplinere_v-tr_rel" ].

disiplinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "disiplinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disiplinere_v-tr_rel" ].

diske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "diske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diske_v-intrObl_rel" ].

diske_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "diske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diske_v-intrPrtcl_rel" ].

diske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "diske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diske_v-tr_rel" ].

diskontere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diskontere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskontere_v-tr_rel" ].

diskreditere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diskreditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskreditere_v-tr_rel" ].

diskriminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diskriminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskriminere_v-tr_rel" ].

diskutere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "diskutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskutere_v-intrObl_rel" ].

diskutere_iv := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "diskutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskutere_v-intr_rel" ].

diskutere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "diskutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskutere_v-intrComp_rel" ].

diskutere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "diskutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskutere_v-trObl_rel" ].

diskutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diskutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskutere_v-tr_rel" ].

diskvalifisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "diskvalifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskvalifisere_v-intr_rel" ].

diskvalifisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "diskvalifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskvalifisere_v-tr_rel" ].

diskvalifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "diskvalifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_diskvalifisere_v-tr_rel" ].

dispasjere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dispasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dispasjere_v-intr_rel" ].

dispasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dispasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dispasjere_v-tr_rel" ].

dispensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dispensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dispensere_v-tr_rel" ].

disponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "disponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disponere_v-tr_rel" ].

disputere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "disputere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disputere_v-intrObl_rel" ].

disputere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "disputere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disputere_v-intr_rel" ].

disputere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "disputere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disputere_v-tr_rel" ].

disse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "disse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disse_v-intr_rel" ].

disse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "disse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_disse_v-tr_rel" ].

dissekere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dissekere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissekere_v-tr_rel" ].

dissentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dissentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissentere_v-intr_rel" ].

dissimilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dissimilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissimilere_v-tr_rel" ].

dissonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dissonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissonere_v-intr_rel" ].

dissonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dissonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissonere_v-tr_rel" ].

dissosiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dissosiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dissosiere_v-tr_rel" ].

distansere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "distansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distansere_v-tr_rel" ].

distansere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "distansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distansere_v-trObl_rel" ].

distansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "distansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distansere_v-tr_rel" ].

distingvere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "distingvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distingvere_v-intrObl_rel" ].

distrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "distrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distrahere_v-tr_rel" ].

distribuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "distribuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_distribuere_v-tr_rel" ].

divergere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "divergere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_divergere_v-intrObl_rel" ].

divergere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "divergere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_divergere_v-intr_rel" ].

divergere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "divergere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_divergere_v-tr_rel" ].

divertere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "divertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_divertere_v-tr_rel" ].

divertere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "divertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_divertere_v-tr_rel" ].

dividere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dividere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dividere_v-tr_rel" ].

djupetse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "djupetse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_djupetse_v-tr_rel" ].

djupfryse_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "djupfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_djupfryse_v-tr_rel" ].

djupne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "djupne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_djupne_v-intr_rel" ].

doble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "doble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_doble_v-tr_rel" ].

dogge_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dogge_v-intrImpers_rel" ].

dogge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "dogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dogge_v-intr_rel" ].

dogge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dogge_v-intr_rel" ].

dokke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dokke_v-intr_rel" ].

dokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dokke_v-tr_rel" ].

dokksette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "dokksette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dokksette_v-tr_rel" ].

doktorere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "doktorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_doktorere_v-intrObl_rel" ].

doktorere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "doktorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_doktorere_v-intr_rel" ].

doktorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "doktorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_doktorere_v-tr_rel" ].

dokumentere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "dokumentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dokumentere_v-tr_rel" ].

dokumentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dokumentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dokumentere_v-tr_rel" ].

dolke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "dolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dolke_v-trObl_rel" ].

dolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dolke_v-tr_rel" ].

domfelle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "domfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_domfelle_v-tr_rel" ].

dominere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dominere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dominere_v-tr_rel" ].

domisiliere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "domisiliere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_domisiliere_v-tr_rel" ].

donere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "donere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_donere_v-trObl_rel" ].

donere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "donere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_donere_v-tr_rel" ].

dope_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dope_v-tr_rel" ].

dope_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dope_v-tr_rel" ].

dore_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dore_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

dore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dore_v-tr_rel" ].

dorge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dorge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dorge_v-intrObl_rel" ].

dorge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dorge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dorge_v-intr_rel" ].

dorge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dorge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dorge_v-tr_rel" ].

dorme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dorme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dorme_v-intrPrtcl_rel" ].

dorme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dorme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dorme_v-intr_rel" ].

dosere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "dosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dosere_v-intrObl_rel" ].

dosere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dosere_v-intr_rel" ].

dosere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dosere_v-tr_rel" ].

dossere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dossere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dossere_v-tr_rel" ].

dotere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dotere_v-trObl_rel" ].

dotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dotere_v-tr_rel" ].

dovne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dovne_v-intr_rel" ].

dovne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dovne_v-tr_rel" ].

dra_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-intrObl_rel" ].

dra_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-intrPrtcl_rel" ].

dra_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-intr_rel" ].

dra_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-trScpr_rel" ].

dra_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-tr_rel" ].

dra_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-trObl_rel" ].

dra_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "dra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dra_v-tr_rel" ].

drage_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-intrObl_rel" ].

drage_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-intrPrtcl_rel" ].

drage_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-intr_rel" ].

;drage_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "drage" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-trScpr_rel" ].

drage_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-tr_rel" ].

drage_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-trObl_rel" ].

drage_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "drage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drage_v-tr_rel" ].

drages_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "drages" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drages_v-intrObl_rel" ].

dragse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dragse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dragse_v-intrObl_rel" ].

dramatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dramatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dramatisere_v-tr_rel" ].

drapere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "drapere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drapere_v-tr_rel" ].

dras_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "dras" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dras_v-intrObl_rel" ].

drasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "drasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drasjere_v-tr_rel" ].

drasse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "drasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drasse_v-intrObl_rel" ].

dratte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dratte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dratte_v-intr_rel" ].

dregge_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "dregge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dregge_v-intr_rel" ].

dregge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "dregge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dregge_v-tr_rel" ].

;dreie_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "dreie" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_dreie_v_rel" ].
;
;dreie_iv := v-intr &
; [ INFLECTION nonfstr,
;   STEM < "dreie" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_dreie_v_rel" ].

dreie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dreie_v-tr_rel" ].

dreise_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dreise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dreise_v-intrObl_rel" ].

drene_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "drene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drene_v-tr_rel" ].

drenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "drenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drenere_v-tr_rel" ].

drepe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "drepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drepe_v-tr_rel" ].

drepe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "drepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drepe_v-tr_rel" ].

dresse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dresse_v-trPrtcl_rel" ].

dresse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dresse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

dressere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dressere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dressere_v-tr_rel" ].

drette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "drette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

drible_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drible_v-intr_rel" ].

drible_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drible_v-tr_rel" ].

drifte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drifte_v-intr_rel" ].

drikke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "drikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drikke_v-intr_rel" ].

drikke_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "drikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drikke_v-trScpr_rel" ].

drikke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "drikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drikke_v-tr_rel" ].

drille_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drille_v-intr_rel" ].

drille_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drille_v-tr_rel" ].

driste_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "driste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_driste_v-trObl_rel" ].

driste_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "driste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_driste_v-trPath_rel" ].

driste_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "driste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_driste_v-trObl_rel" ].

drite_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "drite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drite_v-intr_rel" ].

drite_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "drite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drite_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

drite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "drite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

drive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "drive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drive_v-tr_rel" ].

drodle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drodle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drodle_v-intr_rel" ].

drodle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drodle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drodle_v-tr_rel" ].

droppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "droppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_droppe_v-intrPrtcl_rel" ].

droppe_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "droppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_droppe_v-tr_rel" ].

droppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "droppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_droppe_v-tr_rel" ].

drukne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drukne_v-intr_rel" ].

drukne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "drukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drukne_v-tr_rel" ].

drukne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drukne_v-tr_rel" ].

dryge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "dryge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dryge_v-intrObl_rel" ].

dryge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "dryge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dryge_v-tr_rel" ].

dryppe_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-strong,
   STEM < "dryppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dryppe_v-intrImpers_rel" ].

dryppe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "dryppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dryppe_v-intr_rel" ].

dryppe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "dryppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dryppe_v-tr_rel" ].

drypptørke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drypptørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drypptørke_v-intr_rel" ].

drypptørke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drypptørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drypptørke_v-tr_rel" ].

drypptørre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drypptørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drypptørre_v-tr_rel" ].

drysse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drysse_v-intr_rel" ].

drøfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drøfte_v-tr_rel" ].

drømme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-intrObl_rel" ].

drømme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-intr_rel" ].

drømme_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-intrObl_rel" ].

drømme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-trPrtcl_rel" ].

drømme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-tr_rel" ].

drømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "drømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drømme_v-tr_rel" ].

drønne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "drønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drønne_v-intrImpers_rel" ].

drønne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "drønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drønne_v-intr_rel" ].

drøse_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "drøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drøse_v-intr_rel" ].

drøvtygge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "drøvtygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drøvtygge_v-intr_rel" ].

drøye_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "drøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drøye_v-intrObl_rel" ].

drøye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "drøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_drøye_v-tr_rel" ].

dubbe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dubbe_v-intrPrtcl_rel" ].

dubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dubbe_v-intr_rel" ].

dubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dubbe_v-tr_rel" ].

dublere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dublere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dublere_v-tr_rel" ].

duellere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "duellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duellere_v-intrObl_rel" ].

duellere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "duellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duellere_v-intr_rel" ].

dufte_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-et,
   STEM < "dufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dufte_v-intrAdv_rel" ].

dufte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dufte_v-intr_rel" ].

duge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "duge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duge_v-intrObl_rel" ].

duge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "duge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duge_v-intr_rel" ].

duge_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-de,
   STEM < "duge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duge_v-intrObl_rel" ].

dugge_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dugge_v-intrImpers_rel" ].

dugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dugge_v-intr_rel" ].

duke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "duke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duke_v-intrObl_rel" ].

duke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "duke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duke_v-tr_rel" ].

dukke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "dukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dukke_v-intr_rel" ].

dukke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dukke_v-intrObl_rel" ].

dukke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dukke_v-intrPrtcl_rel" ].

dukke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dukke_v-intr_rel" ].

dukke_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "dukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dukke_v-tr_rel" ].

dulle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dulle_v-intrObl_rel" ].

dulme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dulme_v-tr_rel" ].

dulte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dulte_v-intrObl_rel" ].

dulte_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "dulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dulte_v-trObl_rel" ].

dumme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dumme_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

dumme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dumme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

dumpe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dumpe_v-intrObl_rel" ].

dumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dumpe_v-intr_rel" ].

dumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dumpe_v-tr_rel" ].

dundre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dundre_v-intrImpers_rel" ].

dundre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dundre_v-intr_rel" ].

dunge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dunge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunge_v-trPrtcl_rel" ].

dunge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dunge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunge_v-tr_rel" ].

dunke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunke_v-intrObl_rel" ].

dunke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunke_v-intr_rel" ].

dunke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC vekk-k ].

dunke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "dunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunke_v-trObl_rel" ].

dunste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "dunste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunste_v-intrPrtcl_rel" ].

dunste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dunste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dunste_v-intr_rel" ].

dupere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dupere_v-tr_rel" ].

duplisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "duplisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duplisere_v-tr_rel" ].

duppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "duppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duppe_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

duppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "duppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duppe_v-intr_rel" ].

;duppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "duppe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_duppe_v-trScpr_rel" ].

dure_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-te,
   STEM < "dure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dure_v-intrImpers_rel" ].

dure_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dure_v-intr_rel" ].

durksy_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "durksy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_durksy_v-tr_rel" ].

duse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "duse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duse_v-intr_rel" ].

dusje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dusje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dusje_v-intr_rel" ].

dusje_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dusje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dusje_v-tr_rel" ].

dusje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dusje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dusje_v-tr_rel" ].

duskregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "duskregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duskregne_v-intrImpers_rel" ].

dutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dutte_v-tr_rel" ].

duve_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "duve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_duve_v-intr_rel" ].

dvele_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "dvele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dvele_v-intrObl_rel" ].

dvele_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "dvele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dvele_v-intr_rel" ].

dy_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "dy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dy_v-tr_rel" ].

dy_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "dy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dy_v-trObl_rel" ].

dykke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dykke_v-intr_rel" ].

dyktiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "dyktiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dyktiggjøre_v-tr_rel" ].

dynge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "dynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dynge_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

dynge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dynge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

dynge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dynge_v-tr_rel" ].

dynke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "dynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dynke_v-trObl_rel" ].

dynke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dynke_v-tr_rel" ].

dypetse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dypetse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dypetse_v-tr_rel" ].

dypfryse_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "dypfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dypfryse_v-tr_rel" ].

dyppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dyppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dyppe_v-trScpr_rel" ].

dyrke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "dyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dyrke_v-intrObl_rel" ].

dyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dyrke_v-tr_rel" ].

dysse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "dysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dysse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

dysse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dysse_v-tr_rel" ].

dytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dytte_v-tr_rel" ].

dåne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "dåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dåne_v-intr_rel" ].

dåre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "dåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dåre_v-tr_rel" ].

dø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "dø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dø_v-intr_rel" ].

dø_tr-eventunit := v-tr-obEventunit &
 [ INFLECTION finstr-dd,
   STEM < "dø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dø_v-tr_rel",
    SYNSEM.LOCAL.CAT.VAL.COMPS < [LOCAL.CAT.HEAD [KEYS.KEY død-inhcmp ]]> ].

;døde_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "døde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_døde_v_rel" ].

dølge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "dølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dølge_v-tr_rel" ].

dølge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "dølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dølge_v-tr_rel" ].

dømme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "dømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dømme_v-intrObl_rel" ].

dømme_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "dømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dømme_v-trObl_rel" ].

dømme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "dømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dømme_v-trObl_rel" ].

dømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "dømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dømme_v-tr_rel" ].

dønne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "dønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dønne_v-intrImpers_rel" ].

dønne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "dønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_dønne_v-intr_rel" ].

døpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "døpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_døpe_v-tr_rel" ].

døse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "døse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_døse_v-intr_rel" ].

døye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "døye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_døye_v-tr_rel" ].

døyve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "døyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_døyve_v-tr_rel" ].

ebbe_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "ebbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ebbe_v-intrImpers_rel" ].

ebbe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ebbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ebbe_v-intrPrtcl_rel" ].

edfeste_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "edfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_edfeste_v-tr_rel" ].

edfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "edfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_edfeste_v-tr_rel" ].

effektivisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "effektivisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_effektivisere_v-tr_rel" ].

effektuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "effektuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_effektuere_v-tr_rel" ].

egalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "egalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egalisere_v-tr_rel" ].

egge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "egge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egge_v-intr_rel" ].

egge_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-et,
   STEM < "egge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egge_v-ditr_rel" ].

egge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "egge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

egge_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "egge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_egge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

egge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "egge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egge_v-tr_rel" ].

;egle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "egle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_egle_v-trScpr_rel" ].

egle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "egle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egle_v-trPath_rel" ].

egle_tr-refl-obl-innpå := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "egle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_egle_v-trObl_rel",
            LOCAL.KEY-SPEC innpå-k ] ].

egne_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "egne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egne_v-trObl_rel" ].

egne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "egne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egne_v-trObl_rel" ].

egne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "egne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egne_v-tr_rel" ].

egne_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "egne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_egne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

egne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "egne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_egne_v-tr_rel" ].

eie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "eie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eie_v-tr_rel" ].

eime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "eime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eime_v-intr_rel" ].

eire_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "eire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eire_v-intr_rel" ].

ejakulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ejakulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ejakulere_v-intr_rel" ].

ejakulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ejakulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ejakulere_v-tr_rel" ].

eksaminere_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "eksaminere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_eksaminere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

eksaminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksaminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksaminere_v-tr_rel" ].

eksegere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksegere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksegere_v-tr_rel" ].

eksekvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksekvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksekvere_v-tr_rel" ].

eksellere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "eksellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksellere_v-intrObl_rel" ].

eksellere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eksellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksellere_v-intr_rel" ].

eksemplifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksemplifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksemplifisere_v-tr_rel" ].

ekserpere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekserpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekserpere_v-tr_rel" ].

ekshalere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ekshalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekshalere_v-intr_rel" ].

eksistere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eksistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksistere_v-intr_rel" ].

eksklamere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eksklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksklamere_v-intr_rel" ].

eksklamere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "eksklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksklamere_v-tr_rel" ].

eksklamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksklamere_v-tr_rel" ].

ekskludere_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ekskludere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ekskludere_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

ekskludere_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ekskludere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ekskludere_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

ekskludere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekskludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekskludere_v-tr_rel" ].

ekskommunisere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ekskommunisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekskommunisere_v-trObl_rel" ].

ekskommunisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekskommunisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekskommunisere_v-tr_rel" ].

ekspandere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspandere_v-intr_rel" ].

ekspandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspandere_v-tr_rel" ].

ekspatriere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ekspatriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspatriere_v-tr_rel" ].

ekspatriere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspatriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspatriere_v-tr_rel" ].

ekspedere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspedere_v-tr_rel" ].

eksperimentere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "eksperimentere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_eksperimentere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

eksperimentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eksperimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksperimentere_v-intr_rel" ].

eksperimentere_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "eksperimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksperimentere_v-trPath_rel" ].

ekspirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspirere_v-intr_rel" ].

eksplisittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksplisittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksplisittere_v-tr_rel" ].

eksploatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksploatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksploatere_v-tr_rel" ].

eksplodere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "eksplodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksplodere_v-intrObl_rel" ].

eksplodere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eksplodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksplodere_v-intr_rel" ].

eksplodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksplodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksplodere_v-tr_rel" ].

eksponere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "eksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksponere_v-trObl_rel" ].

eksponere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "eksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksponere_v-tr_rel" ].

eksponere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "eksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksponere_v-trObl_rel" ].

eksponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksponere_v-tr_rel" ].

eksportere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "eksportere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_eksportere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

eksportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eksportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eksportere_v-tr_rel" ].

ekspropriere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekspropriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekspropriere_v-tr_rel" ].

ekstemporere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ekstemporere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstemporere_v-intr_rel" ].

ekstemporere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekstemporere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstemporere_v-tr_rel" ].

ekstensivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekstensivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstensivere_v-tr_rel" ].

ekstrahere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ekstrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstrahere_v-trObl_rel" ].

ekstrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekstrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstrahere_v-tr_rel" ].

ekstrapolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekstrapolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekstrapolere_v-tr_rel" ].

ekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekte_v-tr_rel" ].

ektevie_tv := v-tr &
 [ INFLECTION nonfstr,								; Er ikkje "vie" finstr-dd?
   STEM < "ektevie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ektevie_v-tr_rel" ].

ekvipere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ekvipere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ekvipere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

ekvipere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ekvipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekvipere_v-tr_rel" ].

ekvipere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ekvipere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ekvipere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

ekvipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekvipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekvipere_v-tr_rel" ].

ekvivalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ekvivalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ekvivalere_v-tr_rel" ].

elde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "elde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elde_v-intrObl_rel" ].

elde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "elde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elde_v-tr_rel" ].

eldes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "eldes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eldes_v-intr_rel" ].

elektrifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "elektrifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elektrifisere_v-tr_rel" ].

elektrisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "elektrisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elektrisere_v-tr_rel" ].

elevere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "elevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elevere_v-tr_rel" ].

eligere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eligere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eligere_v-tr_rel" ].

eliminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eliminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eliminere_v-tr_rel" ].

;elle_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "elle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_elle_v-intr_rel" ].

eloksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eloksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eloksere_v-tr_rel" ].

elske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "elske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elske_v-intr_rel" ].

elske_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "elske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elske_v-tr_rel" ].

elske_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "elske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elske_v-tr_rel" ].

elske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "elske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elske_v-tr_rel" ].

elte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "elte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_elte_v-tr_rel" ].

eludere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eludere_v-tr_rel" ].

emaljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "emaljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emaljere_v-tr_rel" ].

emansipere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "emansipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emansipere_v-tr_rel" ].

emansipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "emansipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emansipere_v-tr_rel" ].

emballere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "emballere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emballere_v-tr_rel" ].

embarkere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "embarkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_embarkere_v-intr_rel" ].

embarkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "embarkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_embarkere_v-tr_rel" ].

emigrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "emigrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emigrere_v-intr_rel" ].

emigrere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "emigrere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_emigrere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

emittere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "emittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emittere_v-intr_rel" ].

emittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "emittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emittere_v-tr_rel" ].

emne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "emne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emne_v-intrObl_rel" ].

emne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "emne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emne_v-intr_rel" ].

emne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "emne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emne_v-tr_rel" ].

employere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "employere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_employere_v-tr_rel" ].

emulgere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "emulgere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_emulgere_v-intr_rel" ].

ende_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ende_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

ende_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-et,
   STEM < "ende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ende_v-intrAdv_rel" ].

ende_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ende_v-intr_rel" ].

endevende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "endevende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_endevende_v-tr_rel" ].

endossere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "endossere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_endossere_v-tr_rel" ].

endre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "endre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_endre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

endre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "endre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_endre_v-tr_rel" ].

endre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "endre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_endre_v-tr_rel" ].

enervere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "enervere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_enervere_v-tr_rel" ].

enes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "enes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_enes_v-intr_rel" ].

enes_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "enes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_enes_v-trObl_rel" ].

engasjere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "engasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_engasjere_v-intr_rel" ].

engasjere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "engasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_engasjere_v-tr_rel" ].

engasjere_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "engasjere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_engasjere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

engasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "engasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_engasjere_v-tr_rel" ].

engste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "engste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_engste_v-tr_rel" ].

engste_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "engste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_engste_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

engste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "engste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_engste_v-tr_rel" ].

ense_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "ense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ense_v-tr_rel" ].

ense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ense_v-tr_rel" ].

ensilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ensilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ensilere_v-tr_rel" ].

ensrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ensrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ensrette_v-tr_rel" ].

entre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "entre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_entre_v-tr_rel" ].

envegsregulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "envegsregulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_envegsregulere_v-tr_rel" ].

enveisregulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "enveisregulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_enveisregulere_v-tr_rel" ].

erfare_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "erfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erfare_v-tr_rel" ].

erfare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erfare_v-tr_rel" ].

ergre_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "ergre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ergre_v-trScprShft_rel" ].

ergre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ergre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ergre_v-tr_rel" ].

ergre_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ergre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ergre_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

ergre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ergre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ergre_v-tr_rel" ].

erholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "erholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erholde_v-tr_rel" ].

erigere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "erigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erigere_v-intr_rel" ].

erigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erigere_v-tr_rel" ].

erindre_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "erindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erindre_v-intrComp_rel" ].

erindre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "erindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erindre_v-tr_rel" ].

erindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "erindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erindre_v-tr_rel" ].

erkjenne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-tr_rel" ].

erkjenne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-intrComp_rel" ].

erkjenne_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-trScpr_rel" ].

erkjenne_tr-refl-rais-adj := v-trScpr-scObNrg_obRefl_scAdj &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-trScpr_rel" ].

erkjenne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-tr_rel" ].

erkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erkjenne_v-tr_rel" ].

;erklære_ditr := v-ditr &
; [ INFLECTION nonfstr-te,
;   STEM < "erklære" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-ditr_rel" ].

erklære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "erklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-trScpr_rel" ].

erklære_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "erklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-trScpr_rel" ].

erklære_tr-refl-rais-adj := v-trScpr-scObNrg_obRefl_scAdj &
 [ INFLECTION nonfstr-te,
   STEM < "erklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-trScpr_rel" ].

erklære_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "erklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-tr_rel" ].

erklære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erklære_v-tr_rel" ].

erlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "erlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erlegge_v-tr_rel" ].

ernære_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "ernære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ernære_v-trObl_rel" ].

ernære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ernære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ernære_v-tr_rel" ].

ernære_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ernære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ernære_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ernære_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "ernære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ernære_v-trScpr_rel" ].

ernære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ernære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ernære_v-tr_rel" ].

erobre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "erobre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erobre_v-tr_rel" ].

erodere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "erodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erodere_v-intr_rel" ].

erodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erodere_v-tr_rel" ].

erotisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "erotisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erotisere_v-tr_rel" ].

erstatte_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "erstatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_erstatte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

erstatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "erstatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erstatte_v-tr_rel" ].

erte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "erte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erte_v-trScpr_rel" ].

erte_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "erte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_erte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

erte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "erte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erte_v-trScprShft_rel" ].

erte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "erte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erte_v-tr_rel" ].

erverve_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "erverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erverve_v-ditr_rel" ].

erverve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "erverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_erverve_v-tr_rel" ].

ese_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "ese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ese_v-intrPrtcl_rel" ].

ese_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "ese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ese_v-intr_rel" ].

eskalere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eskalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskalere_v-intr_rel" ].

eskalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eskalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskalere_v-tr_rel" ].

eskamotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eskamotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskamotere_v-tr_rel" ].

eskapere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "eskapere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskapere_v-intr_rel" ].

eskapere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eskapere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskapere_v-tr_rel" ].

eskortere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "eskortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskortere_v-tr_rel" ].

eskortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "eskortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eskortere_v-tr_rel" ].

esle_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "esle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_esle_v-ditr_rel" ].

esle_obj-eq-refl := v-ditr-iobRefl_obEqIobInf &
 [ INFLECTION nonfstr-et,
   STEM < "esle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_esle_v-ditr_rel" ].

esle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "esle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_esle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

esle_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "esle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_esle_v-trObl_rel" ].

esle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "esle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_esle_v-tr_rel" ].

estetisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "estetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_estetisere_v-intr_rel" ].

estetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "estetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_estetisere_v-tr_rel" ].

estimere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "estimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_estimere_v-trObl_rel" ].

estimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "estimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_estimere_v-tr_rel" ].

etablere_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "etablere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etablere_v-ditr_rel" ].

etablere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "etablere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etablere_v-trScpr_rel" ].

etablere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "etablere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etablere_v-trScpr_rel" ].

etablere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etablere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etablere_v-tr_rel" ].

etikettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etikettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etikettere_v-tr_rel" ].

etle_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "etle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etle_v-ditr_rel" ].

etle_obj-eq-refl := v-ditr-iobRefl_obEqIobInf &
 [ INFLECTION nonfstr-et,
   STEM < "etle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etle_v-ditr_rel" ].

;etle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "etle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_etle_v-trScpr_rel",
;   SYNSEM.LOCAL.KEY-SPEC til-k ].

etle_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "etle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etle_v-trObl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

etle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etle_v-tr_rel" ].

etse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "etse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etse_v-intr_rel" ].

etse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "etse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etse_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

etse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "etse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etse_v-trScpr_rel" ].

etse_tr-refl-obl-gjennom := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "etse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_etse_v-trObl_rel",
            LOCAL.KEY-SPEC gjennom-k ] ].

etse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etse_v-tr_rel" ].

etteranmelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etteranmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etteranmelde_v-tr_rel" ].

etterape_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterape_v-tr_rel" ].

etterbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterbehandle_v-tr_rel" ].

etterbetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etterbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterbetale_v-tr_rel" ].

etterforske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterforske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterforske_v-tr_rel" ].

;etterfylle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "etterfylle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_etterfylle_v-trScpr_rel" ].

etterfylle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "etterfylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_etterfylle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

etterfylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etterfylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterfylle_v-tr_rel" ].

etterfølge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "etterfølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterfølge_v-tr_rel" ].

ettergi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "ettergi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettergi_v-ditr_rel" ].

ettergi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "ettergi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettergi_v-tr_rel" ].

ettergjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ettergjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettergjøre_v-tr_rel" ].

etterisolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etterisolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterisolere_v-tr_rel" ].

etterkomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "etterkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterkomme_v-tr_rel" ].

etterlate_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "etterlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlate_v-ditr_rel" ].

etterlate_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "etterlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlate_v-ditr_rel" ].

etterlate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "etterlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlate_v-tr_rel" ].

etterleve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "etterleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterleve_v-tr_rel" ].

etterligne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterligne_v-tr_rel" ].

etterlikne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterlikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlikne_v-tr_rel" ].

etterlyse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "etterlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlyse_v-trObl_rel" ].

etterlyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "etterlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterlyse_v-tr_rel" ].

etterplapre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterplapre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterplapre_v-tr_rel" ].

etterprøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "etterprøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterprøve_v-tr_rel" ].

etterse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "etterse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterse_v-tr_rel" ].

ettersende_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "ettersende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettersende_v-ditr_rel" ].

ettersende_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ettersende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettersende_v-trObl_rel" ].

ettersende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ettersende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettersende_v-tr_rel" ].

etterslokke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "etterslokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterslokke_v-tr_rel" ].

etterslukke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "etterslukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterslukke_v-tr_rel" ].

etterspore_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "etterspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterspore_v-tr_rel" ].

etterstrebe_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "etterstrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterstrebe_v-tr_rel" ].

etterstrebe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "etterstrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_etterstrebe_v-tr_rel" ].

ettersynkronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ettersynkronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettersynkronisere_v-tr_rel" ].

ettersøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ettersøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettersøke_v-tr_rel" ].

ettertrakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ettertrakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ettertrakte_v-tr_rel" ].

europeisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "europeisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_europeisere_v-tr_rel" ].

evakuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "evakuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evakuere_v-tr_rel" ].

evaluere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "evaluere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evaluere_v-tr_rel" ].

evangelisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "evangelisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evangelisere_v-intr_rel" ].

evaporere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "evaporere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evaporere_v-intr_rel" ].

eve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "eve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_eve_v-tr_rel" ].

evne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "evne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evne_v-tr_rel" ].

evne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "evne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_evne_v-tr_rel" ].

exe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "exe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_exe_v-intr_rel" ].

exe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "exe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_exe_v-trScpr_rel" ].

fable_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fable" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fable_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fable_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fable_v-intr_rel" ].

fable_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "fable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fable_v-intrObl_rel" ].

fabrikkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fabrikkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fabrikkere_v-tr_rel" ].

fabulere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fabulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fabulere_v-intrObl_rel" ].

fabulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fabulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fabulere_v-intr_rel" ].

fade_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "fade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fade_v-intrPrtcl_rel" ].

fade_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fade_v-intr_rel" ].

fade_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fade_v-trScpr_rel" ].

fade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fade_v-tr_rel" ].

fagne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fagne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fagne_v-tr_rel" ].

fakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakke_v-tr_rel" ].

fakse_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "fakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakse_v-ditr_rel" ].

fakse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakse_v-trObl_rel" ].

fakse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakse_v-tr_rel" ].

faksimilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "faksimilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_faksimilere_v-tr_rel" ].

faktorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "faktorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_faktorisere_v-tr_rel" ].

fakturere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fakturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakturere_v-trObl_rel" ].

fakturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fakturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fakturere_v-tr_rel" ].

falby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "falby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falby_v-tr_rel" ].

falde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "falde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falde_v-tr_rel" ].

falle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "falle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falle_v-intr_rel" ].

falle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "falle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falle_v-intrPrtcl_rel" ].

falle_subjdir-pres := v-intrPresnt-presDir &
 [ INFLECTION nonfstr-strong,
   STEM < "falle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falle_v-intr_rel" ].

fallere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fallere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fallere_v-intr_rel" ].

falme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "falme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falme_v-intr_rel" ].

falme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "falme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falme_v-tr_rel" ].

false_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "false" >,
   SYNSEM.LKEYS.KEYREL.PRED "_false_v-trScpr_rel" ].

false_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "false" >,
   SYNSEM.LKEYS.KEYREL.PRED "_false_v-tr_rel" ].

falsifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "falsifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_falsifisere_v-tr_rel" ].

famle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "famle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_famle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

famle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "famle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_famle_v-intr_rel" ].

;famle_tr-refl-dir := v-trPath-obRefl_obDir &
; [ INFLECTION nonfstr,
;   STEM < "famle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_famle_v_rel" ].

famne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "famne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_famne_v-intrObl_rel" ].

famne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "famne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_famne_v-tr_rel" ].

fange_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fange_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

fange_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fange_v-tr_rel" ].

fangste_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "fangste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fangste_v-intrObl_rel" ].

fangste_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "fangste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fangste_v-intr_rel" ].

fantasere_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fantasere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fantasere_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

fantasere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fantasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fantasere_v-intr_rel" ].

fantegå_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-tt,
   STEM < "fantegå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fantegå_v-intr_rel" ].

fantegå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "fantegå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fantegå_v-intr_rel" ].

fare_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "fare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fare_v-intr_rel" ].

fare_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "fare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fare_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fare_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "fare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fare_v-intrPrtcl_rel" ].

;fare_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
; [ INFLECTION nonfstr-strong,
;   STEM < "fare" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fare_v-trScpr_rel" ].

farge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "farge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farge_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

farge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "farge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farge_v-trScpr_rel" ].

farge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "farge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farge_v-tr_rel" ].

farsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "farsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farsere_v-tr_rel" ].

farte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "farte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farte_v-intr_rel" ].

farte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "farte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_farte_v-intr_rel" ].

fascinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fascinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fascinere_v-intr_rel" ].

fascinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fascinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fascinere_v-tr_rel" ].

fase_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fase_v-tr_rel" ].

fasettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fasettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fasettere_v-tr_rel" ].

fasle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fasle_v-tr_rel" ].

fasongere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fasongere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fasongere_v-tr_rel" ].

faste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "faste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_faste_v-intr_rel" ].

fastholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fastholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastholde_v-tr_rel" ].

fastlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fastlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastlegge_v-tr_rel" ].

fastlåse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fastlåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastlåse_v-tr_rel" ].

fastne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fastne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastne_v-intr_rel" ].

fastsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fastsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastsette_v-tr_rel" ].

fastslå_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "fastslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastslå_v-intrComp_rel" ].

fastslå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "fastslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastslå_v-tr_rel" ].

fastslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "fastslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fastslå_v-tr_rel" ].

fate_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "fate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fate_v-intrImpers_rel" ].

fatle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fatle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatle_v-tr_rel" ].

fatte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatte_v-intrObl_rel" ].

fatte_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "fatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatte_v-intrComp_rel" ].

fatte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatte_v-tr_rel" ].

fatte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "fatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatte_v-tr_rel" ].

fatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fatte_v-tr_rel" ].

fattes_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fattes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fattes_v-tr_rel" ].

favne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "favne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_favne_v-intrObl_rel" ].

favne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "favne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_favne_v-tr_rel" ].

favorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "favorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_favorisere_v-tr_rel" ].

feide_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "feide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feide_v-intr_rel" ].

feie_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "feie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feie_v-intr_rel" ].

feie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "feie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feie_v-intr_rel" ].

feie_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "feie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feie_v-trScpr_rel" ].

feie_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "feie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feie_v-tr_rel" ].

feie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "feie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feie_v-tr_rel" ].

feilbedømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "feilbedømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feilbedømme_v-tr_rel" ].

feile_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "feile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feile_v-intr_rel" ].

feilvurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "feilvurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feilvurdere_v-tr_rel" ].

feire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "feire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feire_v-intr_rel" ].

feire_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "feire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feire_v-tr_rel" ].

feire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "feire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feire_v-tr_rel" ].

feite_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "feite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feite_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

feite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "feite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

feite_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "feite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feite_v-tr_rel" ].

feitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "feitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feitne_v-intr_rel" ].

fekte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fekte_v-intr_rel" ].

fekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fekte_v-tr_rel" ].

felle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "felle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_felle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

felle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "felle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_felle_v-tr_rel" ].

femdoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "femdoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_femdoble_v-tr_rel" ].

feminisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "feminisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feminisere_v-tr_rel" ].

fenge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fenge_v-intr_rel" ].

fenge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fenge_v-tr_rel" ].

fengsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fengsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fengsle_v-tr_rel" ].

ferde_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ferde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferde_v-trPrtcl_rel" ].

ferge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ferge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferge_v-intr_rel" ].

ferge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ferge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferge_v-tr_rel" ].

feriere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "feriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feriere_v-intr_rel" ].

ferje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ferje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferje_v-intr_rel" ].

ferje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ferje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferje_v-tr_rel" ].

ferme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ferme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferme_v-tr_rel" ].

fermentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fermentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fermentere_v-intr_rel" ].

fermentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fermentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fermentere_v-tr_rel" ].

fernissere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fernissere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fernissere_v-tr_rel" ].

ferske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ferske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ferske_v-tr_rel" ].

feste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "feste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feste_v-intr_rel" ].

;feste_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "feste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_feste_v-trScpr_rel" ].

feste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "feste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feste_v-tr_rel" ].

feste_tr-refl-obl-ved := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "feste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_feste_v-trObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

feste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "feste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_feste_v-tr_rel" ].

festne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "festne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_festne_v-tr_rel" ].

fete_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fete_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fete_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fete_v-tr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fetere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fetere_v-tr_rel" ].

fetne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fetne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fetne_v-intr_rel" ].

fiffe_telicpart := v-trPrtcl-COMPLETEDACTIVITY &
 [ INFLECTION nonfstr-et,
   STEM < "fiffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fiffe_v-trPrtcl_rel",
            LOCAL.KEY-SPEC opp-k ] ].

fighte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fighte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fighte_v-intr_rel" ].

figurere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "figurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_figurere_v-intrObl_rel" ].

figurere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "figurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_figurere_v-intr_rel" ].

figurere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "figurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_figurere_v-trScpr_rel" ].

figurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "figurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_figurere_v-tr_rel" ].

fike_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "fike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fike_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

;fike_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et_or_te,
;   STEM < "fike" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fike_v-trScpr_rel" ].

fikle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fikle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fikle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fikle_v-intr_rel" ].

fikse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fikse_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

fikse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fikse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

fikse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fikse_v-tr_rel" ].

fiksere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fiksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fiksere_v-trObl_rel" ].

fiksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fiksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fiksere_v-tr_rel" ].

file_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "file" >,
   SYNSEM.LKEYS.KEYREL.PRED "_file_v-intrObl_rel" ].

file_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "file" >,
   SYNSEM.LKEYS.KEYREL.PRED "_file_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

file_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "file" >,
   SYNSEM.LKEYS.KEYREL.PRED "_file_v-trPath_rel" ].

file_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "file" >,
   SYNSEM.LKEYS.KEYREL.PRED "_file_v-tr_rel" ].

filere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "filere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filere_v-intr_rel" ].

filere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "filere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filere_v-tr_rel" ].

filetere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "filetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filetere_v-intr_rel" ].

filetere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "filetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filetere_v-tr_rel" ].

filmatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "filmatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filmatisere_v-tr_rel" ].

filme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "filme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filme_v-intr_rel" ].

filme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "filme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filme_v-tr_rel" ].

filosofere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "filosofere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filosofere_v-intrObl_rel" ].

filosofere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "filosofere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filosofere_v-intr_rel" ].

filtre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "filtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filtre_v-trPrtcl_rel" ].

filtre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "filtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filtre_v-tr_rel" ].

filtre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "filtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filtre_v-tr_rel" ].

filtrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "filtrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_filtrere_v-tr_rel" ].

finansiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "finansiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finansiere_v-tr_rel" ].

finere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "finere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finere_v-tr_rel" ].

finfordele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "finfordele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finfordele_v-tr_rel" ].

fingere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fingere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fingere_v-tr_rel" ].

fingre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fingre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fingre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fingre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fingre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fingre_v-intr_rel" ].

finhakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "finhakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finhakke_v-tr_rel" ].

finhøvle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "finhøvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finhøvle_v-tr_rel" ].

fininnstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fininnstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fininnstille_v-tr_rel" ].

finkjemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "finkjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finkjemme_v-tr_rel" ].

finmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "finmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finmale_v-tr_rel" ].

finpusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "finpusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finpusse_v-tr_rel" ].

finregne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "finregne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_finregne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

finregne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "finregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finregne_v-intr_rel" ].

finrekne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "finrekne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_finrekne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

finrekne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "finrekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finrekne_v-intr_rel" ].

finsikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "finsikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finsikte_v-tr_rel" ].

finte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "finte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finte_v-intr_rel" ].

finte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "finte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_finte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

fintelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fintelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fintelle_v-tr_rel" ].

firdoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "firdoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_firdoble_v-tr_rel" ].

fire_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "fire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fire_v-intr_rel" ].

fire_telicparticle := v-trPrtcl-COMPLETEDACTIVITY &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "fire" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fire_v-trPrtcl_rel",
            LOCAL.KEY-SPEC ned-k ] ].

fire_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "fire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fire_v-trPath_rel" ].

fire_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "fire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fire_v-tr_rel" ].

firedoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "firedoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_firedoble_v-tr_rel" ].

fise_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "fise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fise_v-intr_rel" ].

fise_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fise_v-tr_rel" ].

fisjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fisjonere_v-intr_rel" ].

fisjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fisjonere_v-tr_rel" ].

fiske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fiske_v-intr_rel" ].

fiske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fiske_v-trScpr_rel" ].

fiske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fiske_v-tr_rel" ].

fisle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fisle_v-intrObl_rel" ].

fisle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fisle_v-intr_rel" ].

fjamse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjamse_v-intr_rel" ].

fjase_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fjase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjase_v-intrObl_rel" ].

fjase_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjase_v-intr_rel" ].

fjase_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fjase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjase_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

fjelge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fjelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjelge_v-tr_rel" ].

fjerne_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fjerne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fjerne_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

fjerne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fjerne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjerne_v-tr_rel" ].

fjerne_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fjerne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fjerne_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

fjerne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fjerne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjerne_v-tr_rel" ].

fjernstyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fjernstyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjernstyre_v-tr_rel" ].

fjerte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjerte_v-intr_rel" ].

fjerte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fjerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjerte_v-tr_rel" ].

fjeske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fjeske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjeske_v-intrObl_rel" ].

fjeske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjeske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjeske_v-intr_rel" ].

fjetre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fjetre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjetre_v-tr_rel" ].

fjolle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fjolle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fjolle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fjolle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjolle_v-intr_rel" ].

fjuske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjuske_v-intrObl_rel" ].

fjuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjuske_v-intr_rel" ].

fjære_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjære_v-intr_rel" ].

fjøre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fjøre_v-intr_rel" ].

flagge_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flagge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flagge_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

flagge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flagge_v-intrPrtcl_rel" ].

flagge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flagge_v-intr_rel" ].

flagre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "flagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flagre_v-intr_rel" ].

flagre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flagre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flagre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

flagre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flagre_v-intr_rel" ].

flake_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "flake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flake_v-tr_rel" ].

flakke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "flakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flakke_v-intr_rel" ].

flakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flakke_v-intr_rel" ].

flakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flakne_v-intr_rel" ].

flakse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "flakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flakse_v-intr_rel" ].

flakse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flakse_v-intr_rel" ].

flambere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "flambere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flambere_v-tr_rel" ].

flamme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flamme_v-intrPrtcl_rel" ].

flane_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flane_v-intr_rel" ].

flanere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "flanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flanere_v-intr_rel" ].

flankere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "flankere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flankere_v-tr_rel" ].

flare_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flare_v-intrPrtcl_rel" ].

flare_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flare_v-intr_rel" ].

flaske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flaske_v-intrObl_rel" ].

flaske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flaske_v-tr_rel" ].

flasse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flasse_v-intrPrtcl_rel" ].

flasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flasse_v-intr_rel" ].

flate_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flate_v-trPrtcl_rel" ].

flate_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flate_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

flatne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flatne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flatne_v-intr_rel" ].

flattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "flattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flattere_v-tr_rel" ].

flaue_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flaue_v-intr_rel" ].

fleipe_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fleipe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fleipe_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fleipe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fleipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fleipe_v-intr_rel" ].

flekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

flekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flekke_v-tr_rel" ].

flekse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flekse_v-intr_rel" ].

flektere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "flektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flektere_v-intr_rel" ].

flenge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "flenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flenge_v-trScpr_rel" ].

flenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "flenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flenge_v-tr_rel" ].

flense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flense_v-tr_rel" ].

flerdoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flerdoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flerdoble_v-tr_rel" ].

flerre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flerre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flerre_v-trScpr_rel" ].

flette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flette_v-trScpr_rel" ].

flette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flette_v-tr_rel" ].

flette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flette_v-tr_rel" ].

fli_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "fli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fli_v-tr_rel" ].

fli_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fli_v-tr_rel" ].

flikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flikke_v-intrObl_rel" ].

flikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flikke_v-tr_rel" ].

flimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flimre_v-intr_rel" ].

flippe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flippe_v-intrPrtcl_rel" ].

flire_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "flire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flire_v-intrObl_rel" ].

flire_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "flire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flire_v-intr_rel" ].

flise_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flise_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

flise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flise_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

flise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flise_v-tr_rel" ].

fliselegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fliselegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fliselegge_v-tr_rel" ].

flislegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "flislegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flislegge_v-tr_rel" ].

floke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "floke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

floke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "floke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floke_v-trScpr_rel" ].

floke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "floke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floke_v-tr_rel" ].

floke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "floke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floke_v-tr_rel" ].

flokke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flokke_v-tr_rel" ].

flokse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flokse_v-intrObl_rel" ].

flokse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flokse_v-intr_rel" ].

flomme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "flomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flomme_v-intrPrtcl_rel" ].

flomme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flomme_v-intr_rel" ].

floppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "floppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floppe_v-intr_rel" ].

floragrafere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "floragrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floragrafere_v-intrObl_rel" ].

floragrafere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "floragrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floragrafere_v-intr_rel" ].

floragrafere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "floragrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_floragrafere_v-tr_rel" ].

florere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "florere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_florere_v-intr_rel" ].

flotte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flotte_v-tr_rel" ].

flukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flukte_v-tr_rel" ].

fluktuere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fluktuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fluktuere_v-intr_rel" ].

fluorescere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fluorescere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fluorescere_v-intr_rel" ].

fluorescere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fluorescere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fluorescere_v-tr_rel" ].

fluoridere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fluoridere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fluoridere_v-tr_rel" ].

fluorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fluorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fluorisere_v-tr_rel" ].

fly_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "fly" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fly_v-intr_rel" ].

fly_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "fly" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fly_v-intr_rel" ].

fly_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fly" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fly_v-tr_rel" ].

flyge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "flyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flyge_v-intr_rel" ].

flyge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "flyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flyge_v-intr_rel" ].

flyge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "flyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flyge_v-tr_rel" ].

flykte_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flykte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flykte_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

flykte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flykte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flykte_v-intr_rel" ].

flyte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "flyte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flyte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

flyte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "flyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flyte_v-intrPrtcl_rel" ].

;flyte_iv := v-intr &
; [ INFLECTION nonfstr-strong,
;   STEM < "flyte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_flyte_v-intr_rel" ].

flytte_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flytte_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

flytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flytte_v-intr_rel" ].

flytte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "flytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flytte_v-trScpr_rel" ].

flytte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "flytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flytte_v-trObl_rel" ].

flytte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "flytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flytte_v-tr_rel" ].

; has a duplicate v-tr-obDir
;flytte_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "flytte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_flytte_v-tr_rel" ].

flå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "flå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flå_v-tr_rel" ].

flåhakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "flåhakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flåhakke_v-tr_rel" ].

flåse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "flåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flåse_v-intrObl_rel" ].

flåse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "flåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flåse_v-intr_rel" ].

flæ_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "flæ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flæ_v-tr_rel" ].

flære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "flære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flære_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

flø_impers-pres := v-intrImpers &
 [ INFLECTION finstr-dd,
   STEM < "flø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flø_v-intrImpers_rel" ].

flø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "flø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flø_v-intr_rel" ].

fløke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "fløke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløke_v-trPrtcl_rel" ].

fløke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "fløke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløke_v-trScpr_rel" ].

fløke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "fløke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløke_v-tr_rel" ].

fløke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fløke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløke_v-tr_rel" ].

flømme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "flømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flømme_v-intrPrtcl_rel" ].

flømme_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "flømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flømme_v-intr_rel" ].

flørte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "flørte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_flørte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

flørte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "flørte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_flørte_v-intr_rel" ].

fløte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fløte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløte_v-trObl_rel" ].

fløte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fløte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløte_v-tr_rel" ].

fløyte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløyte_v-intrObl_rel" ].

fløyte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløyte_v-intr_rel" ].

fløyte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløyte_v-trObl_rel" ].

fløyte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fløyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fløyte_v-tr_rel" ].

fnise_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fnise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fnise_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

fnise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fnise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fnise_v-intr_rel" ].

fnyse_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fnyse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fnyse_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

fnyse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fnyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fnyse_v-intr_rel" ].

fokusere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fokusere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fokusere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

fokusere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fokusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fokusere_v-trObl_rel" ].

fokusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fokusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fokusere_v-tr_rel" ].

folde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "folde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_folde_v-trScpr_rel" ].

folde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "folde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_folde_v-tr_rel" ].

fole_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fole_v-intr_rel" ].

foliere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "foliere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foliere_v-tr_rel" ].

folke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "folke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_folke_v-tr_rel" ].

folle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "folle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_folle_v-tr_rel" ].

folne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "folne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_folne_v-intr_rel" ].

fomle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fomle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fomle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fomle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fomle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fomle_v-intr_rel" ].

fonne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fonne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fonne_v-tr_rel" ].

forakte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forakte_v-tr_rel" ].

forakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forakte_v-tr_rel" ].

forandre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "forandre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forandre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forandre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forandre_v-trObl_rel" ].

forandre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forandre_v-tr_rel" ].

forandre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forandre_v-tr_rel" ].

forankre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "forankre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forankre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

forankre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forankre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forankre_v-tr_rel" ].

forankre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forankre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forankre_v-tr_rel" ].

foranledige_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "foranledige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foranledige_v-tr_rel" ].

foranledige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "foranledige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foranledige_v-tr_rel" ].

foranstalte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "foranstalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foranstalte_v-tr_rel" ].

foranstalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "foranstalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foranstalte_v-tr_rel" ].

forarbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forarbeide_v-tr_rel" ].

forarge_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forarge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forarge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forarge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forarge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forarge_v-tr_rel" ].

forarme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forarme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forarme_v-tr_rel" ].

forbanne_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "forbanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbanne_v-trObl_rel" ].

forbanne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forbanne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forbanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbanne_v-tr_rel" ].

forbarme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbarme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbarme_v-tr_rel" ].

forbarme_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbarme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forbarme_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forbause_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbause_v-trObl_rel" ].

forbause_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbause_v-tr_rel" ].

forbedre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbedre_v-tr_rel" ].

forbedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbedre_v-tr_rel" ].

forbeholde_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "forbeholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbeholde_v-ditr_rel" ].

forbeholde_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forbeholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbeholde_v-ditr_rel" ].

forbeine_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbeine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbeine_v-tr_rel" ].

forbeine_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbeine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbeine_v-tr_rel" ].

forbene_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbene_v-tr_rel" ].

forberede_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "forberede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forberede_v-trObl_rel" ].

forberede_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forberede" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forberede_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forbigå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "forbigå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbigå_v-tr_rel" ].

forbinde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "forbinde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forbinde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbinde_v-tr_rel" ].

forbitre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forbitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbitre_v-trObl_rel" ].

forbitre_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forbitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbitre_v-trObl_rel" ].

forbitre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbitre_v-tr_rel" ].

forblende_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forblende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forblende_v-tr_rel" ].

forbli_copnom := v-copN &
 [ INFLECTION finstr-tt,
   STEM < "forbli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbli_v-copN_rel" ].

forbli_intr-obl-ved := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "forbli" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forbli_v-intrObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

forbli_intr-secpr-rais := v-intrScpr-suNrg-scInfORscAdjORscPPORscEQUAT &
 [ INFLECTION finstr-tt,
   STEM < "forbli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbli_v-intrScpr_rel" ].

forblinde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forblinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forblinde_v-tr_rel" ].

forblø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "forblø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forblø_v-intr_rel" ].

forbløffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbløffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbløffe_v-tr_rel" ].

forbrenne_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forbrenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbrenne_v-intr_rel" ].

forbrenne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forbrenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbrenne_v-tr_rel" ].

forbrenne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forbrenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbrenne_v-tr_rel" ].

forbruke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forbruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbruke_v-tr_rel" ].

forbryte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbryte_v-tr_rel" ].

forbryte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbryte_v-trObl_rel" ].

forbryte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbryte_v-tr_rel" ].

forby_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "forby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forby_v-ditr_rel" ].

forby_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-strong,
   STEM < "forby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forby_v-ditr_rel" ].

forby_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "forby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forby_v-tr_rel" ].

forby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forby_v-tr_rel" ].

forbytte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forbytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbytte_v-trObl_rel" ].

forbytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forbytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forbytte_v-tr_rel" ].

fordampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fordampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordampe_v-intr_rel" ].

fordampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordampe_v-tr_rel" ].

fordanske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordanske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordanske_v-tr_rel" ].

fordele_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fordele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fordele_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

fordele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fordele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordele_v-tr_rel" ].

forderve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forderve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forderve_v-tr_rel" ].

fordjupe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fordjupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordjupe_v-tr_rel" ].

fordjupe_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fordjupe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fordjupe_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

fordoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordoble_v-tr_rel" ].

fordra_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "fordra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordra_v-tr_rel" ].

fordra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "fordra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordra_v-tr_rel" ].

fordre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "fordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordre_v-tr_rel" ].

fordre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordre_v-tr_rel" ].

fordreie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "fordreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordreie_v-tr_rel" ].

fordriste_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "fordriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordriste_v-trObl_rel" ].

fordriste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fordriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordriste_v-tr_rel" ].

fordrive_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "fordrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordrive_v-trObl_rel" ].

fordrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fordrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordrive_v-tr_rel" ].

fordufte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fordufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordufte_v-intr_rel" ].

fordumme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordumme_v-tr_rel" ].

fordundre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordundre_v-tr_rel" ].

fordunkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordunkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordunkle_v-tr_rel" ].

fordunste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "fordunste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordunste_v-intrPrtcl_rel" ].

fordunste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fordunste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordunste_v-intr_rel" ].

fordunste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordunste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordunste_v-tr_rel" ].

fordype_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fordype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordype_v-tr_rel" ].

fordype_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fordype" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fordype_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

fordyre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fordyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordyre_v-tr_rel" ].

fordømme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fordømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordømme_v-trObl_rel" ].

fordømme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "fordømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordømme_v-tr_rel" ].

fordømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fordømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordømme_v-tr_rel" ].

fordøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "fordøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fordøye_v-tr_rel" ].

fore_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fóre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fore_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fore_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fóre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fore_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fóre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fore_v-tr_rel" ].

forebringe_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "forebringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forebringe_v-ditr_rel" ].

forebringe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "forebringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forebringe_v-trObl_rel" ].

forebygge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "forebygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forebygge_v-tr_rel" ].

forebygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "forebygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forebygge_v-tr_rel" ].

foredle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "foredle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredle_v-tr_rel" ].

foredra_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "foredra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredra_v-ditr_rel" ].

foredra_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "foredra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredra_v-intrObl_rel" ].

foredra_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "foredra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredra_v-intr_rel" ].

foredra_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "foredra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredra_v-trObl_rel" ].

foredra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "foredra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foredra_v-tr_rel" ].

forefalle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forefalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forefalle_v-intr_rel" ].

forefinnes_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "forefinnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forefinnes_v-intrObl_rel" ].

forefinnes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forefinnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forefinnes_v-intr_rel" ].

foregi_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "foregi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregi_v-tr_rel" ].

foregi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "foregi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregi_v-tr_rel" ].

foregi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "foregi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregi_v-tr_rel" ].

foregripe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "foregripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregripe_v-tr_rel" ].

foregå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "foregå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregå_v-intrObl_rel" ].

foregå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "foregå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foregå_v-intr_rel" ].

foreholde_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "foreholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreholde_v-ditr_rel" ].

forekomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forekomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forekomme_v-intr_rel" ].

foreldes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "foreldes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreldes_v-intr_rel" ].

forelegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "forelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forelegge_v-ditr_rel" ].

forelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forelegge_v-tr_rel" ].

forelese_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "forelese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forelese_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forelese_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forelese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forelese_v-intr_rel" ].

foreligge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "foreligge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreligge_v-intr_rel" ].

forelske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forelske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forelske_v-tr_rel" ].

forelske_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forelske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forelske_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

forene_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forene_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forene_v-tr_rel" ].

forenkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forenkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forenkle_v-tr_rel" ].

foresette_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "foresette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foresette_v-ditr_rel" ].

foresi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "foresi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foresi_v-tr_rel" ].

foreskrive_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "foreskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreskrive_v-ditr_rel" ].

foreskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "foreskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreskrive_v-tr_rel" ].

foreslå_tr-obl-for := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "foreslå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_foreslå_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

foreslå_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION finstr-tt,
   STEM < "foreslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreslå_v-trScpr_rel" ].

foreslå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "foreslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreslå_v-tr_rel" ].

foreslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "foreslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreslå_v-tr_rel" ].

forespeile_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "forespeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forespeile_v-ditr_rel" ].

;forespeile_ditr-subord := v-ditr-obDECL &
; [ INFLECTION nonfstr,
;   STEM < "forespeile" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_forespeile_v_rel" ].

;forespeile_tr-obl := v-trObl &
; [ INFLECTION nonfstr,
;   STEM < "forespeile" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_forespeile_v_rel" ].

forespeile_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forespeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forespeile_v-tr_rel" ].

forespørre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "forespørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forespørre_v-trObl_rel" ].

forespørre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forespørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forespørre_v-tr_rel" ].

forestille_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forestille_v-ditr_rel" ].

forestå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "forestå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forestå_v-tr_rel" ].

foreta_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "foreta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreta_v-ditr_rel" ].

foreta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "foreta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foreta_v-tr_rel" ].

foretrekke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "foretrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foretrekke_v-tr_rel" ].

foretrekke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "foretrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foretrekke_v-tr_rel" ].

foretrekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "foretrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foretrekke_v-tr_rel" ].

forevige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forevige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forevige_v-tr_rel" ].

forevise_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "forevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forevise_v-ditr_rel" ].

forevise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forevise_v-tr_rel" ].

forevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forevise_v-tr_rel" ].

forfalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "forfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfalle_v-intrObl_rel" ].

forfalle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfalle_v-intr_rel" ].

forfalske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfalske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfalske_v-tr_rel" ].

forfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfatte_v-tr_rel" ].

forfeile_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfeile_v-tr_rel" ].

forfekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfekte_v-tr_rel" ].

forferde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forferde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forferde_v-tr_rel" ].

forferdige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forferdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forferdige_v-tr_rel" ].

forfine_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forfine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfine_v-tr_rel" ].

forfjamse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfjamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfjamse_v-tr_rel" ].

forflate_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forflate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflate_v-tr_rel" ].

forflere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflere_v-tr_rel" ].

forflytte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "forflytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflytte_v-intrObl_rel" ].

forflytte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forflytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflytte_v-tr_rel" ].

forflytte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forflytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflytte_v-trObl_rel" ].

forflytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forflytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forflytte_v-tr_rel" ].

forfordele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forfordele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfordele_v-tr_rel" ].

forfremme_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forfremme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forfremme_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

forfremme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfremme_v-tr_rel" ].

forfriske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forfriske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfriske_v-tr_rel" ].

forfriske_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forfriske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfriske_v-trObl_rel" ].

forfriske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forfriske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfriske_v-tr_rel" ].

forfryse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfryse_v-tr_rel" ].

forfryse_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfryse_v-tr_rel" ].

forfølge_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "forfølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfølge_v-trObl_rel" ].

forfølge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forfølge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forfølge_v-tr_rel" ].

forføre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "forføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forføre_v-trObl_rel" ].

forføre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forføre_v-trObl_rel" ].

forføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forføre_v-tr_rel" ].

forføye_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "forføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forføye_v-intrObl_rel" ].

forgape_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forgape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgape_v-tr_rel" ].

forgape_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forgape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgape_v-trObl_rel" ].

forgasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forgasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgasse_v-tr_rel" ].

forgi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "forgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgi_v-ditr_rel" ].

forgifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forgifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgifte_v-tr_rel" ].

forgjelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forgjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgjelde_v-tr_rel" ].

forgjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgjøre_v-tr_rel" ].

forgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgjøre_v-tr_rel" ].

forglemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forglemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forglemme_v-tr_rel" ].

forglemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forglemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forglemme_v-tr_rel" ].

forglømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forglømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forglømme_v-tr_rel" ].

forglømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forglømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forglømme_v-tr_rel" ].

forgreine_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forgreine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgreine_v-trAdv_rel" ].

forgreine_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forgreine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgreine_v-tr_rel" ].

forgrene_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forgrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgrene_v-trAdv_rel" ].

forgrene_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forgrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgrene_v-tr_rel" ].

forgripe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forgripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgripe_v-tr_rel" ].

forgripe_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forgripe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forgripe_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forgrove_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forgrove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgrove_v-tr_rel" ].

forgubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forgubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgubbe_v-tr_rel" ].

forgude_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forgude" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgude_v-tr_rel" ].

forgylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forgylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgylle_v-tr_rel" ].

forgå_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "forgå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forgå_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

forgå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "forgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgå_v-intr_rel" ].

forgå_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "forgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forgå_v-trObl_rel" ].

forhale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhale_v-tr_rel" ].

forhandle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "forhandle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forhandle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forhandle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandle_v-intr_rel" ].

;forhandle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "forhandle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_forhandle_v-trScpr_rel" ].

forhandle_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandle_v-trObl_rel" ].

forhandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandle_v-tr_rel" ].

forhandsbestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhandsbestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandsbestille_v-tr_rel" ].

forhandsomtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhandsomtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandsomtale_v-tr_rel" ].

forhandsstemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forhandsstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhandsstemme_v-intr_rel" ].

forhaste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forhaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhaste_v-tr_rel" ].

forhekse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forhekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhekse_v-tr_rel" ].

forherde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forherde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forherde_v-tr_rel" ].

forherde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forherde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forherde_v-tr_rel" ].

forherlige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forherlige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forherlige_v-tr_rel" ].

forhindre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "forhindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhindre_v-trObl_rel" ].

forhindre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forhindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhindre_v-tr_rel" ].

forhindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forhindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhindre_v-tr_rel" ].

forholde_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forholde_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

forholde_tr-refl-secpr-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "forholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forholde_v-trScpr_rel" ].

forhyre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forhyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhyre_v-tr_rel" ].

forhyre_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forhyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhyre_v-tr_rel" ].

forhåndsbestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhåndsbestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhåndsbestille_v-tr_rel" ].

forhåndsomtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhåndsomtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhåndsomtale_v-tr_rel" ].

forhåndsstemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forhåndsstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhåndsstemme_v-intr_rel" ].

forhåne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forhåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhåne_v-tr_rel" ].

forhøre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhøre_v-trObl_rel" ].

forhøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhøre_v-tr_rel" ].

forhøre_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forhøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forhøre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhøre_v-tr_rel" ].

forhøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "forhøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forhøye_v-tr_rel" ].

forivre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forivre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forivre_v-tr_rel" ].

forjette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forjette_v-tr_rel" ].

forkalke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkalke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkalke_v-tr_rel" ].

forkaste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkaste_v-tr_rel" ].

forkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkaste_v-tr_rel" ].

forkjetre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkjetre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkjetre_v-tr_rel" ].

forkjæle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forkjæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkjæle_v-tr_rel" ].

forkjøle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forkjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkjøle_v-tr_rel" ].

forkjøpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forkjøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkjøpe_v-tr_rel" ].

forklare_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-ditr_rel" ].

forklare_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-ditr_rel" ].

forklare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-intr_rel" ].

forklare_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-intrComp_rel" ].

forklare_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-trObl_rel" ].

forklare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-tr_rel" ].

forklare_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forklare_v-tr_rel" ].

forkle_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "forkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkle_v-tr_rel" ].

forkle_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION finstr-dd,
   STEM < "forkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkle_v-trScpr_rel" ].

forkle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "forkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkle_v-tr_rel" ].

forkleine_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forkleine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkleine_v-tr_rel" ].

forkludre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkludre_v-tr_rel" ].

forkobre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forkobre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkobre_v-tr_rel" ].

forkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkomme_v-intr_rel" ].

forkopre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkopre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkopre_v-tr_rel" ].

forkorte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkorte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkorte_v-tr_rel" ].

forkromme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forkromme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkromme_v-tr_rel" ].

forkue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkue_v-tr_rel" ].

forkulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forkulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkulle_v-intr_rel" ].

forkulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkulle_v-tr_rel" ].

forkvakle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forkvakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkvakle_v-tr_rel" ].

forkynne_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "forkynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkynne_v-ditr_rel" ].

forkynne_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forkynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkynne_v-intr_rel" ].

forkynne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "forkynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkynne_v-intrComp_rel" ].

forkynne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forkynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkynne_v-tr_rel" ].

forkynne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forkynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forkynne_v-tr_rel" ].

forlange_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forlange" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forlange_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

forlange_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forlange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlange_v-tr_rel" ].

forlange_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forlange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlange_v-tr_rel" ].

forlate_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "forlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlate_v-ditr_rel" ].

forlate_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlate_v-trObl_rel" ].

forlate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlate_v-tr_rel" ].

forlede_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlede_v-trObl_rel" ].

forlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlede_v-tr_rel" ].

forlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlegge_v-tr_rel" ].

forlenge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forlenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlenge_v-tr_rel" ].

forlese_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlese_v-tr_rel" ].

forlibe_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "forlibe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlibe_v-trObl_rel" ].

forlike_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forlike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlike_v-trObl_rel" ].

forlike_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forlike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlike_v-tr_rel" ].

forlike_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forlike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlike_v-trObl_rel" ].

forlike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forlike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlike_v-tr_rel" ].

forlise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "forlise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlise_v-intr_rel" ].

forlise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forlise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlise_v-tr_rel" ].

forlokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forlokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlokke_v-tr_rel" ].

forlove_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forlove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlove_v-trAdv_rel" ].

forlove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forlove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlove_v-tr_rel" ].

forlyde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forlyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlyde_v-intr_rel" ].

forlyste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forlyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlyste_v-tr_rel" ].

forlyste_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forlyste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forlyste_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forlyste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forlyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forlyste_v-tr_rel" ].

forløfte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forløfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forløfte_v-tr_rel" ].

forløpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forløpe_v-tr_rel" ].

;forløpe_tr-secpr-nonv := v-trScpr-scObNrg_scAdjORPredprtcl &
; [ INFLECTION nonfstr-strong,
;   STEM < "forløpe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_forløpe_v_rel" ].

forløse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forløse_v-tr_rel" ].

forløyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forløyse_v-tr_rel" ].

formale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "formale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formale_v-tr_rel" ].

formalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "formalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formalisere_v-tr_rel" ].

formane_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "formane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formane_v-trObl_rel" ].

formane_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "formane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formane_v-trObl_rel" ].

formane_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "formane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formane_v-tr_rel" ].

formaste_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "formaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formaste_v-trObl_rel" ].

formaste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "formaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formaste_v-tr_rel" ].

formatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "formatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formatere_v-tr_rel" ].

forme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "forme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forme_v-trScpr_rel" ].

forme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forme_v-tr_rel" ].

forme_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forme_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

forme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forme_v-tr_rel" ].

formene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "formene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formene_v-intr_rel" ].

formere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "formere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formere_v-tr_rel" ].

formere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "formere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formere_v-tr_rel" ].

formgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "formgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formgi_v-tr_rel" ].

formidle_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "formidle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formidle_v-trObl_rel" ].

formidle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "formidle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formidle_v-tr_rel" ].

formilde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "formilde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formilde_v-tr_rel" ].

forminske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forminske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forminske_v-tr_rel" ].

formode_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "formode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formode_v-tr_rel" ].

formode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "formode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formode_v-tr_rel" ].

formolde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "formolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formolde_v-intr_rel" ].

formulde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "formulde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formulde_v-intr_rel" ].

formulere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "formulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formulere_v-tr_rel" ].

formulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "formulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formulere_v-tr_rel" ].

formumme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "formumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formumme_v-tr_rel" ].

formumme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "formumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formumme_v-tr_rel" ].

formå_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "formå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formå_v-trObl_rel" ].

formå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "formå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formå_v-tr_rel" ].

formæle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "formæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formæle_v-tr_rel" ].

formørke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "formørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_formørke_v-tr_rel" ].

fornedre_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "fornedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornedre_v-trObl_rel" ].

fornedre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fornedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornedre_v-tr_rel" ].

fornedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornedre_v-tr_rel" ].

fornekte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fornekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornekte_v-tr_rel" ].

fornekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornekte_v-tr_rel" ].

fornemme_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr,
   STEM < "fornemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornemme_v-intrComp_rel" ].

fornemme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr,
   STEM < "fornemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornemme_v-tr_rel" ].

fornemme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "fornemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornemme_v-tr_rel" ].

fornikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornikle_v-tr_rel" ].

fornorske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornorske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornorske_v-tr_rel" ].

fornye_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fornye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornye_v-tr_rel" ].

fornye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornye_v-tr_rel" ].

fornærme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fornærme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fornærme_v-tr_rel" ].

; too much parses wit 'fornøyd'
;fornøye_tv := v-tr &
; [ INFLECTION nonfstr-de,
;   STEM < "fornøye" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fornøye_v-tr_rel" ].

forordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forordne_v-tr_rel" ].

forpakte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "forpakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpakte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

forpakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forpakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpakte_v-tr_rel" ].

forpeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forpeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpeste_v-tr_rel" ].

forplante_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forplante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forplante_v-tr_rel" ].

forpleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "forpleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpleie_v-tr_rel" ].

forplikte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forplikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forplikte_v-intr_rel" ].

forplikte_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forplikte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forplikte_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

forprosjektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forprosjektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forprosjektere_v-tr_rel" ].

forpuppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forpuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpuppe_v-tr_rel" ].

forpurre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forpurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forpurre_v-tr_rel" ].

forregne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forregne_v-tr_rel" ].

forrekne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forrekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forrekne_v-tr_rel" ].

forrente_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forrente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forrente_v-tr_rel" ].

forrette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forrette_v-intr_rel" ].

forrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forrette_v-tr_rel" ].

forringe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forringe_v-tr_rel" ].

forrykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forrykke_v-tr_rel" ].

forråde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forråde_v-tr_rel" ].

forråe_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forråe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forråe_v-tr_rel" ].

forsage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsage_v-tr_rel" ].

forsake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsake_v-tr_rel" ].

forse_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "forse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forse_v-tr_rel" ].

forse_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "forse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forse_v-trObl_rel" ].

forsegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsegle_v-tr_rel" ].

forsenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsenke_v-tr_rel" ].

forsere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "forsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC frem-k ].

forsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsere_v-tr_rel" ].

forsikre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "forsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsikre_v-intrObl_rel" ].

forsikre_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forsikre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsikre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forsikre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsikre_v-tr_rel" ].

forsikre_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsikre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsikre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsikre_v-tr_rel" ].

forsimple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsimple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsimple_v-tr_rel" ].

forsinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsinke_v-tr_rel" ].

forsire_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forsire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsire_v-tr_rel" ].

forsjofle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsjofle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsjofle_v-tr_rel" ].

forskale_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskale_v-tr_rel" ].

forskanse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forskanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskanse_v-tr_rel" ].

forskanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskanse_v-tr_rel" ].

forske_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "forske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forske_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forske_v-intr_rel" ].

forskjellsbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskjellsbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskjellsbehandle_v-tr_rel" ].

forskjønne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forskjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskjønne_v-tr_rel" ].

forskottere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forskottere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskottere_v-tr_rel" ].

forskrekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskrekke_v-tr_rel" ].

forskreve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forskreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskreve_v-tr_rel" ].

forskrive_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskrive_v-trObl_rel" ].

forskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskrive_v-tr_rel" ].

forskusle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskusle_v-tr_rel" ].

forskuttere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forskuttere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskuttere_v-tr_rel" ].

forskylde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forskylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskylde_v-tr_rel" ].

forskyve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forskyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskyve_v-tr_rel" ].

forskyve_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forskyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskyve_v-tr_rel" ].

forskåne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forskåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskåne_v-trObl_rel" ].

forskåne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forskåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forskåne_v-tr_rel" ].

forsluke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsluke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsluke_v-tr_rel" ].

forsluke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsluke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsluke_v-tr_rel" ].

forslumme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forslumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forslumme_v-tr_rel" ].

forslå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "forslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forslå_v-intr_rel" ].

forsmå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "forsmå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsmå_v-tr_rel" ].

forsnakke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsnakke_v-tr_rel" ].

forsnevre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsnevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsnevre_v-tr_rel" ].

forsone_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsone_v-tr_rel" ].

forsone_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsone" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsone_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forsone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsone_v-tr_rel" ].

forsove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forsove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsove_v-tr_rel" ].

forspenne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forspenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forspenne_v-tr_rel" ].

forspille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forspille_v-tr_rel" ].

forspise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forspise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forspise_v-tr_rel" ].

forspørre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forspørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forspørre_v-tr_rel" ].

forsterke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsterke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsterke_v-tr_rel" ].

forstikke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "forstikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstikke_v-tr_rel" ].

forstille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstille_v-tr_rel" ].

forstrekke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forstrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstrekke_v-trObl_rel" ].

forstrekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forstrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstrekke_v-tr_rel" ].

forstrekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forstrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstrekke_v-tr_rel" ].

forstue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstue_v-tr_rel" ].

forstumme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forstumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstumme_v-intr_rel" ].

forstuve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstuve_v-tr_rel" ].

forstyrre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstyrre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstyrre_v-tr_rel" ].

forstå_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "forstå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forstå_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forstå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "forstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstå_v-tr_rel" ].

forstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "forstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstå_v-tr_rel" ].

forstå_interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "forstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstå_v-intrComp_rel" ].

forstørre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstørre_v-tr_rel" ].

forstøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forstøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstøte_v-tr_rel" ].

forstøtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstøtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstøtte_v-tr_rel" ].

forstøve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forstøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstøve_v-intr_rel" ].

forstøve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forstøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forstøve_v-tr_rel" ].

forsumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsumpe_v-tr_rel" ].

forsure_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsure_v-tr_rel" ].

forsvare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsvare_v-tr_rel" ].

forsvare_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsvare_v-tr_rel" ].

forsvare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsvare_v-tr_rel" ].

forsvenske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsvenske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsvenske_v-tr_rel" ].

forsverge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverge_v-tr_rel" ].

forsverge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forsverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverge_v-tr_rel" ].

forsverge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverge_v-tr_rel" ].

forsverje_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverje_v-tr_rel" ].

forsverje_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forsverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverje_v-tr_rel" ].

forsverje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsverje_v-tr_rel" ].

forsvinne_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "forsvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsvinne_v-intr_rel" ].

forsynde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsynde_v-tr_rel" ].

forsynde_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsynde_v-trObl_rel" ].

forsyne_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forsyne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsyne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forsyne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsyne_v-tr_rel" ].

forsyne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsyne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsyne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forsyne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsyne_v-tr_rel" ].

forsøke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "forsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsøke_v-tr_rel" ].

forsøke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsøke_v-tr_rel" ].

forsøke_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsøke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsøke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forsøke_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsøke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forsøke_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

forsøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsøke_v-tr_rel" ].

forsølve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsølve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsølve_v-tr_rel" ].

forsømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "forsømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsømme_v-tr_rel" ].

forsømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forsømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsømme_v-tr_rel" ].

forsøple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsøple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsøple_v-tr_rel" ].

forsørge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forsørge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsørge_v-tr_rel" ].

forsørge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsørge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsørge_v-tr_rel" ].

forsøte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forsøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forsøte_v-tr_rel" ].

forta_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "forta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forta_v-tr_rel" ].

fortape_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "fortape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortape_v-tr_rel" ].

fortape_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "fortape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortape_v-trObl_rel" ].

forte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forte_v-tr_rel" ].

fortegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortegne_v-tr_rel" ].

fortelle_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-ditr_rel" ].

fortelle_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-ditr_rel" ].

fortelle_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-intrComp_rel" ].

fortelle_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fortelle_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

fortelle_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-tr_rel" ].

fortelle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-tr_rel" ].

fortelle_intrObl-inf := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-strong,
   STEM < "fortelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortelle_v-tr_rel" ].

fortenke_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "fortenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortenke_v-ditr_rel" ].

fortette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortette_v-tr_rel" ].

fortie_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "fortie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortie_v-tr_rel" ].

fortie_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fortie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortie_v-tr_rel" ].

fortinne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortinne_v-tr_rel" ].

fortjene_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "fortjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortjene_v-tr_rel" ].

fortjene_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "fortjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortjene_v-tr_rel" ].

fortjene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fortjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortjene_v-tr_rel" ].

fortne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fortne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortne_v-intr_rel" ].

fortolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortolke_v-tr_rel" ].

fortolle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortolle_v-tr_rel" ].

;fortone_tr-refl-rais := v-trScpr-scObNrg_obRefl_scAdj &
; [ INFLECTION nonfstr-te,
;   STEM < "fortone" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fortone_v-trScpr_rel" ].

fortone_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "fortone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortone_v-trScpr_rel" ].

fortorve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fortorve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortorve_v-tr_rel" ].

fortrekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "fortrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrekke_v-intrObl_rel" ].

fortrekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fortrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrekke_v-tr_rel" ].

fortrenge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "fortrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrenge_v-tr_rel" ].

fortrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fortrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrenge_v-tr_rel" ].

fortrolle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortrolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrolle_v-tr_rel" ].

fortrylle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortrylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortrylle_v-tr_rel" ].

fortryte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "fortryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortryte_v-tr_rel" ].

fortrøste_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fortrøste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fortrøste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fortsette_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "fortsette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fortsette_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fortsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fortsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortsette_v-tr_rel" ].

fortsette_rais := v-intrScpr-scSuNrg &
 [ INFLECTION nonfstr-strong,
   STEM < "fortsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortsette_v-intrScpr_rel" ].

fortvile_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fortvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortvile_v-intrObl_rel" ].

fortvile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fortvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortvile_v-intr_rel" ].

fortykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortykke_v-tr_rel" ].

fortynne_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fortynne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fortynne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fortynne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fortynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortynne_v-tr_rel" ].

fortørne_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "fortørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortørne_v-trObl_rel" ].

fortørne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "fortørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortørne_v-tr_rel" ].

fortøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "fortøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fortøye_v-tr_rel" ].

foruleilige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "foruleilige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_foruleilige_v-tr_rel" ].

forulempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forulempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forulempe_v-tr_rel" ].

forulykke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forulykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forulykke_v-intr_rel" ].

forundre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forundre_v-tr_rel" ].

forundre_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forundre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forundre_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

forundre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forundre_v-tr_rel" ].

forunne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "forunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forunne_v-ditr_rel" ].

forunne_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forunne_v-ditr_rel" ].

forurense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forurense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forurense_v-tr_rel" ].

forurette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forurette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forurette_v-tr_rel" ].

forurolige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forurolige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forurolige_v-tr_rel" ].

forutberegne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "forutberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberegne_v-intrComp_rel" ].

forutberegne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forutberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberegne_v-tr_rel" ].

forutberegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forutberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberegne_v-tr_rel" ].

forutberekne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "forutberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberekne_v-intrComp_rel" ].

forutberekne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forutberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberekne_v-tr_rel" ].

forutberekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forutberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutberekne_v-tr_rel" ].

forutbestemme_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "forutbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutbestemme_v-intrComp_rel" ].

forutbestemme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forutbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutbestemme_v-tr_rel" ].

forutbestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forutbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutbestemme_v-tr_rel" ].

forutse_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "forutse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutse_v-intrComp_rel" ].

forutse_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "forutse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutse_v-tr_rel" ].

forutse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "forutse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutse_v-tr_rel" ].

forutsette_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "forutsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutsette_v-tr_rel" ].

forutsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "forutsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutsette_v-tr_rel" ].

forutsi_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "forutsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutsi_v-intrComp_rel" ].

forutsi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "forutsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutsi_v-tr_rel" ].

forutsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "forutsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutsi_v-tr_rel" ].

forutskikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forutskikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forutskikke_v-tr_rel" ].

forvalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forvalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvalte_v-tr_rel" ].

forvandle_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forvandle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forvandle_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

forvandle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forvandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvandle_v-tr_rel" ].

forvandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forvandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvandle_v-tr_rel" ].

forvanske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forvanske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvanske_v-tr_rel" ].

forvare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvare_v-tr_rel" ].

forvede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forvede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvede_v-tr_rel" ].

forveksle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forveksle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forveksle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

forveksle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forveksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forveksle_v-tr_rel" ].

forvelle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "forvelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvelle_v-intr_rel" ].

forvelle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "forvelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvelle_v-tr_rel" ].

forvenne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forvenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvenne_v-trObl_rel" ].

forvenne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "forvenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvenne_v-tr_rel" ].

forvente_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "forvente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvente_v-tr_rel" ].

forvente_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forvente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvente_v-tr_rel" ].

forvente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forvente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvente_v-tr_rel" ].

forverre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forverre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forverre_v-tr_rel" ].

forverre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forverre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forverre_v-tr_rel" ].

forville_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forville" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forville_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

forvirre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forvirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvirre_v-tr_rel" ].

forvise_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "forvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvise_v-trObl_rel" ].

forvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvise_v-tr_rel" ].

forvisse_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "forvisse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forvisse_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forvisse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forvisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvisse_v-tr_rel" ].

forvisse_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forvisse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_forvisse_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

forvitre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "forvitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvitre_v-intr_rel" ].

forvolde_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "forvolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvolde_v-ditr_rel" ].

forvolde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "forvolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvolde_v-tr_rel" ].

forvolde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forvolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvolde_v-tr_rel" ].

forvrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forvrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvrenge_v-tr_rel" ].

forvri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "forvri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forvri_v-tr_rel" ].

forynge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "forynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forynge_v-tr_rel" ].

forynge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forynge_v-tr_rel" ].

forårsake_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "forårsake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forårsake_v-tr_rel" ].

forårsake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forårsake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forårsake_v-tr_rel" ].

forøde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "forøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forøde_v-tr_rel" ].

forøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "forøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forøke_v-tr_rel" ].

forøve_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "forøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forøve_v-trObl_rel" ].

forøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "forøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_forøve_v-tr_rel" ].

fosforescere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fosforescere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fosforescere_v-intr_rel" ].

fosse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fosse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fosse_v-intr_rel" ].

fosskoke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fosskoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fosskoke_v-intr_rel" ].

fossregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "fossregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fossregne_v-intrImpers_rel" ].

fossro_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "fossro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fossro_v-intr_rel" ].

fostre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fostre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fostre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fostre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fostre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fostre_v-tr_rel" ].

fote_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fote_v-tr_rel" ].

fotografere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fotografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fotografere_v-intr_rel" ].

fotografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fotografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fotografere_v-tr_rel" ].

fotokopiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fotokopiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fotokopiere_v-tr_rel" ].

frabe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "frabe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frabe_v-ditr_rel" ].

frabeordre_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "frabeordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frabeordre_v-ditr_rel" ].

fradømme_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "fradømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fradømme_v-ditr_rel" ].

frafalle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "frafalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frafalle_v-intr_rel" ].

frafalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frafalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frafalle_v-tr_rel" ].

fraflytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fraflytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraflytte_v-tr_rel" ].

fragmentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fragmentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fragmentere_v-tr_rel" ].

fragå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "fragå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fragå_v-tr_rel" ].

fragå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "fragå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fragå_v-tr_rel" ].

frakjenne_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "frakjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakjenne_v-ditr_rel" ].

frakoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frakoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakoble_v-tr_rel" ].

frakople_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frakople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakople_v-tr_rel" ].

fraksjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fraksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraksjonere_v-tr_rel" ].

frakte_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "frakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakte_v-tr_rel" ].

frakte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "frakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakte_v-trScprShft_rel" ].

frakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frakte_v-tr_rel" ].

fralegge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "fralegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fralegge_v-ditr_rel" ].

fralegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fralegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fralegge_v-tr_rel" ].

fralokke_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "fralokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fralokke_v-ditr_rel" ].

frambringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "frambringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frambringe_v-tr_rel" ].

framby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framby_v-tr_rel" ].

framdatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "framdatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framdatere_v-tr_rel" ].

framelske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "framelske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framelske_v-tr_rel" ].

framføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "framføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framføre_v-tr_rel" ].

framgå_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "framgå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_framgå_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

framheve_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "framheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framheve_v-tr_rel" ].

framheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "framheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framheve_v-tr_rel" ].

framholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framholde_v-tr_rel" ].

framkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "framkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framkalle_v-tr_rel" ].

framkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "framkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framkaste_v-tr_rel" ].

framkomme_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "framkomme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_framkomme_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

framkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "framkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framkomme_v-intr_rel" ].

framlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framlegge_v-tr_rel" ].

framleie_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "framleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framleie_v-trObl_rel" ].

framleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "framleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framleie_v-tr_rel" ].

framsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framsette_v-tr_rel" ].

framsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "framsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framsi_v-tr_rel" ].

framskaffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "framskaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framskaffe_v-tr_rel" ].

framskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framskrive_v-tr_rel" ].

framskynde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "framskynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framskynde_v-tr_rel" ].

framskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framskyte_v-tr_rel" ].

framstille_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "framstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_framstille_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

framstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "framstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framstille_v-tr_rel" ].

framstå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "framstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framstå_v-intrObl_rel" ].

framtre_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "framtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framtre_v-intrObl_rel" ].

framtvinge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "framtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framtvinge_v-tr_rel" ].

framvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "framvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_framvise_v-tr_rel" ].

franarre_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "franarre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_franarre_v-ditr_rel" ].

frankere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frankere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frankere_v-tr_rel" ].

frappere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frappere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frappere_v-tr_rel" ].

frarane_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "frarane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frarane_v-ditr_rel" ].

frarå_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "frarå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frarå_v-ditr_rel" ].

frarå_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION finstr-dd,
   STEM < "frarå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frarå_v-ditr_rel" ].

fraråde_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "fraråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraråde_v-ditr_rel" ].

fraråde_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "fraråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraråde_v-ditr_rel" ].

fraselge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fraselge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraselge_v-tr_rel" ].

frasere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "frasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frasere_v-intr_rel" ].

frasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frasere_v-tr_rel" ].

frasi_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "frasi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frasi_v-ditr_rel" ].

fraskille_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "fraskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskille_v-ditr_rel" ].

fraskille_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fraskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskille_v-trObl_rel" ].

fraskille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fraskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskille_v-tr_rel" ].

fraskjøte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fraskjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskjøte_v-trObl_rel" ].

fraskjøte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fraskjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskjøte_v-tr_rel" ].

fraskrive_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "fraskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskrive_v-ditr_rel" ].

fraskrive_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "fraskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraskrive_v-ditr_rel" ].

frastjele_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "frastjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frastjele_v-ditr_rel" ].

frastøte_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "frastøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frastøte_v-ditr_rel" ].

frastøte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "frastøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frastøte_v-trObl_rel" ].

frastøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frastøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frastøte_v-tr_rel" ].

frata_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "frata" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frata_v-ditr_rel" ].

fraternisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fraternisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraternisere_v-intrObl_rel" ].

fraternisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fraternisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fraternisere_v-intr_rel" ].

fratre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fratre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fratre_v-tr_rel" ].

fravike_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fravike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fravike_v-tr_rel" ].

fravriste_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "fravriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fravriste_v-ditr_rel" ].

frede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frede_v-tr_rel" ].

frege_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frege_v-tr_rel" ].

frekventere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frekventere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frekventere_v-tr_rel" ].

frelse_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "frelse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frelse_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frelse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frelse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frelse_v-tr_rel" ].

frembringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "frembringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frembringe_v-tr_rel" ].

fremby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremby_v-tr_rel" ].

fremdatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fremdatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremdatere_v-tr_rel" ].

fremelske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremelske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremelske_v-tr_rel" ].

fremføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fremføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremføre_v-tr_rel" ].

fremgå_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "fremgå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fremgå_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

fremheve_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "fremheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremheve_v-tr_rel" ].

fremheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "fremheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremheve_v-tr_rel" ].

fremholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremholde_v-tr_rel" ].

fremkalle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremkalle_v-tr_rel" ].

fremkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremkaste_v-tr_rel" ].

fremkomme_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "fremkomme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fremkomme_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

fremkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremkomme_v-intr_rel" ].

fremlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremlegge_v-tr_rel" ].

fremleie_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "fremleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremleie_v-trObl_rel" ].

fremleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "fremleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremleie_v-tr_rel" ].

fremme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremme_v-trObl_rel" ].

fremme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremme_v-tr_rel" ].

fremmedgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremmedgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremmedgjøre_v-tr_rel" ].

fremmendgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremmendgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremmendgjøre_v-tr_rel" ].

fremsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremsette_v-tr_rel" ].

fremsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "fremsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremsi_v-tr_rel" ].

fremskaffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremskaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremskaffe_v-tr_rel" ].

fremskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremskrive_v-tr_rel" ].

fremskynde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fremskynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremskynde_v-tr_rel" ].

fremskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremskyte_v-tr_rel" ].

fremstille_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fremstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fremstille_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

fremstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fremstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremstille_v-tr_rel" ].

fremtre_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "fremtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremtre_v-intrObl_rel" ].

fremtvinge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fremtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremtvinge_v-tr_rel" ].

fremvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fremvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fremvise_v-tr_rel" ].

frese_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "frese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frese_v-intr_rel" ].

frese_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "frese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frese_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

frese_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frese_v-tr_rel" ].

freste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "freste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_freste_v-tr_rel" ].

frette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "frette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frette_v-intrObl_rel" ].

frette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frette_v-tr_rel" ].

fri_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fri_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

fri_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fri_v-intr_rel" ].

fri_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fri_v-trObl_rel" ].

fri_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fri_v-trObl_rel" ].

;fri_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION finstr-dd,
;   STEM < "fri" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fri_v-trScpr_rel",
;   SYNSEM.LOCAL.KEY-SPEC fra-k ].

fri_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fri_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

fri_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fri_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

fri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fri_v-tr_rel" ].

frifinne_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "frifinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frifinne_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frifinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "frifinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frifinne_v-tr_rel" ].

frigi_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "frigi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frigi_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frigi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "frigi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frigi_v-tr_rel" ].

frigjøre_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "frigjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frigjøre_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frigjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "frigjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frigjøre_v-tr_rel" ].

frigjøre_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "frigjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frigjøre_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frigjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "frigjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frigjøre_v-tr_rel" ].

frikjenne_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "frikjenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frikjenne_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

frikjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frikjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frikjenne_v-tr_rel" ].

frilanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "frilanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frilanse_v-intr_rel" ].

friliste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "friliste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friliste_v-tr_rel" ].

frisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "frisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frisere_v-tr_rel" ].

frisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frisere_v-tr_rel" ].

friske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "friske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friske_v-intrObl_rel" ].

friske_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "friske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friske_v-intrPrtcl_rel" ].

friske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "friske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

friskmelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "friskmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friskmelde_v-tr_rel" ].

friskmelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "friskmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friskmelde_v-tr_rel" ].

friskne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "friskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friskne_v-intrPrtcl_rel" ].

friskne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "friskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friskne_v-intr_rel" ].

friste_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "friste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friste_v-trObl_rel" ].

friste_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "friste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_friste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

friste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "friste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_friste_v-tr_rel" ].

frita_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "frita" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_frita_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

fritere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fritere_v-tr_rel" ].

fritte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fritte_v-intrObl_rel" ].

fritte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fritte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

frondere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "frondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frondere_v-intr_rel" ].

frottere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "frottere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frottere_v-tr_rel" ].

frottere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frottere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frottere_v-tr_rel" ].

frukte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "frukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frukte_v-intr_rel" ].

frustrere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "frustrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frustrere_v-intrObl_rel" ].

frustrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "frustrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frustrere_v-tr_rel" ].

fryde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fryde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryde_v-tr_rel" ].

fryde_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fryde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fryde_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

fryde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fryde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryde_v-tr_rel" ].

frykte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "frykte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frykte_v-intrObl_rel" ].

frykte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "frykte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frykte_v-tr_rel" ].

frykte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "frykte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frykte_v-tr_rel" ].

frynse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "frynse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frynse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fryse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "fryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryse_v-intrPrtcl_rel" ].

fryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "fryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryse_v-intr_rel" ].

fryse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "fryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryse_v-trScpr_rel" ].

fryse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "fryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryse_v-trScprShft_rel" ].

fryse_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fryse_v-tr_rel" ].

fråde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fråde_v-intr_rel" ].

fråsse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fråsse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fråsse_v-intrObl_rel" ].

fråsse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fråsse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fråsse_v-intr_rel" ].

fråtse_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fråtse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fråtse_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

fråtse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fråtse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fråtse_v-intr_rel" ].

frø_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "frø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frø_v-tr_rel" ].

frøse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "frøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_frøse_v-intr_rel" ].

fuge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "fuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fuge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

fuge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fuge_v-tr_rel" ].

fukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fukte_v-tr_rel" ].

fullbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "fullbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullbringe_v-tr_rel" ].

fullbyrde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fullbyrde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullbyrde_v-tr_rel" ].

fullende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fullende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullende_v-tr_rel" ].

fullføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fullføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullføre_v-tr_rel" ].

fullrose_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fullrose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullrose_v-trObl_rel" ].

fullrose_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fullrose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fullrose_v-tr_rel" ].

fulltakke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "fulltakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fulltakke_v-trObl_rel" ].

fulltakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fulltakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fulltakke_v-tr_rel" ].

;fundamentere_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "fundamentere" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_fundamentere_v-trScpr_rel" ].

fundamentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fundamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fundamentere_v-tr_rel" ].

fundere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fundere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fundere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

fundere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fundere_v-intr_rel" ].

funkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "funkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_funkle_v-intr_rel" ].

funksjonere_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-te,
   STEM < "funksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_funksjonere_v-intrAdv_rel" ].

funksjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "funksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_funksjonere_v-intr_rel" ].

furasjere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "furasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_furasjere_v-intr_rel" ].

furasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "furasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_furasjere_v-tr_rel" ].

fure_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fure_v-tr_rel" ].

furnere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "furnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_furnere_v-trObl_rel" ].

furte_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "furte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_furte_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

furte_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "furte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_furte_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

furte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "furte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_furte_v-intr_rel" ].

fuse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "fuse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fuse_v-intrPrtcl_rel" ].

fusjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fusjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fusjonere_v-intr_rel" ].

fusjonere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fusjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fusjonere_v-trObl_rel" ].

fuske_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fuske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fuske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fuske_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "fuske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fuske_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

fuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "fuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fuske_v-intr_rel" ].

futte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "futte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_futte_v-intrPrtcl_rel" ].

fyke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "fyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyke_v-intr_rel" ].

fyke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "fyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyke_v-intrPrtcl_rel" ].

fyke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "fyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyke_v-intr_rel" ].

fylke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fylke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylke_v-tr_rel" ].

fylke_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "fylke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylke_v-trObl_rel" ].

fylke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fylke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylke_v-tr_rel" ].

fylle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fylle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fylle_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fylle_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

fylle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fylle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fylle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylle_v-tr_rel" ].

fylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "fylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fylle_v-tr_rel" ].

fyllekjøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fyllekjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyllekjøre_v-intr_rel" ].

fyre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "fyre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_fyre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

fyre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "fyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyre_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

fyre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "fyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyre_v-intr_rel" ].

fyre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "fyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyre_v-trScpr_rel" ].

fyse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "fyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fyse_v-intrObl_rel" ].

få_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM.LKEYS.KEYREL.PRED "_få_v-ditr_rel" ].

få_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM.LKEYS.KEYREL.PRED "_få_v-trObl_rel" ].

få_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM.LKEYS.KEYREL.PRED "_få_v-trObl_rel" ].

få_tr-arg1-secpred := v-trScpr-scObNrgCsd &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM.LKEYS.KEYREL.PRED "_få_v-trScpr_rel" ].

få_tr-obl-av := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_få_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

få_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_få_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

få_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-tt,
   STEM < "få" >,
   SYNSEM.LKEYS.KEYREL.PRED "_få_v-trScprShft_rel" ].

fæle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "fæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fæle_v-intrObl_rel" ].

fæle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "fæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fæle_v-intr_rel" ].

fôre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "fôre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fôre_v-tr_rel" ].

fø_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "fø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fø_v-intrObl_rel" ].

fø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "fø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_fø_v-tr_rel" ].

føde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "føde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føde_v-intr_rel" ].

føde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "føde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føde_v-tr_rel" ].

føle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_føle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

føle_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_føle_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

føle_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-trObl_rel" ].

føle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-trPath_rel" ].

føle_tr-refl-rais := v-trScpr-scObNrg_obRefl_scAdj &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-trScpr_rel" ].

føle_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-trScpr_rel" ].

føle_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-tr_rel" ].

føle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "føle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føle_v-tr_rel" ].

følge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "følge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følge_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC med-k ].

følge_intr-telicpartcl-opp := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "følge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følge_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

følge_intr-telicpartcl-med := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "følge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følge_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC med-k ].

følgje_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "følgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følgje_v-intrObl_rel" ].

følgje_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "følgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følgje_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

;følgje_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "følgje" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_følgje_v-trScpr_rel" ].

følgje_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "følgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følgje_v-tr_rel" ].

;følgje_tv := v-tr &
; [ INFLECTION nonfstr-strong,
;   STEM < "følgje" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_følgje_v-tr_rel" ].

følle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "følle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_følle_v-intr_rel" ].

føne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "føne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føne_v-tr_rel" ].

føne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "føne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føne_v-tr_rel" ].

føre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-intr_rel" ].

føre_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_føre_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

føre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-trScpr_rel" ].

føre_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-tr_rel" ].

føre_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-trScprShft_rel" ].

føre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-tr_rel" ].

føre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "føre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-trScpr_rel" ].

;føre_tv := v-tr &
; [ INFLECTION nonfstr-te,
;   STEM < "føre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_føre_v-tr_rel" ].

førebu_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "førebu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førebu_v-trObl_rel" ].

førebu_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "førebu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førebu_v-tr_rel" ].

førebu_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "førebu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førebu_v-trObl_rel" ].

førebu_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "førebu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førebu_v-tr_rel" ].

førtidspensjonere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "førtidspensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førtidspensjonere_v-tr_rel" ].

førtidspensjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "førtidspensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_førtidspensjonere_v-tr_rel" ].

føye_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "føye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føye_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

føye_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "føye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føye_v-tr_rel" ].

føye_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "føye" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_føye_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

føye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "føye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føye_v-tr_rel" ].

føyke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "føyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føyke_v-intr_rel" ].

føyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "føyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_føyse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

gafle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "gafle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gafle_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

gafle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gafle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gafle_v-tr_rel" ].

gagne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gagne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gagne_v-tr_rel" ].

gakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gakke_v-intr_rel" ].

galdre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "galdre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_galdre_v-intr_rel" ].

gale_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gale_v-intr_rel" ].

galoppere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "galoppere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_galoppere_v-intr_rel" ].

galvanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "galvanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_galvanisere_v-tr_rel" ].

gamble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gamble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gamble_v-intr_rel" ].

gamble_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "gamble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gamble_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gande_v-intr_rel" ].

gane_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gane_v-tr_rel" ].

;gange_iv := v-intr &
; [ INFLECTION nonfstr,
;   STEM < "gange" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gange_v_rel" ].

gange_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "gange" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gange_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

;gange_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "gange" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gange_v-tr_rel" ].

gante_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gante_v-intr_rel" ].

gante_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "gante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gante_v-trObl_rel" ].

gantes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gantes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gantes_v-intr_rel" ].

gape_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "gape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gape_v-intrObl_rel" ].

gape_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "gape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gape_v-intrPrtcl_rel" ].

gape_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "gape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gape_v-intr_rel" ].

gaple_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gaple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gaple_v-intr_rel" ].

gapskratte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gapskratte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gapskratte_v-intr_rel" ].

garantere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "garantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garantere_v-intrObl_rel" ].

garantere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "garantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garantere_v-tr_rel" ].

garantere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "garantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garantere_v-tr_rel" ].

gardere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gardere_v-tr_rel" ].

gardere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gardere_v-trObl_rel" ].

gardere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gardere_v-tr_rel" ].

garne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "garne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garne_v-tr_rel" ].

garnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "garnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garnere_v-tr_rel" ].

garnisonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "garnisonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garnisonere_v-intr_rel" ].

garpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "garpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garpe_v-intr_rel" ].

garve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "garve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_garve_v-tr_rel" ].

gasjere_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasjere_v-trAdv_rel" ].

gasjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gasjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasjere_v-tr_rel" ].

gasse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "gasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasse_v-trScpr_rel" ].

gasse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasse_v-tr_rel" ].

gasse_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasse_v-trObl_rel" ].

gasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gasse_v-tr_rel" ].

gauke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gauke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gauke_v-intr_rel" ].

gaule_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gaule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gaule_v-intrObl_rel" ].

gaule_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gaule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gaule_v-intr_rel" ].

gaume_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gaume" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gaume_v-tr_rel" ].

geberde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "geberde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geberde_v-tr_rel" ].

geberde_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "geberde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geberde_v-trScpr_rel" ].

geipe_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "geipe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_geipe_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

geipe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "geipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geipe_v-intr_rel" ].

geleide_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "geleide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geleide_v-tr_rel" ].

geleide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "geleide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geleide_v-tr_rel" ].

geminere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "geminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geminere_v-tr_rel" ].

geminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "geminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geminere_v-tr_rel" ].

generalisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "generalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_generalisere_v-intr_rel" ].

generere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "generere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_generere_v-tr_rel" ].

genierklære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "genierklære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_genierklære_v-tr_rel" ].

gerere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gerere_v-tr_rel" ].

germanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "germanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_germanisere_v-tr_rel" ].

geråde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "geråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_geråde_v-intrObl_rel" ].

gestalte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gestalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gestalte_v-tr_rel" ].

gestalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gestalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gestalte_v-tr_rel" ].

gestikulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gestikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gestikulere_v-intr_rel" ].

gi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-ditr_rel" ].

gi_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gi_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

gi_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-intrPrtcl_rel" ].

gi_obj-eq-pp-refl-14 := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-trObl_rel" ].

gi_tr-arg1-refl-telicpart-12 := v-trPrtcl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-trPrtcl_rel" ].

gi_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-trScprShft_rel" ].

gi_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-tr_rel" ].

gi_tr-refl-obl-13 := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-trObl_rel" ].

gi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-tr_rel" ].

gi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gi_v-tr_rel" ].

gidde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gidde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gidde_v-intr_rel" ].

gidde_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "gidde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gidde_v-tr_rel" ].

gidde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gidde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gidde_v-tr_rel" ].

gifte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "gifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gifte_v-trScpr_rel" ].

gifte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gifte_v-tr_rel" ].

gifte_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gifte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gifte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

gigge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gigge_v-intr_rel" ].

gildre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gildre_v-intr_rel" ].

gildre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gildre_v-tr_rel" ].

giljotinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "giljotinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_giljotinere_v-tr_rel" ].

gimpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gimpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gimpe_v-intr_rel" ].

gimpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gimpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gimpe_v-tr_rel" ].

gipse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gipse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gipse_v-tr_rel" ].

gire_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gire_v-intrObl_rel" ].

gire_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "gire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gire_v-intrPrtcl_rel" ].

gire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gire_v-intr_rel" ].

girere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "girere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_girere_v-tr_rel" ].

gisne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gisne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gisne_v-intr_rel" ].

gispe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gispe_v-intrObl_rel" ].

gispe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gispe_v-intr_rel" ].

gisse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gisse_v-intrObl_rel" ].

gisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gisse_v-intr_rel" ].

gisse_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "gisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gisse_v-trPath_rel" ].

gitre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gitre_v-tr_rel" ].

gjalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjalle_v-intr_rel" ].

gjekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjekke_v-tr_rel" ].

gjelde_epon := v-intrExpn-expnDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "gjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjelde_v-intrExpn_rel" ].

gjelde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjelde_v-tr_rel" ].

gjelle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjelle_v-intr_rel" ].

gjemme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-intrObl_rel" ].

gjemme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

gjemme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-trScpr_rel" ].

gjemme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-trObl_rel" ].

gjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-tr_rel" ].

gjemme_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjemme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

gjemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjemme_v-tr_rel" ].

gjenbruke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenbruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenbruke_v-tr_rel" ].

gjendrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjendrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjendrive_v-tr_rel" ].

gjenerobre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenerobre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenerobre_v-tr_rel" ].

gjenfinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjenfinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenfinne_v-tr_rel" ].

gjenforene_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gjenforene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjenforene_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

gjenforene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenforene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenforene_v-tr_rel" ].

gjenforsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenforsikre_v-tr_rel" ].

gjenføde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenføde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenføde_v-tr_rel" ].

gjenge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "gjenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC med-k ].

gjenge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenge_v-tr_rel" ].

gjengi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "gjengi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengi_v-ditr_rel" ].

gjengi_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "gjengi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengi_v-intrComp_rel" ].

gjengi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "gjengi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengi_v-tr_rel" ].

gjengi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjengi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengi_v-tr_rel" ].

gjengifte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gjengifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengifte_v-tr_rel" ].

gjengifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjengifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengifte_v-tr_rel" ].

gjengjelde_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "gjengjelde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjengjelde_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

gjengjelde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjengjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjengjelde_v-tr_rel" ].

gjeninnføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjeninnføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjeninnføre_v-tr_rel" ].

gjeninnsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjeninnsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjeninnsette_v-tr_rel" ].

gjeninnta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjeninnta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjeninnta_v-tr_rel" ].

gjenkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenkalle_v-tr_rel" ].

gjenkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenkjenne_v-tr_rel" ].

gjenlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjenlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenlegge_v-tr_rel" ].

gjenlyde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjenlyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenlyde_v-intr_rel" ].

gjenløse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenløse_v-tr_rel" ].

gjenmæle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenmæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenmæle_v-intr_rel" ].

gjennomarbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomarbeide_v-tr_rel" ].

gjennombore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennombore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennombore_v-tr_rel" ].

gjennomdrøfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomdrøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomdrøfte_v-tr_rel" ].

gjennomføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomføre_v-tr_rel" ].

gjennomgå_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "gjennomgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomgå_v-intrComp_rel" ].

gjennomgå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "gjennomgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomgå_v-tr_rel" ].

gjennomgå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjennomgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomgå_v-tr_rel" ].

gjennomhulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomhulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomhulle_v-tr_rel" ].

gjennomillustrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomillustrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomillustrere_v-tr_rel" ].

gjennomlese_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomlese_v-tr_rel" ].

gjennomleve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gjennomleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomleve_v-tr_rel" ].

gjennomlufte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomlufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomlufte_v-tr_rel" ].

gjennomlyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomlyse_v-tr_rel" ].

gjennomprøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gjennomprøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomprøve_v-tr_rel" ].

gjennomse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjennomse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomse_v-tr_rel" ].

gjennomskue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomskue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomskue_v-tr_rel" ].

gjennomsteike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomsteike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomsteike_v-tr_rel" ].

gjennomsteke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomsteke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomsteke_v-tr_rel" ].

gjennomstrømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomstrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomstrømme_v-tr_rel" ].

gjennomsyre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjennomsyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomsyre_v-tr_rel" ].

gjennomtenke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomtenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomtenke_v-tr_rel" ].

gjennomtrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomtrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomtrenge_v-tr_rel" ].

gjennomtråle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjennomtråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjennomtråle_v-tr_rel" ].

gjenoppblusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenoppblusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppblusse_v-intr_rel" ].

gjenoppbygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gjenoppbygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppbygge_v-tr_rel" ].

gjenoppdage_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "gjenoppdage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppdage_v-tr_rel" ].

gjenoppdage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenoppdage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppdage_v-tr_rel" ].

gjenoppfriske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenoppfriske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppfriske_v-tr_rel" ].

gjenoppleve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gjenoppleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppleve_v-tr_rel" ].

gjenopplive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenopplive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenopplive_v-tr_rel" ].

gjenopprette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenopprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenopprette_v-tr_rel" ].

gjenoppstå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "gjenoppstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppstå_v-intr_rel" ].

gjenoppta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjenoppta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppta_v-tr_rel" ].

gjenopptrykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenopptrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenopptrykke_v-tr_rel" ].

gjenoppvekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenoppvekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenoppvekke_v-tr_rel" ].

gjenreise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjenreise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenreise_v-tr_rel" ].

gjenreise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenreise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenreise_v-tr_rel" ].

gjenskape_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "gjenskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenskape_v-trScpr_rel" ].

gjenskape_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjenskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenskape_v-tr_rel" ].

gjenspeile_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gjenspeile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjenspeile_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

gjenspeile_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenspeile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenspeile_v-tr_rel" ].

gjenstå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "gjenstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenstå_v-intr_rel" ].

gjenta_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "gjenta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenta_v-intrComp_rel" ].

gjenta_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gjenta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenta_v-tr_rel" ].

gjenta_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "gjenta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenta_v-tr_rel" ].

gjenta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "gjenta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenta_v-tr_rel" ].

gjenvinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gjenvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenvinne_v-tr_rel" ].

gjenåpne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjenåpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjenåpne_v-tr_rel" ].

gjerde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "gjerde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjerde_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

gjespe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gjespe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjespe_v-intrObl_rel" ].

gjespe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjespe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjespe_v-intr_rel" ].

gjeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjeste_v-tr_rel" ].

gjete_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjete_v-tr_rel" ].

gjette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjette_v-intr_rel" ].

gjette_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gjette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjette_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

gjette_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "gjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjette_v-tr_rel" ].

gjette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjette_v-tr_rel" ].

gjorde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gjorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjorde_v-tr_rel" ].

gjure_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gjure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjure_v-tr_rel" ].

gjære_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjære_v-intr_rel" ].

gjære_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjære_v-tr_rel" ].

gjø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gjø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjø_v-intr_rel" ].

;gjø_tr-refl := v-tr-obRefl &
; [ INFLECTION finstr-dd,
;   STEM < "gjø" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gjø_v_rel" ].

;gjø_tv := v-tr &
; [ INFLECTION finstr-dd,
;   STEM < "gjø" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gjø_v_rel" ].

gjøde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "gjøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøde_v-tr_rel" ].

gjøde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gjøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøde_v-tr_rel" ].

gjødsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gjødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjødsle_v-tr_rel" ].

gjøgle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gjøgle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøgle_v-intrObl_rel" ].

gjøgle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gjøgle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøgle_v-intr_rel" ].

gjøle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "gjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøle_v-intrObl_rel" ].

gjøle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøle_v-intr_rel" ].

gjømme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjømme_v-intrObl_rel" ].

gjømme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjømme_v-trScpr_rel" ].

gjømme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjømme_v-trObl_rel" ].

gjømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjømme_v-tr_rel" ].

gjømme_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gjømme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

gjømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gjømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjømme_v-tr_rel" ].

;gjøne_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "gjøne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gjøne_v_rel" ].

;gjøne_iv := v-intr &
; [ INFLECTION nonfstr,
;   STEM < "gjøne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gjøne_v_rel" ].

;gjøre_tr-refl-obl-til := v-trObl-obRefl &
; [ INFLECTION nonfstr-strong,
;   STEM < "gjøre" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_gjøre_v_rel",
;            LOCAL.KEY-SPEC til-k ] ].

gjøre_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclTil &
 [ INFLECTION nonfstr-strong,
   STEM < "gjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøre_v-trScpr_rel" ].

gjøre_tr := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjøre_v_rel" ].

gjørme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "gjørme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjørme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

gjørs_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "gjørs" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gjørs_v-intrPrtcl_rel" ].

gla_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gla" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gla_v-intr_rel" ].

glafse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glafse_v-intr_rel" ].

glamme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glamme_v-intr_rel" ].

glamorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glamorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glamorisere_v-tr_rel" ].

glane_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "glane" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_glane_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

glane_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "glane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glane_v-intr_rel" ].

glanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "glanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glanse_v-tr_rel" ].

glasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glasere_v-tr_rel" ].

glassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glassere_v-tr_rel" ].

glattbarbere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "glattbarbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattbarbere_v-tr_rel" ].

glattbarbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glattbarbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattbarbere_v-tr_rel" ].

glatte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "glatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glatte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

glattkjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "glattkjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattkjemme_v-tr_rel" ].

glattkjemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "glattkjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattkjemme_v-tr_rel" ].

glattstryke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-strong,
   STEM < "glattstryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattstryke_v-trObl_rel" ].

glattstryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "glattstryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glattstryke_v-tr_rel" ].

gle_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "gle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gle_v-trObl_rel" ].

gle_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "gle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gle_v-tr_rel" ].

gle_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "gle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gle_v-trObl_rel" ].

gle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "gle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gle_v-tr_rel" ].

glede_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "glede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glede_v-trObl_rel" ].

glede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "glede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glede_v-tr_rel" ].

glede_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "glede" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_glede_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

glede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "glede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glede_v-tr_rel" ].

glefse_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "glefse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_glefse_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

glefse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glefse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glefse_v-intr_rel" ].

glefse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "glefse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glefse_v-trScprShft_rel" ].

glemme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-intrObl_rel" ].

glemme_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-tr_rel" ].

glemme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-trPrtcl_rel" ].

glemme_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-intrComp_rel" ].

glemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-tr_rel" ].

glemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glemme_v-tr_rel" ].

gleppe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gleppe_v-intr_rel" ].

gli_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gli_v-intr_rel" ].

glide_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "glide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glide_v-intr_rel" ].

glide_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "glide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glide_v-intr_rel" ].

glide_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "glide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glide_v-tr_rel" ].

glidefly_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "glidefly" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glidefly_v-intr_rel" ].

glideflyge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "glideflyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glideflyge_v-intr_rel" ].

glime_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "glime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glime_v-intr_rel" ].

glimre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "glimre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_glimre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

glimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glimre_v-intr_rel" ].

glimte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glimte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glimte_v-intr_rel" ].

glinse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glinse_v-intr_rel" ].

glipe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "glipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glipe_v-intr_rel" ].

glippe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "glippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glippe_v-intrObl_rel" ].

glippe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "glippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glippe_v-intr_rel" ].

glire_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "glire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glire_v-intrObl_rel" ].

glire_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "glire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glire_v-intr_rel" ].

glise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "glise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glise_v-intr_rel" ].

glitre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "glitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glitre_v-intrImpersObl_rel" ].

glitre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glitre_v-intr_rel" ].

glitte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "glitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glitte_v-tr_rel" ].

glo_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "glo" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_glo_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

glo_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "glo" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glo_v-intr_rel" ].

glore_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "glore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glore_v-intr_rel" ].

glorifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glorifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glorifisere_v-tr_rel" ].

glø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "glø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glø_v-intr_rel" ].

gløde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gløde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gløde_v-intr_rel" ].

glømme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-intrObl_rel" ].

glømme_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-tr_rel" ].

glømme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-trPrtcl_rel" ].

glømme_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-intrComp_rel" ].

glømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-tr_rel" ].

glømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "glømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_glømme_v-tr_rel" ].

gløtte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gløtte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gløtte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gløtte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gløtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gløtte_v-intr_rel" ].

gnafse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnafse_v-intrObl_rel" ].

gnafse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnafse_v-intr_rel" ].

gnage_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "gnage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gnage_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gnage_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "gnage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnage_v-intr_rel" ].

gnage_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "gnage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnage_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

gnage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gnage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnage_v-tr_rel" ].

gnaldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnaldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnaldre_v-intr_rel" ].

gneldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gneldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gneldre_v-intr_rel" ].

gnelle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gnelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnelle_v-intr_rel" ].

gni_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "gni" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gni_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gni_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "gni" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gni_v-trScpr_rel" ].

gni_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "gni" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gni_v-trObl_rel" ].

gni_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "gni" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gni_v-tr_rel" ].

;gnidre_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "gnidre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gnidre_v-trScpr_rel" ].

;gnike_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr-et,
;   STEM < "gnike" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gnike_v-intrObl_rel" ].

gnikke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gnikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

;gnikse_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "gnikse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gnikse_v-intr_rel" ].

;gnirke_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "gnirke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gnirke_v-intr_rel" ].

gnisle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnisle_v-intr_rel" ].

gnisse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnisse_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC mot-k ].

gnisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnisse_v-intr_rel" ].

gniste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gniste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gniste_v-intr_rel" ].

gnistre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnistre_v-intr_rel" ].

gnu_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "gnu" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gnu_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gnu_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "gnu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnu_v-trObl_rel" ].

gnu_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "gnu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnu_v-tr_rel" ].

gnubbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnubbe_v-intrObl_rel" ].

gnugge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnugge_v-intrObl_rel" ].

gnukke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnukke_v-intrObl_rel" ].

gnure_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "gnure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnure_v-intrObl_rel" ].

gnure_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gnure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnure_v-intr_rel" ].

gnusle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnusle_v-intrObl_rel" ].

gnusle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnusle_v-intr_rel" ].

gnusse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gnusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnusse_v-intrObl_rel" ].

gnusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gnusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnusse_v-intr_rel" ].

gny_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gny" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gny_v-intr_rel" ].

gnåle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "gnåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnåle_v-intrObl_rel" ].

gnåle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gnåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gnåle_v-intr_rel" ].

godgjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "godgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godgjøre_v-tr_rel" ].

godgjøre_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "godgjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_godgjøre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

godgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "godgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godgjøre_v-tr_rel" ].

godkjenne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "godkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godkjenne_v-trScpr_rel" ].

godkjenne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "godkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godkjenne_v-tr_rel" ].

godkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "godkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godkjenne_v-tr_rel" ].

godskrive_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "godskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godskrive_v-ditr_rel" ].

godskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "godskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godskrive_v-tr_rel" ].

godsnakke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "godsnakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_godsnakke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

godta_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "godta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godta_v-tr_rel" ].

godta_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "godta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godta_v-intrComp_rel" ].

godta_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION finstr-tt,
   STEM < "godta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godta_v-trScpr_rel" ].

godta_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "godta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godta_v-tr_rel" ].

godta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "godta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godta_v-tr_rel" ].

godte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "godte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godte_v-tr_rel" ].

godte_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "godte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_godte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

godtgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "godtgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_godtgjøre_v-tr_rel" ].

gomle_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gomle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gomle_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gomle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gomle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gomle_v-intr_rel" ].

gove_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gove_v-intr_rel" ].

grabbe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "grabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grabbe_v-trScprShft_rel" ].

grabbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grabbe_v-tr_rel" ].

gradbøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "gradbøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gradbøye_v-tr_rel" ].

grade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grade_v-tr_rel" ].

gradere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gradere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gradere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

gradere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gradere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gradere_v-tr_rel" ].

graduere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "graduere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_graduere_v-intr_rel" ].

graduere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "graduere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_graduere_v-tr_rel" ].

grafse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "grafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grafse_v-intrObl_rel" ].

grafse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grafse_v-intr_rel" ].

grafse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "grafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grafse_v-trScprShft_rel" ].

gramse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gramse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gramse_v-intrObl_rel" ].

gramse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "gramse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gramse_v-trScprShft_rel" ].

granske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "granske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_granske_v-tr_rel" ].

granulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "granulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_granulere_v-tr_rel" ].

grase_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "grase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grase_v-tr_rel" ].

grassere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "grassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grassere_v-intrObl_rel" ].

grassere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "grassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grassere_v-intr_rel" ].

gratinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gratinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gratinere_v-tr_rel" ].

gratulere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gratulere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gratulere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

gratulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gratulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gratulere_v-tr_rel" ].

grave_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "grave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grave_v-intr_rel" ].

grave_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "grave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grave_v-trPrtcl_rel" ].

grave_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "grave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grave_v-trScpr_rel" ].

grave_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-de,
   STEM < "grave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grave_v-trScprShft_rel" ].

grave_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "grave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grave_v-tr_rel" ].

gravere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "gravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gravere_v-intrObl_rel" ].

gravere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gravere_v-tr_rel" ].

gravitere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gravitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gravitere_v-intr_rel" ].

gravlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gravlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gravlegge_v-tr_rel" ].

gre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "gre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

gre_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "gre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gre_v-tr_rel" ].

gre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "gre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gre_v-tr_rel" ].

greie_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "greie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-intrObl_rel" ].

greie_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-de,
   STEM < "greie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-intrObl_rel" ].

; not real
;greie_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-de,
;   STEM < "greie" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-trScpr_rel" ].

greie_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "greie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-trAdv_rel" ].

greie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "greie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-tr_rel" ].

greie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "greie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greie_v-tr_rel" ].

greine_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "greine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_greine_v-tr_rel" ].

gremme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gremme_v-tr_rel" ].

gremme_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gremme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gremme_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

grene_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "grene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grene_v-tr_rel" ].

grense_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "grense" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grense_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

gresse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gresse_v-intr_rel" ].

griljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "griljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_griljere_v-tr_rel" ].

grille_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grille_v-tr_rel" ].

grime_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "grime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grime_v-tr_rel" ].

grine_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "grine" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grine_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

grine_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "grine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grine_v-intr_rel" ].

gripe_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "gripe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gripe_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

gripe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "gripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gripe_v-intrPrtcl_rel" ].

gripe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gripe_v-tr_rel" ].

grise_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "grise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grise_v-intr_rel" ].

grise_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "grise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grise_v-trPrtcl_rel" ].

grise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "grise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grise_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

grisle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grisle_v-tr_rel" ].

grisne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grisne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grisne_v-intr_rel" ].

gro_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "gro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gro_v-intrPrtcl_rel" ].

gro_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gro_v-intr_rel" ].

grope_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grope_v-intr_rel" ].

grovmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "grovmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grovmale_v-tr_rel" ].

grovsikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grovsikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grovsikte_v-tr_rel" ].

grovsortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "grovsortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grovsortere_v-tr_rel" ].

grovtelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "grovtelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grovtelle_v-tr_rel" ].

gruble_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gruble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gruble_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

gruble_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "gruble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gruble_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

gruble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gruble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gruble_v-intr_rel" ].

grue_obj-eq-pp-refl-til := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "grue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grue_v-trObl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

grue_obj-eq-pp-refl-for := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "grue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grue_v-trObl_rel",
   SYNSEM.LOCAL.KEY-SPEC for-k ].

grue_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "grue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grue_v-tr_rel" ].

grue_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "grue" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grue_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

grue_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "grue" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grue_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

grumse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "grumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grumse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

grundere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "grundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grundere_v-tr_rel" ].

grunne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "grunne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grunne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

grunne_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "grunne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grunne_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

grunne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunne_v-intr_rel" ].

;grunne_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "grunne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_grunne_v-trScpr_rel" ].

grunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunne_v-tr_rel" ].

grunnfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grunnfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunnfeste_v-tr_rel" ].

grunngi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "grunngi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunngi_v-tr_rel" ].

grunnlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "grunnlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunnlegge_v-tr_rel" ].

grunnsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "grunnsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunnsette_v-tr_rel" ].

grunnstøte_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "grunnstøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grunnstøte_v-intr_rel" ].

gruppere_tr-obl-etter := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "gruppere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gruppere_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

gruppere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "gruppere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gruppere_v-tr_rel" ].

gruppere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gruppere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gruppere_v-tr_rel" ].

gruse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gruse_v-tr_rel" ].

gruslegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gruslegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gruslegge_v-tr_rel" ].

gry_impers-pres := v-intrImpers &
 [ INFLECTION finstr-dd,
   STEM < "gry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gry_v-intrImpers_rel" ].

gry_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "gry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gry_v-intr_rel" ].

gryne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "gryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gryne_v-tr_rel" ].

gryne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gryne_v-tr_rel" ].

grynte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grynte_v-intr_rel" ].

gråle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr,
   STEM < "gråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gråle_v-trScprShft_rel" ].

gråne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "gråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gråne_v-intrImpers_rel" ].

gråne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gråne_v-intr_rel" ].

gråte_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "gråte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gråte_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

gråte_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "gråte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_gråte_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

gråte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gråte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gråte_v-intr_rel" ].

gråte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "gråte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gråte_v-tr_rel" ].

grø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "grø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grø_v-intr_rel" ].

grøde_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "grøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grøde_v-intr_rel" ].

grøfte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grøfte_v-intr_rel" ].

grøfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grøfte_v-tr_rel" ].

grønke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grønke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grønke_v-intr_rel" ].

grønkes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "grønkes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grønkes_v-intr_rel" ].

grønnes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "grønnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grønnes_v-intr_rel" ].

grønske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grønske_v-intr_rel" ].

grøppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "grøppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grøppe_v-tr_rel" ].

grøsse_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "grøsse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_grøsse_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

grøsse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "grøsse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_grøsse_v-intr_rel" ].

gufse_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "gufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gufse_v-intrImpers_rel" ].

guide_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "guide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_guide_v-tr_rel" ].

guide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "guide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_guide_v-tr_rel" ].

gule_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "gule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gule_v-intrImpers_rel" ].

gulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gulke_v-intr_rel" ].

;gulke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "gulke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gulke_v-trScpr_rel" ].

gulne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gulne_v-intr_rel" ].

gulpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gulpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gulpe_v-intr_rel" ].

gulpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "gulpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gulpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

gummiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gummiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gummiere_v-tr_rel" ].

gurgle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gurgle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gurgle_v-intr_rel" ].

gurgle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "gurgle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gurgle_v-tr_rel" ].

gurpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gurpe_v-intr_rel" ].

guste_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "guste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_guste_v-intrImpers_rel" ].

gutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "gutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gutere_v-tr_rel" ].

gylle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "gylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gylle_v-tr_rel" ].

gymnastisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gymnastisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gymnastisere_v-intr_rel" ].

gynge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "gynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gynge_v-intr_rel" ].

gynge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "gynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gynge_v-tr_rel" ].

gyse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "gyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyse_v-intrObl_rel" ].

gyse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "gyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyse_v-intr_rel" ].

gyte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyte_v-intr_rel" ].

gyte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "gyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

gyve_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "gyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyve_v-intrObl_rel" ].

gyve_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "gyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyve_v-intrPrtcl_rel" ].

gyve_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "gyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gyve_v-intr_rel" ].

;gå_intr-secpr-10 := v-intrScpr-scSuNrgCsd &
; [ INFLECTION finstr-tt,
;   STEM < "gå" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gå_v_rel" ].

gå_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gå_v-trPrtcl_rel" ].

;gå_tr-arg1-secpred := v-trScpr-scObNrgCsd &
; [ INFLECTION finstr-tt,
;   STEM < "gå" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gå_v-trScpr_rel" ].

gå_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION finstr-tt,
   STEM < "gå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gå_v-trScpr_rel" ].

gå_tv := v-tr-suDir_obLengthunit &
 [ INFLECTION nonfstr-strong,
   STEM < "gå" >,
;   SYNSEM.LOCAL.CONT.HOOK.INDEX.SORT event-unit,
    SYNSEM.LKEYS.KEYREL.PRED "_gå_v-tr_rel" ].

;gåre_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "gåre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_gåre_v_rel" ].

gøyse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "gøyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gøyse_v-intr_rel" ].

gøyse_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "gøyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_gøyse_v-intr_rel" ].

ha_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "ha" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ha_v-ditr_rel" ].

;ha_obj-eq-pp := v-trObl-oblEqObInf &
; [ INFLECTION finstr-tt,
;   STEM < "ha" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ha_v-trObl_rel" ].

habilitere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "habilitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_habilitere_v-tr_rel" ].

habilitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "habilitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_habilitere_v-tr_rel" ].

hagle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "hagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hagle_v-intrImpers_rel" ].

hagle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "hagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hagle_v-intrPrtcl_rel" ].

hagle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hagle_v-intr_rel" ].

haike_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "haike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haike_v-intr_rel" ].

haike_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "haike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_haike_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

haike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "haike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haike_v-intr_rel" ].

hake_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hake_v-trObl_rel" ].

hakke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hakke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

hakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hakke_v-intr_rel" ].

hakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hakke_v-trScpr_rel" ].

hakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hakke_v-tr_rel" ].

hale_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hale_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hale_v-intr_rel" ].

hale_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "hale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hale_v-trScpr_rel" ].

halle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "halle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halle_v-intrObl_rel" ].

halle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "halle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halle_v-intr_rel" ].

hallusinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hallusinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hallusinere_v-intr_rel" ].

hallusinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hallusinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hallusinere_v-tr_rel" ].

halse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "halse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halse_v-intr_rel" ].

halshogge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "halshogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halshogge_v-tr_rel" ].

halshugge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "halshugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halshugge_v-tr_rel" ].

halte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "halte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halte_v-intr_rel" ].

halte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "halte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halte_v-intr_rel" ].

halte_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "halte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halte_v-trPath_rel" ].

halve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "halve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halve_v-tr_rel" ].

halvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "halvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halvere_v-tr_rel" ].

halvgardere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "halvgardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halvgardere_v-tr_rel" ].

halvklare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "halvklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halvklare_v-tr_rel" ].

halvsove_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "halvsove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halvsove_v-intr_rel" ].

halvsåle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "halvsåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_halvsåle_v-tr_rel" ].

hamle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hamle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamle_v-intrObl_rel" ].

hamle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hamle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamle_v-intr_rel" ].

hamne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamne_v-intrObl_rel" ].

hamne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamne_v-tr_rel" ].

hamre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hamre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hamre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hamre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamre_v-intr_rel" ].

hamre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamre_v-trScpr_rel" ].

hamre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamre_v-tr_rel" ].

hamse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamse_v-tr_rel" ].

hamstre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hamstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamstre_v-intr_rel" ].

hamstre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hamstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hamstre_v-tr_rel" ].

handfare_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "handfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handfare_v-tr_rel" ].

handgi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "handgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handgi_v-ditr_rel" ].

handhelse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "handhelse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_handhelse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

handhelse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "handhelse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handhelse_v-intr_rel" ].

handheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "handheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handheve_v-tr_rel" ].

handhilse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "handhilse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_handhilse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

handhilse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "handhilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handhilse_v-intr_rel" ].

handikappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "handikappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handikappe_v-tr_rel" ].

handle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "handle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_handle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

handle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "handle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handle_v-intr_rel" ].

handle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "handle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handle_v-tr_rel" ].

handplukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "handplukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handplukke_v-tr_rel" ].

handsame_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "handsame" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handsame_v-tr_rel" ].

handse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "handse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handse_v-intr_rel" ].

handtere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "handtere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_handtere_v-tr_rel" ].

hangle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "hangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hangle_v-intr_rel" ].

hangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hangle_v-intr_rel" ].

hanskes_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "hanskes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hanskes_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hardkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hardkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hardkoke_v-tr_rel" ].

hardne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "hardne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hardne_v-intrPrtcl_rel" ].

hardne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hardne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hardne_v-intr_rel" ].

hardtrampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hardtrampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hardtrampe_v-tr_rel" ].

hardtrene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hardtrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hardtrene_v-intr_rel" ].

harke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "harke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harke_v-intr_rel" ].

harme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "harme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harme_v-tr_rel" ].

harme_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "harme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_harme_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

harme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "harme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harme_v-tr_rel" ].

harmonere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "harmonere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_harmonere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

harmonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "harmonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harmonere_v-intr_rel" ].

harmonisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "harmonisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harmonisere_v-tr_rel" ].

harpe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "harpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harpe_v-intrObl_rel" ].

harpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "harpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harpe_v-tr_rel" ].

harpesere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "harpesere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harpesere_v-tr_rel" ].

harpunere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "harpunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harpunere_v-tr_rel" ].

harselere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "harselere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harselere_v-intrObl_rel" ].

harselere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "harselere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harselere_v-intr_rel" ].

harske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "harske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harske_v-tr_rel" ].

harskne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "harskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harskne_v-intr_rel" ].

harve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "harve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harve_v-intr_rel" ].

harve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "harve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_harve_v-tr_rel" ].

haspe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "haspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haspe_v-trScpr_rel" ].

haspe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "haspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haspe_v-tr_rel" ].

hasple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hasple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hasple_v-tr_rel" ].

haste_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "haste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_haste_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

haste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "haste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haste_v-intr_rel" ].

hate_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "hate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hate_v-tr_rel" ].

hate_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hate_v-tr_rel" ].

hate_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hate_v-tr_rel" ].

hauge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hauge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hauge_v-trPrtcl_rel" ].

hauglegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hauglegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hauglegge_v-tr_rel" ].

haugta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "haugta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_haugta_v-tr_rel" ].

hauke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hauke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hauke_v-intr_rel" ].

hausse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hausse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hausse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

havarere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "havarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_havarere_v-intr_rel" ].

havne_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "havne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_havne_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

havne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "havne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_havne_v-tr_rel" ].

heade_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "heade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heade_v-intr_rel" ].

heade_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "heade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heade_v-trScpr_rel" ].

heade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "heade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heade_v-tr_rel" ].

hedre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hedre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hedre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hedre_v-tr_rel" ].

hefte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hefte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hefte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hefte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hefte_v-trScpr_rel" ].

hefte_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hefte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hefte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hefte_v-tr_rel" ].

hegde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "hegde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hegde_v-intrObl_rel" ].

hegde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "hegde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hegde_v-tr_rel" ].

hegde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "hegde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hegde_v-tr_rel" ].

hegne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hegne_v-intrObl_rel" ].

heie_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "heie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_heie_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

heie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "heie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heie_v-intr_rel" ].

heie_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "heie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heie_v-tr_rel" ].

heilgardere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "heilgardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilgardere_v-tr_rel" ].

heilgardere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "heilgardere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_heilgardere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

heilsteike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heilsteike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilsteike_v-tr_rel" ].

heilsteke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heilsteke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilsteke_v-tr_rel" ].

heilstøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heilstøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilstøpe_v-tr_rel" ].

heilstøype_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heilstøype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilstøype_v-tr_rel" ].

heilsynkronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heilsynkronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heilsynkronisere_v-tr_rel" ].

heime_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "heime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heime_v-intrObl_rel" ].

heimfalle_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "heimfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimfalle_v-intr_rel" ].

heimfalle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "heimfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimfalle_v-tr_rel" ].

heimfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "heimfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimfeste_v-tr_rel" ].

heimføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heimføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimføre_v-tr_rel" ].

heimkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heimkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimkalle_v-tr_rel" ].

heimle_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "heimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimle_v-ditr_rel" ].

heimsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heimsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimsende_v-tr_rel" ].

heimsøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heimsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heimsøke_v-tr_rel" ].

heine_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "heine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heine_v-tr_rel" ].

heise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "heise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heise_v-intr_rel" ].

heise_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "heise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heise_v-trPrtcl_rel" ].

heise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "heise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heise_v-trScpr_rel" ].

heise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heise_v-tr_rel" ].

heitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "heitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heitne_v-intr_rel" ].

hekke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekke_v-intr_rel" ].

hekle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekle_v-intr_rel" ].

hekle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekle_v-tr_rel" ].

hekse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekse_v-intr_rel" ].

hekte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

hekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hekte_v-tr_rel" ].

hektografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hektografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hektografere_v-tr_rel" ].

helbrede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "helbrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helbrede_v-tr_rel" ].

helde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "helde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helde_v-tr_rel" ].

hele_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "hele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hele_v-intr_rel" ].

hele_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "hele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hele_v-tr_rel" ].

helgardere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "helgardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helgardere_v-tr_rel" ].

helgardere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "helgardere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_helgardere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

helle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "helle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helle_v-intr_rel" ].

helle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "helle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helle_v-trScpr_rel" ].

helle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "helle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helle_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

hellelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hellelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hellelegge_v-tr_rel" ].

hellige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hellige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hellige_v-tr_rel" ].

helligholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "helligholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helligholde_v-tr_rel" ].

helseslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "helseslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helseslå_v-tr_rel" ].

helsteike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "helsteike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helsteike_v-tr_rel" ].

helsteke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "helsteke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helsteke_v-tr_rel" ].

helstøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "helstøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helstøpe_v-tr_rel" ].

helstøype_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "helstøype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helstøype_v-tr_rel" ].

helsynkronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "helsynkronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_helsynkronisere_v-tr_rel" ].

hemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hemme_v-tr_rel" ].

hemmeligholde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "hemmeligholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hemmeligholde_v-tr_rel" ].

hemmeligholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hemmeligholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hemmeligholde_v-tr_rel" ].

hemmeligstemple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hemmeligstemple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hemmeligstemple_v-tr_rel" ].

hende_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hende_v-intr_rel" ].

henfalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "henfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henfalle_v-intrObl_rel" ].

henføre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "henføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henføre_v-trObl_rel" ].

henføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "henføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henføre_v-tr_rel" ].

henge_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henge_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

henge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henge_v-intrPrtcl_rel" ].

henge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henge_v-intr_rel" ].

henge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henge_v-trScpr_rel" ].

henge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henge_v-tr_rel" ].

henge_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

henge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "henge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henge_v-tr_rel" ].

hengi_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "hengi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hengi_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

hengsle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hengsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hengsle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

hengsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hengsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hengsle_v-tr_rel" ].

henholde_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "henholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henholde_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

henhøre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "henhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henhøre_v-intrObl_rel" ].

henkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "henkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henkaste_v-tr_rel" ].

henlede_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "henlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henlede_v-trObl_rel" ].

henlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "henlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henlegge_v-tr_rel" ].

henregne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "henregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henregne_v-trObl_rel" ].

henrekne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "henrekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henrekne_v-trObl_rel" ].

henrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "henrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henrette_v-tr_rel" ].

henrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "henrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henrive_v-tr_rel" ].

henrykke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "henrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henrykke_v-tr_rel" ].

hensette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "hensette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hensette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

henskyte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "henskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henskyte_v-trObl_rel" ].

henskyte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "henskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henskyte_v-trObl_rel" ].

henslepe_tr-arg12-refl-secpred := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "henslepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henslepe_v-trScpr_rel" ].

henspille_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "henspille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henspille_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

henstille_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "henstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henstille_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

henstå_copnom := v-copN &
 [ INFLECTION finstr-tt,
   STEM < "henstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henstå_v-copN_rel" ].

henstå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "henstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_henstå_v-intr_rel" ].

hente_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hente_v-ditr_rel" ].

hente_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hente_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC hit-k ].

hente_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hente_v-trObl_rel" ].

hente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hente_v-tr_rel" ].

hentyde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hentyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hentyde_v-intrObl_rel" ].

hentyde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hentyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hentyde_v-tr_rel" ].

henvende_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "henvende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henvende_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

henvise_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "henvise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henvise_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

henvise_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "henvise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_henvise_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

heppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "heppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heppe_v-intr_rel" ].

herde_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "herde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herde_v-tr_rel" ].

herde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "herde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herde_v-tr_rel" ].

herdne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "herdne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herdne_v-intr_rel" ].

herje_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "herje" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_herje_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

herje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "herje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herje_v-intr_rel" ].

herliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "herliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herliggjøre_v-tr_rel" ].

herme_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "herme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_herme_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

hermetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hermetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hermetisere_v-tr_rel" ].

heroisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "heroisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heroisere_v-tr_rel" ].

herpesere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "herpesere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_herpesere_v-tr_rel" ].

herse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "herse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_herse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

herske_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "herske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_herske_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

hesje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hesje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hesje_v-intr_rel" ].

hesje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hesje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hesje_v-tr_rel" ].

hespe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hespe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hespe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hespe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hespe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hespe_v-tr_rel" ].

hesple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hesple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hesple_v-tr_rel" ].

hestehandle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hestehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hestehandle_v-intrObl_rel" ].

hestehandle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hestehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hestehandle_v-intr_rel" ].

hete_tr := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hete_v-tr_rel" ].

;hete_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "hete" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hete_v-trScpr_rel" ].

hetne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hetne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hetne_v-intr_rel" ].

hetse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hetse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hetse_v-tr_rel" ].

hevde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hevde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevde_v-tr_rel" ].

hevde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hevde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevde_v-tr_rel" ].

hevde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hevde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevde_v-tr_rel" ].

heve_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "heve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_heve_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

heve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "heve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heve_v-tr_rel" ].

heve_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "heve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heve_v-trObl_rel" ].

heve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "heve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_heve_v-tr_rel" ].

hevle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevle_v-tr_rel" ].

hevne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevne_v-tr_rel" ].

hevne_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hevne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hevne_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

hevne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hevne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hevne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

hevne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hevne_v-tr_rel" ].

hie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hie_v-tr_rel" ].

hige_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hige" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hige_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

hike_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "hike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hike_v-intrObl_rel" ].

hike_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "hike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hike_v-intr_rel" ].

hikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hikke_v-intr_rel" ].

hikste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hikste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hikste_v-intr_rel" ].

hikstegråte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "hikstegråte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hikstegråte_v-intr_rel" ].

hilde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "hilde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hilde_v-tr_rel" ].

hildre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "hildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hildre_v-intrPrtcl_rel" ].

hildre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hildre_v-intr_rel" ].

hilse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hilse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hilse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

hilse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hilse_v-intr_rel" ].

hilse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "hilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hilse_v-trObl_rel" ].

hilse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hilse_v-tr_rel" ].

himle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "himle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_himle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

himle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "himle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_himle_v-intr_rel" ].

himle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "himle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_himle_v-tr_rel" ].

hindre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "hindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hindre_v-trObl_rel" ].

hindre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hindre_v-tr_rel" ].

hindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hindre_v-tr_rel" ].

hinke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "hinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hinke_v-intr_rel" ].

hinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hinke_v-intr_rel" ].

hinke_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "hinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hinke_v-trPath_rel" ].

hipe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "hipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hipe_v-intrObl_rel" ].

hipe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "hipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hipe_v-intr_rel" ].

hire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hire_v-intr_rel" ].

hisse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hisse_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hisse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hisse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hisse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hisse_v-trObl_rel" ].

hisse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hisse_v-tr_rel" ].

hitsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hitsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hitsette_v-tr_rel" ].

hitte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hitte_v-intrObl_rel" ].

hitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hitte_v-tr_rel" ].

hive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-intr_rel" ].

hive_tr-arg1-refl-telicpart-på := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

hive_tr-arg1-refl-telicpart-rundt := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC rundt-k ].

hive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-trScpr_rel" ].

hive_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-tr_rel" ].

hive_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hive_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

hive_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hive_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hive_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hive_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

hive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hive_v-tr_rel" ].

hjelpe_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hjelpe_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

hjelpe_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hjelpe_v-trObl_rel"] ].

hjelpe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjelpe_v-intrPrtcl_rel" ].

hjelpe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjelpe_v-intr_rel" ].

hjelpe_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjelpe_v-trObl_rel" ].

hjelpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjelpe_v-trScpr_rel" ].

hjelpe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hjelpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjelpe_v-tr_rel" ].

hjemfalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "hjemfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemfalle_v-intrObl_rel" ].

hjemfalle_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "hjemfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemfalle_v-intr_rel" ].

hjemfalle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hjemfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemfalle_v-tr_rel" ].

hjemfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hjemfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemfeste_v-tr_rel" ].

hjemføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hjemføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemføre_v-tr_rel" ].

hjemkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hjemkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemkalle_v-tr_rel" ].

hjemle_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "hjemle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemle_v-ditr_rel" ].

hjemle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hjemle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemle_v-tr_rel" ].

hjemsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hjemsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemsende_v-tr_rel" ].

hjemsøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hjemsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjemsøke_v-tr_rel" ].

hjernevaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hjernevaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hjernevaske_v-tr_rel" ].

hofferde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hofferde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hofferde_v-tr_rel" ].

hofferde_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hofferde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hofferde_v-trObl_rel" ].

hogge_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "hogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hogge_v-trObl_rel" ].

hogge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hogge_v-tr_rel" ].

hoie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hoie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hoie_v-intr_rel" ].

holde_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "holde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_holde_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

holde_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "holde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_holde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

holde_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "holde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_holde_v-trScpr_rel" ].

holde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "holde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_holde_v-tr_rel" ].

;hole_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "hole" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hole_v-trScpr_rel" ].

;hole_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "hole" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hole_v-tr_rel" ].

holke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "holke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_holke_v-tr_rel" ].

holne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "holne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_holne_v-intr_rel" ].

homme_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "homme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_homme_v-intr_rel" ].

homme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "homme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_homme_v-tr_rel" ].

homogenisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "homogenisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_homogenisere_v-tr_rel" ].

honorere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "honorere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_honorere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

honorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "honorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_honorere_v-tr_rel" ].

hope_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hope_v-intr_rel" ].

hope_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hope_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hope_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hope_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hope_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hope_v-tr_rel" ].

hore_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hore_v-intr_rel" ].

horse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "horse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_horse_v-intr_rel" ].

horve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "horve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_horve_v-intr_rel" ].

horve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "horve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_horve_v-tr_rel" ].

hospitalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hospitalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hospitalisere_v-tr_rel" ].

hospitere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hospitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hospitere_v-intrObl_rel" ].

hospitere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hospitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hospitere_v-intr_rel" ].

hoste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hoste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hoste_v-intr_rel" ].

hoste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hoste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hoste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

hote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hote_v-intr_rel" ].

hovere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovere_v-intrObl_rel" ].

hovere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovere_v-intr_rel" ].

hovmesterere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hovmesterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovmesterere_v-intr_rel" ].

hovmode_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hovmode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovmode_v-trObl_rel" ].

hovne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "hovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovne_v-intrPrtcl_rel" ].

hovne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hovne_v-intr_rel" ].

hudflette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hudflette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hudflette_v-tr_rel" ].

hudstryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "hudstryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hudstryke_v-tr_rel" ].

hue_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hue_v-intr_rel" ].

hufse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "hufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hufse_v-intr_rel" ].

hufse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hufse_v-intrObl_rel" ].

hufse_intr-oblrefl := v-intrObl-oblRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hufse_v-intrObl_rel" ].

hufse_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "hufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hufse_v-trPath_rel" ].

huge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "huge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huge_v-tr_rel" ].

hugge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "hugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugge_v-trScpr_rel" ].

hugge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "hugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugge_v-tr_rel" ].

hugse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-intrObl_rel" ].

hugse_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-intrObl_rel" ].

hugse_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-tr_rel" ].

hugse_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-intrComp_rel" ].

hugse_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-tr_rel" ].

hugse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hugse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugse_v-tr_rel" ].

hugsvale_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "hugsvale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugsvale_v-tr_rel" ].

hugta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "hugta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hugta_v-tr_rel" ].

huie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "huie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huie_v-intr_rel" ].

huke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "huke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

;huke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "huke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_huke_v-trScpr_rel" ].

huke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "huke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huke_v-tr_rel" ].

;hukre_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "hukre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hukre_v-intr_rel" ].

hule_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "hule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hule_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

hulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hulke_v-intr_rel" ].

hulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hulle_v-tr_rel" ].

humanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "humanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_humanisere_v-tr_rel" ].

humpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "humpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_humpe_v-intr_rel" ].

humpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "humpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_humpe_v-intr_rel" ].

humpe_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "humpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_humpe_v-trPath_rel" ].

humre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "humre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_humre_v-intr_rel" ].

hundjage_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hundjage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hundjage_v-trObl_rel" ].

hundjage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hundjage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hundjage_v-tr_rel" ].

hundse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hundse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hundse_v-intrObl_rel" ].

hundse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hundse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hundse_v-tr_rel" ].

hungre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hungre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hungre_v-intrObl_rel" ].

hungre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hungre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hungre_v-intr_rel" ].

;hurpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "hurpe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hurpe_v-trScpr_rel" ].

hurre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hurre_v-intr_rel" ].

husbankfinansiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "husbankfinansiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_husbankfinansiere_v-tr_rel" ].

;huse_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "huse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_huse_v_rel" ].

husere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "husere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_husere_v-intr_rel" ].

husholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "husholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_husholde_v-tr_rel" ].

husholdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "husholdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_husholdere_v-tr_rel" ].

huske_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_huske2_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

huske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske1_v-intr_rel" ].

huske_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske2_v-intrObl_rel" ].

huske_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske2_v-tr_rel" ].

huske_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske2_v-intrComp_rel" ].

huske_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske2_v-tr_rel" ].

huske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "huske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_huske2_v-tr_rel" ].

hustre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hustre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hustre_v-intrObl_rel" ].

hustre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hustre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hustre_v-intr_rel" ].

husvale_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "husvale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_husvale_v-tr_rel" ].

hute_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "hute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hute_v-trPath_rel" ].

hutre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hutre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hutre_v-intr_rel" ].

hvelve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hvelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvelve_v-intr_rel" ].

hvelve_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hvelve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hvelve_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

hvelve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hvelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvelve_v-tr_rel" ].

hvese_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hvese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvese_v-intr_rel" ].

hvesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hvesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvesse_v-tr_rel" ].

hvile_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "hvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvile_v-intrPrtcl_rel" ].

hvile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvile_v-intr_rel" ].

hvile_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "hvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvile_v-tr_rel" ].

hvine_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hvine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvine_v-intr_rel" ].

hvirvle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "hvirvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvirvle_v-intr_rel" ].

hvirvle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hvirvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvirvle_v-intr_rel" ].

hvirvle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "hvirvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvirvle_v-trScpr_rel" ].

hviske_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "hviske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hviske_v-ditr_rel" ].

hviske_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hviske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hviske_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

hviske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hviske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hviske_v-intr_rel" ].

hviske_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hviske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hviske_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

hviske_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "hviske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hviske_v-tr_rel" ].

hvitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hvitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvitne_v-intr_rel" ].

hvitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hvitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvitte_v-tr_rel" ].

hvitvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hvitvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hvitvaske_v-tr_rel" ].

hygge_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "hygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hygge_v-trObl_rel" ].

hygge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hygge_v-tr_rel" ].

hygge_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hygge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hykle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hykle_v-intr_rel" ].

hykle_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "hykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hykle_v-trObl_rel" ].

hykle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hykle_v-tr_rel" ].

hyle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hyle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hyle_v-intr_rel" ].

;hylle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "hylle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hylle_v-trScpr_rel" ].

hylle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "hylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hylle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

hylle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hylle_v-tr_rel" ].

hypnotisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hypnotisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hypnotisere_v-tr_rel" ].

hyppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hyppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hyppe_v-tr_rel" ].

hyre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "hyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hyre_v-trPrtcl_rel" ].

hyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "hyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hyre_v-tr_rel" ].

hysje_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "hysje" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hysje_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

hysje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hysje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hysje_v-intr_rel" ].

;hysse_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr-et,
;   STEM < "hysse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hysse_v-intrObl_rel" ].

;hysse_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "hysse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hysse_v-intr_rel" ].

;hytte_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr-et,
;   STEM < "hytte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hytte_v-intrObl_rel" ].

;hytte_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "hytte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_hytte_v-tr_rel" ].

håndgi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "håndgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håndgi_v-ditr_rel" ].

håndheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "håndheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håndheve_v-tr_rel" ].

håndhilse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "håndhilse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_håndhilse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

håndhilse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "håndhilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håndhilse_v-intr_rel" ].

håndplukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "håndplukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håndplukke_v-tr_rel" ].

håndtere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "håndtere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håndtere_v-tr_rel" ].

håne_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "håne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_håne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

håne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "håne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håne_v-tr_rel" ].

hånflire_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "hånflire" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hånflire_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

hånflire_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "hånflire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hånflire_v-intr_rel" ].

hånle_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "hånle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_hånle_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

hånle_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "hånle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hånle_v-intr_rel" ].

håpe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "håpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_håpe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

håpe_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "håpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håpe_v-tr_rel" ].

håve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "håve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_håve_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

hæle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hæle_v-tr_rel" ].

hælsparke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "hælsparke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hælsparke_v-tr_rel" ].

hærta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "hærta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hærta_v-tr_rel" ].

høkre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "høkre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høkre_v-intrObl_rel" ].

høkre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "høkre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høkre_v-intr_rel" ].

hølje_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "hølje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hølje_v-intrPrtcl_rel" ].

hølje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "hølje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_hølje_v-intr_rel" ].

høljeregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "høljeregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høljeregne_v-intrImpers_rel" ].

høljregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "høljregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høljregne_v-intrImpers_rel" ].

høre_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_høre_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

høre_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_høre_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

høre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_høre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

høre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_høre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

høre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høre_v-intrPrtcl_rel" ].

høre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høre_v-tr_rel" ].

høre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "høre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høre_v-tr_rel" ].

høres_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "høres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høres_v-intr_rel" ].

høste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "høste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

høste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "høste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høste_v-tr_rel" ].

høve_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "høve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høve_v-intrObl_rel" ].

høve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "høve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høve_v-intr_rel" ].

høve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "høve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høve_v-tr_rel" ].

høvle_tr-arg12-secpred-av := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "høvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høvle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

høvle_tr-arg12-secpred-bort := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "høvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høvle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

høvle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "høvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høvle_v-tr_rel" ].

høyne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "høyne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_høyne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

høyne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "høyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_høyne_v-tr_rel" ].

iaktta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "iaktta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iaktta_v-tr_rel" ].

iberegne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "iberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iberegne_v-ditr_rel" ].

iberegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "iberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iberegne_v-tr_rel" ].

iberekne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "iberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iberekne_v-ditr_rel" ].

iberekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "iberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iberekne_v-tr_rel" ].

iblande_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "iblande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_iblande_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

iblande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "iblande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iblande_v-tr_rel" ].

idealisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "idealisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_idealisere_v-tr_rel" ].

identifisere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "identifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_identifisere_v-intrComp_rel" ].

identifisere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "identifisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_identifisere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

identifisere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "identifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_identifisere_v-trScpr_rel" ].

identifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "identifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_identifisere_v-tr_rel" ].

ideologisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ideologisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ideologisere_v-tr_rel" ].

idest_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "idest" >,
   SYNSEM.LKEYS.KEYREL.PRED "_idest_v-intr_rel" ].

idke_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "idke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_idke_v-intr_rel" ].

idyllisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "idyllisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_idyllisere_v-tr_rel" ].

idømme_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "idømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_idømme_v-ditr_rel" ].

iføre_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "iføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iføre_v-ditr_rel" ].

igangsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "igangsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_igangsette_v-tr_rel" ].

ignorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ignorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ignorere_v-tr_rel" ].

ihukomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ihukomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ihukomme_v-tr_rel" ].

ikle_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-dd,
   STEM < "ikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ikle_v-ditr_rel" ].

ilandføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ilandføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilandføre_v-tr_rel" ].

ilde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ilde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilde_v-intrObl_rel" ].

ildne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "ildne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ildne_v-trObl_rel" ].

ildne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ildne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ildne_v-tr_rel" ].

ile_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "ile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ile_v-intr_rel" ].

ile_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "ile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ile_v-intrPrtcl_rel" ].

ilegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "ilegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilegge_v-ditr_rel" ].

iligne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "iligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iligne_v-ditr_rel" ].

ilikne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "ilikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilikne_v-ditr_rel" ].

illgjø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "illgjø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illgjø_v-intr_rel" ].

illhuie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "illhuie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illhuie_v-intr_rel" ].

illskrike_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "illskrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illskrike_v-intr_rel" ].

illudere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "illudere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illudere_v-tr_rel" ].

illuminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "illuminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illuminere_v-tr_rel" ].

illustrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "illustrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_illustrere_v-tr_rel" ].

ilske_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ilske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilske_v-trPrtcl_rel" ].

ilskne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ilskne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ilskne_v-intrPrtcl_rel" ].

imaginere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "imaginere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imaginere_v-tr_rel" ].

imitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "imitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imitere_v-tr_rel" ].

immatrikulere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "immatrikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immatrikulere_v-tr_rel" ].

immatrikulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "immatrikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immatrikulere_v-tr_rel" ].

immigrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "immigrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immigrere_v-intr_rel" ].

immortalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "immortalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immortalisere_v-tr_rel" ].

immunisere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "immunisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immunisere_v-trObl_rel" ].

immunisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "immunisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_immunisere_v-tr_rel" ].

implantere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "implantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implantere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

implantere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "implantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implantere_v-tr_rel" ].

implementere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "implementere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implementere_v-tr_rel" ].

implisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "implisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implisere_v-tr_rel" ].

implisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "implisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implisere_v-tr_rel" ].

implodere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "implodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_implodere_v-intr_rel" ].

imponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "imponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imponere_v-tr_rel" ].

importere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "importere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_importere_v-tr_rel" ].

impregnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "impregnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_impregnere_v-tr_rel" ].

improvisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "improvisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_improvisere_v-intr_rel" ].

improvisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "improvisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_improvisere_v-tr_rel" ].

imøtegå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "imøtegå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imøtegå_v-tr_rel" ].

imøtekomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "imøtekomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imøtekomme_v-tr_rel" ].

imøtese_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "imøtese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_imøtese_v-tr_rel" ].

inaktivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inaktivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inaktivere_v-tr_rel" ].

inaugurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inaugurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inaugurere_v-tr_rel" ].

incitere_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "incitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_incitere_v-trObl_rel" ].

incitere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "incitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_incitere_v-trObl_rel" ].

incitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "incitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_incitere_v-tr_rel" ].

indikere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "indikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_indikere_v-tr_rel" ].

indikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "indikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_indikere_v-tr_rel" ].

individualisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "individualisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_individualisere_v-tr_rel" ].

indoktrinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "indoktrinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_indoktrinere_v-tr_rel" ].

indusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "indusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_indusere_v-tr_rel" ].

industrialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "industrialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_industrialisere_v-tr_rel" ].

infamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "infamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_infamere_v-tr_rel" ].

infantilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "infantilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_infantilisere_v-tr_rel" ].

infiltrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "infiltrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_infiltrere_v-tr_rel" ].

infisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "infisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_infisere_v-tr_rel" ].

inflammere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inflammere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inflammere_v-tr_rel" ].

inflatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inflatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inflatere_v-tr_rel" ].

influere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "influere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_influere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

influere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "influere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_influere_v-tr_rel" ].

informere_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "informere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_informere_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

informere_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "informere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_informere_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

informere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "informere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_informere_v-tr_rel" ].

inhalere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "inhalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inhalere_v-intr_rel" ].

inhalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inhalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inhalere_v-tr_rel" ].

inherere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inherere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inherere_v-tr_rel" ].

inhibere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inhibere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inhibere_v-tr_rel" ].

initiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "initiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_initiere_v-tr_rel" ].

injisere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "injisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_injisere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

injisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "injisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_injisere_v-tr_rel" ].

injuriere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "injuriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_injuriere_v-tr_rel" ].

inkarnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inkarnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inkarnere_v-tr_rel" ].

inklinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "inklinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inklinere_v-intr_rel" ].

inklinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inklinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inklinere_v-tr_rel" ].

inkludere_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "inkludere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_inkludere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

inkludere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inkludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inkludere_v-tr_rel" ].

inkorporere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "inkorporere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inkorporere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

inkorporere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inkorporere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inkorporere_v-tr_rel" ].

innanke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innanke_v-trObl_rel" ].

innanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innanke_v-tr_rel" ].

innarbeide_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innarbeide_v-trObl_rel" ].

innarbeide_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innarbeide_v-trObl_rel" ].

innarbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innarbeide_v-tr_rel" ].

innbefatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innbefatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbefatte_v-tr_rel" ].

innberette_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "innberette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innberette_v-ditr_rel" ].

innberette_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innberette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innberette_v-trObl_rel" ].

innberette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innberette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innberette_v-tr_rel" ].

innbetale_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "innbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbetale_v-ditr_rel" ].

innbetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbetale_v-tr_rel" ].

innbille_ditr := v-ditr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "innbille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbille_v-ditr_rel" ].

innbille_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "innbille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbille_v-ditr_rel" ].

innbille_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "innbille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbille_v-ditr_rel" ].

innbille_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "innbille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbille_v-ditr_rel" ].

innbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbinde_v-tr_rel" ].

innblande_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innblande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innblande_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

innblande_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innblande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innblande_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

innblande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innblande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innblande_v-tr_rel" ].

innbringe_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "innbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbringe_v-ditr_rel" ].

;innbringe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "innbringe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innbringe_v-trScpr_rel" ].

innbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innbringe_v-tr_rel" ].

innby_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "innby" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innby_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innby_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "innby" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innby_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

inndampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "inndampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inndampe_v-tr_rel" ].

inndele_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "inndele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_inndele_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

inndele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inndele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inndele_v-tr_rel" ].

inndra_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "inndra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inndra_v-trObl_rel" ].

inndra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "inndra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inndra_v-tr_rel" ].

inndrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "inndrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inndrive_v-tr_rel" ].

innebære_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "innebære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innebære_v-tr_rel" ].

innebære_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "innebære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innebære_v-tr_rel" ].

innebære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innebære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innebære_v-tr_rel" ].

inneha_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "inneha" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inneha_v-tr_rel" ].

inneholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "inneholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inneholde_v-tr_rel" ].

inneksersere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inneksersere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inneksersere_v-tr_rel" ].

innestå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "innestå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innestå_v-intrObl_rel" ].

innfatte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfatte_v-trObl_rel" ].

innfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfatte_v-tr_rel" ].

innfelle_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "innfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfelle_v-trObl_rel" ].

innfelle_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfelle_v-tr_rel" ].

innfiltre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innfiltre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innfiltre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

innfiltre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innfiltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfiltre_v-tr_rel" ].

innfinne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "innfinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfinne_v-tr_rel" ].

innforlive_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innforlive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innforlive_v-trObl_rel" ].

innforlive_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innforlive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innforlive_v-trObl_rel" ].

innfri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "innfri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innfri_v-tr_rel" ].

;innføre_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "innføre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innføre_v-trScpr_rel" ].

innføre_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "innføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innføre_v-tr_rel" ].

innføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innføre_v-tr_rel" ].

innføye_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "innføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innføye_v-trObl_rel" ].

inngi_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "inngi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngi_v-trObl_rel" ].

inngi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "inngi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngi_v-tr_rel" ].

inngjerde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "inngjerde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngjerde_v-tr_rel" ].

inngravere_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "inngravere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_inngravere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

inngravere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inngravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngravere_v-tr_rel" ].

inngyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "inngyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngyte_v-tr_rel" ].

inngå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "inngå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngå_v-intrObl_rel" ].

inngå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "inngå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inngå_v-tr_rel" ].

innhegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innhegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innhegne_v-tr_rel" ].

innhente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innhente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innhente_v-tr_rel" ].

innhylle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innhylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innhylle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

innhylle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innhylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innhylle_v-tr_rel" ].

innhøste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innhøste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innhøste_v-tr_rel" ].

innkalkulere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innkalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkalkulere_v-trObl_rel" ].

innkalkulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkalkulere_v-tr_rel" ].

innkalle_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "innkalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innkalle_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innkalle_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innkalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innkalle_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

;innkalle_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclTil &
; [ INFLECTION nonfstr-te,
;   STEM < "innkalle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innkalle_v_rel" ].

innkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkalle_v-tr_rel" ].

innkapsle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innkapsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkapsle_v-tr_rel" ].

innkapsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innkapsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkapsle_v-tr_rel" ].

innkassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkassere_v-tr_rel" ].

innkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkaste_v-tr_rel" ].

innkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkjøre_v-tr_rel" ].

innklage_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "innklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innklage_v-trObl_rel" ].

innklage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innklage_v-tr_rel" ].

innklarere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innklarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innklarere_v-tr_rel" ].

innkoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innkoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkoble_v-tr_rel" ].

innkommandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkommandere_v-tr_rel" ].

innkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "innkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkomme_v-intr_rel" ].

innkople_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innkople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkople_v-tr_rel" ].

innkorte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innkorte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkorte_v-tr_rel" ].

innkreve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innkreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkreve_v-tr_rel" ].

innkvartere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "innkvartere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkvartere_v-trScpr_rel" ].

innkvartere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innkvartere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innkvartere_v-tr_rel" ].

innlate_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "innlate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innlate_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innlede_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "innlede" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innlede_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlede_v-tr_rel" ].

innlegge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "innlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlegge_v-trScpr_rel" ].

innlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlegge_v-tr_rel" ].

innleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innleie_v-tr_rel" ].

innlemme_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innlemme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innlemme_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

innlemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innlemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlemme_v-tr_rel" ].

innlese_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlese_v-tr_rel" ].

innlevere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlevere_v-tr_rel" ].

innlosjere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "innlosjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlosjere_v-trScpr_rel" ].

innlosjere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "innlosjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlosjere_v-trObl_rel" ].

innlosjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innlosjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlosjere_v-tr_rel" ].

innlåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innlåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innlåne_v-tr_rel" ].

innløpe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "innløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innløpe_v-intr_rel" ].

innløse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innløse_v-tr_rel" ].

innløyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innløyse_v-tr_rel" ].

innmure_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innmure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innmure_v-tr_rel" ].

innordne_tr-obl-etter := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innordne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innordne_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

innordne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innordne_v-tr_rel" ].

innordne_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innordne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innordne_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

innordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innordne_v-tr_rel" ].

innovere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "innovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innovere_v-intr_rel" ].

innovere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innovere_v-tr_rel" ].

innpakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innpakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpakke_v-tr_rel" ].

innpasse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpasse_v-trObl_rel" ].

innpasse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpasse_v-tr_rel" ].

innpasse_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpasse_v-trObl_rel" ].

innpasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpasse_v-tr_rel" ].

innpassere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "innpassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpassere_v-intr_rel" ].

innpiske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innpiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpiske_v-tr_rel" ].

innplante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innplante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innplante_v-tr_rel" ].

innpode_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "innpode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpode_v-ditr_rel" ].

innpode_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "innpode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpode_v-ditr_rel" ].

innpode_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "innpode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpode_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

innpode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innpode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpode_v-tr_rel" ].

innpote_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "innpote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpote_v-ditr_rel" ].

innpote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innpote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innpote_v-tr_rel" ].

innprente_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "innprente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innprente_v-ditr_rel" ].

innprente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innprente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innprente_v-tr_rel" ].

innramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innramme_v-tr_rel" ].

innrapportere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innrapportere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innrapportere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innrapportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innrapportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrapportere_v-tr_rel" ].

innrede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrede_v-tr_rel" ].

innreie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innreie_v-tr_rel" ].

innrette_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "innrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrette_v-trObl_rel" ].

innrette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrette_v-tr_rel" ].

innrette_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innrette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innrette_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

innrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrette_v-tr_rel" ].

innringe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innringe_v-tr_rel" ].

innrullere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "innrullere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrullere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

innrullere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innrullere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrullere_v-tr_rel" ].

innrykke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "innrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrykke_v-intr_rel" ].

innrykke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "innrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrykke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

innrykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrykke_v-tr_rel" ].

innrømme_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "innrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrømme_v-tr_rel" ].

innrømme_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "innrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrømme_v-tr_rel" ].

innrømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innrømme_v-tr_rel" ].

innsamle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsamle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsamle_v-tr_rel" ].

innse_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "innse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innse_v-tr_rel" ].

innse_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "innse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innse_v-tr_rel" ].

innse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "innse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innse_v-tr_rel" ].

innsegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsegle_v-tr_rel" ].

innseile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innseile_v-tr_rel" ].

innsende_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innsende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innsende_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsende_v-tr_rel" ].

innsette_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "innsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsette_v-trScpr_rel" ].

innsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsette_v-tr_rel" ].

innsikte_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innsikte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innsikte_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

innsikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsikte_v-tr_rel" ].

innsirkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsirkle_v-tr_rel" ].

innskipe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innskipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskipe_v-tr_rel" ].

innskipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innskipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskipe_v-tr_rel" ].

innskjerpe_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "innskjerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskjerpe_v-tr_rel" ].

innskjerpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innskjerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskjerpe_v-tr_rel" ].

innskjære_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskjære_v-trObl_rel" ].

innskjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskjære_v-tr_rel" ].

innskrenke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "innskrenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrenke_v-intr_rel" ].

innskrenke_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "innskrenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrenke_v-trObl_rel" ].

innskrenke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innskrenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrenke_v-tr_rel" ].

innskrenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innskrenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrenke_v-tr_rel" ].

innskrive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "innskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrive_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

innskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskrive_v-tr_rel" ].

innskyte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "innskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskyte_v-trScpr_rel" ].

innskyte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "innskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskyte_v-tr_rel" ].

innskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innskyte_v-tr_rel" ].

innsmigre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innsmigre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsmigre_v-tr_rel" ].

innsmugle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsmugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsmugle_v-tr_rel" ].

innsmøre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "innsmøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innsmøre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

innsmøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innsmøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsmøre_v-tr_rel" ].

innsnevre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innsnevre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innsnevre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

innsnevre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsnevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsnevre_v-tr_rel" ].

innsprøyte_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innsprøyte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innsprøyte_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

innsprøyte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innsprøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsprøyte_v-tr_rel" ].

innstemne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innstemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstemne_v-trObl_rel" ].

;innstemne_tr-secpr-nonv := v-trScpr-scObNrg_scAdjORPredprtcl &
; [ INFLECTION nonfstr-et,
;   STEM < "innstemne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innstemne_v_rel" ].

innstemne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innstemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstemne_v-tr_rel" ].

innstevne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "innstevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstevne_v-trObl_rel" ].

;innstevne_tr-secpr-nonv := v-trScpr-scObNrg_scAdjORPredprtcl &
; [ INFLECTION nonfstr-et,
;   STEM < "innstevne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innstevne_v_rel" ].

innstevne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innstevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstevne_v-tr_rel" ].

innstifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innstifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstifte_v-tr_rel" ].

innstille_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "innstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstille_v-intrObl_rel" ].

innstille_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innstille_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

innstille_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "innstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innstille_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

innstille_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "innstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstille_v-trScpr_rel" ].

innstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstille_v-tr_rel" ].

innstramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innstramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstramme_v-tr_rel" ].

innstudere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innstudere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstudere_v-tr_rel" ].

innstøpe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innstøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstøpe_v-trObl_rel" ].

innstøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innstøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstøpe_v-tr_rel" ].

innstøype_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innstøype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstøype_v-trObl_rel" ].

innstøype_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innstøype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innstøype_v-tr_rel" ].

innsuge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsuge_v-tr_rel" ].

innsynge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innsynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innsynge_v-tr_rel" ].

innta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "innta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innta_v-tr_rel" ].

inntaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "inntaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inntaste_v-tr_rel" ].

inntegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "inntegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inntegne_v-tr_rel" ].

inntre_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "inntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inntre_v-intr_rel" ].

inntreffe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "inntreffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inntreffe_v-intr_rel" ].

innvandre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "innvandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvandre_v-intr_rel" ].

;innvandre_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "innvandre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_innvandre_v-trScpr_rel" ].

innvarsle_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "innvarsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvarsle_v-tr_rel" ].

innvarsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innvarsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvarsle_v-tr_rel" ].

innveie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innveie_v-tr_rel" ].

innvelge_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "innvelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvelge_v-trObl_rel" ].

innvelge_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "innvelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvelge_v-trScpr_rel" ].

innvelge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innvelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvelge_v-tr_rel" ].

innvende_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "innvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvende_v-tr_rel" ].

innvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvende_v-tr_rel" ].

innvie_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "innvie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvie_v-trObl_rel" ].

innvie_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION finstr-dd,
   STEM < "innvie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvie_v-trScpr_rel" ].

innvie_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "innvie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvie_v-tr_rel" ].

innvikle_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innvikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innvikle_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

innvilge_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "innvilge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvilge_v-ditr_rel" ].

innvilge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innvilge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvilge_v-tr_rel" ].

innvinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "innvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvinne_v-tr_rel" ].

innvirke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "innvirke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_innvirke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

innvotere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "innvotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvotere_v-trObl_rel" ].

innvotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "innvotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innvotere_v-tr_rel" ].

innynde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "innynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innynde_v-tr_rel" ].

innånde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "innånde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innånde_v-intr_rel" ].

innånde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "innånde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innånde_v-tr_rel" ].

innøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "innøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_innøve_v-tr_rel" ].

inokulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inokulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inokulere_v-tr_rel" ].

inseminere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "inseminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inseminere_v-intr_rel" ].

inseminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inseminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inseminere_v-tr_rel" ].

insinuere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "insinuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_insinuere_v-tr_rel" ].

insinuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "insinuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_insinuere_v-tr_rel" ].

insistere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "insistere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_insistere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

insistere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "insistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_insistere_v-intr_rel" ].

insistere_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "insistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_insistere_v-intrObl_rel" ].

inspirere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inspirere_v-tr_rel" ].

inspisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "inspisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inspisere_v-tr_rel" ].

installere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "installere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_installere_v-trScpr_rel" ].

installere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "installere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_installere_v-tr_rel" ].

installere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "installere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_installere_v-trObl_rel" ].

installere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "installere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_installere_v-tr_rel" ].

instituere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "instituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_instituere_v-tr_rel" ].

institusjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "institusjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_institusjonalisere_v-tr_rel" ].

instruere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "instruere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_instruere_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

instruere_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "instruere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_instruere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

instruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "instruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_instruere_v-tr_rel" ].

instrumentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "instrumentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_instrumentere_v-tr_rel" ].

integrere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "integrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_integrere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

integrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "integrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_integrere_v-tr_rel" ].

intellektualisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intellektualisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intellektualisere_v-tr_rel" ].

intendere_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "intendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intendere_v-tr_rel" ].

intendere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intendere_v-tr_rel" ].

intensivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intensivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intensivere_v-tr_rel" ].

interessere_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "interessere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interessere_v-trObl_rel" ].

interessere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "interessere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interessere_v-tr_rel" ].

interessere_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "interessere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_interessere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

interessere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "interessere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interessere_v-tr_rel" ].

interferere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "interferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interferere_v-intrObl_rel" ].

interferere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "interferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interferere_v-intr_rel" ].

interfoliere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "interfoliere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interfoliere_v-tr_rel" ].

internasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "internasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_internasjonalisere_v-tr_rel" ].

internere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "internere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_internere_v-trScpr_rel" ].

internere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "internere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_internere_v-tr_rel" ].

interpellere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "interpellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interpellere_v-intr_rel" ].

interpolere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "interpolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interpolere_v-intr_rel" ].

interpolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "interpolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interpolere_v-tr_rel" ].

interpretere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "interpretere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_interpretere_v-tr_rel" ].

intervenere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "intervenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intervenere_v-intrObl_rel" ].

intervenere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "intervenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intervenere_v-intr_rel" ].

intervenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intervenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intervenere_v-tr_rel" ].

intervjue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "intervjue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intervjue_v-tr_rel" ].

intimidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intimidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intimidere_v-tr_rel" ].

intonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "intonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intonere_v-intr_rel" ].

intonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "intonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intonere_v-tr_rel" ].

intrigere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "intrigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_intrigere_v-intr_rel" ].

introdusere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "introdusere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_introdusere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

introdusere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "introdusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_introdusere_v-trScpr_rel" ].

introdusere_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "introdusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_introdusere_v-trScpr_rel" ].

introdusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "introdusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_introdusere_v-tr_rel" ].

invadere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "invadere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_invadere_v-tr_rel" ].

invalidisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "invalidisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_invalidisere_v-tr_rel" ].

inventere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "inventere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_inventere_v-intr_rel" ].

invertere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "invertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_invertere_v-tr_rel" ].

investere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "investere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_investere_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

investere_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "investere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_investere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

investere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "investere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_investere_v-tr_rel" ].

invitere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "invitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_invitere_v-intr_rel" ].

invitere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "invitere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_invitere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

invitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "invitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_invitere_v-tr_rel" ].

involvere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "involvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_involvere_v-tr_rel" ].

involvere_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "involvere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_involvere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

involvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "involvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_involvere_v-tr_rel" ].

ionisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ionisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ionisere_v-tr_rel" ].

irettesette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "irettesette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irettesette_v-tr_rel" ].

irisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "irisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irisere_v-intr_rel" ].

ironisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "ironisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ironisere_v-intrObl_rel" ].

ironisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ironisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ironisere_v-intr_rel" ].

irre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "irre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irre_v-intr_rel" ].

irre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "irre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irre_v-intr_rel" ].

irrigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "irrigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irrigere_v-tr_rel" ].

irritere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "irritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irritere_v-tr_rel" ].

irritere_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "irritere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_irritere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

irritere_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "irritere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_irritere_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

irritere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "irritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_irritere_v-tr_rel" ].

iscenesette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "iscenesette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iscenesette_v-tr_rel" ].

ise_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "ise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ise_v-intrImpers_rel" ].

ise_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "ise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ise_v-intrImpersObl_rel" ].

ise_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ise_v-intrObl_rel" ].

ise_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ise_v-intr_rel" ].

islamisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "islamisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_islamisere_v-tr_rel" ].

isne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "isne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_isne_v-intr_rel" ].

isolere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "isolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_isolere_v-tr_rel" ].

isolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "isolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_isolere_v-tr_rel" ].

;ispe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION finstr-dd,
;   STEM < "ispe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ispe_v-trScpr_rel" ].

;ispe_tv := v-tr &
; [ INFLECTION finstr-dd,
;   STEM < "ispe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ispe_v-tr_rel" ].

istemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "istemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_istemme_v-intr_rel" ].

istemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "istemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_istemme_v-tr_rel" ].

iterere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "iterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iterere_v-tr_rel" ].

ivareta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "ivareta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ivareta_v-tr_rel" ].

iverksette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "iverksette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_iverksette_v-tr_rel" ].

ivre_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ivre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ivre_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

ivre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ivre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ivre_v-intr_rel" ].

ivre_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "ivre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ivre_v-intrObl_rel" ].

jabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "jabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jabbe_v-intr_rel" ].

jabbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jabbe_v-intrObl_rel" ].

jabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jabbe_v-intr_rel" ].

jage_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "jage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jage_v-intr_rel" ].

jage_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "jage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jage_v-intrObl_rel" ].

jakte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jakte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jakte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

jalme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jalme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jalme_v-intr_rel" ].

jamføre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "jamføre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jamføre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

jamføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jamføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamføre_v-tr_rel" ].

jamme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamme_v-intr_rel" ].

jamme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamme_v-tr_rel" ].

jamne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamne_v-trPrtcl_rel" ].

jamre_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jamre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jamre_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

jamre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamre_v-intr_rel" ].

jamre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamre_v-tr_rel" ].

jamre_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jamre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jamre_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

jamstille_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "jamstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jamstille_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

jamstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jamstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jamstille_v-tr_rel" ].

jare_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "jare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jare_v-tr_rel" ].

jaske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "jaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jaske_v-trScprShft_rel" ].

jasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jasse_v-intr_rel" ].

jasse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jasse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

jassifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jassifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jassifisere_v-tr_rel" ].

jatte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jatte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

jatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jatte_v-intr_rel" ].

jazze_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jazze" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jazze_v-intr_rel" ].

jazze_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jazze" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jazze_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

jazzifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jazzifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jazzifisere_v-tr_rel" ].

jekke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jekke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

jekke_tr-arg12-secpred-ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

jekke_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

jelke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jelke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jelke_v-tr_rel" ].

jenke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jenke_v-tr_rel" ].

jenke_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jenke_v-trObl_rel" ].

jenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jenke_v-tr_rel" ].

jevne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jevne_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

jevne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jevne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

jevnføre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "jevnføre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jevnføre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

jevnføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jevnføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jevnføre_v-tr_rel" ].

jibbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jibbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jibbe_v-intr_rel" ].

jibbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jibbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jibbe_v-tr_rel" ].

jobbe_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "jobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jobbe_v-intrLghtScpr_rel" ].

jobbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jobbe_v-intr_rel" ].

jobbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jobbe_v-tr_rel" ].

jodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jodere_v-tr_rel" ].

jodisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "jodisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jodisere_v-tr_rel" ].

jodle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jodle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jodle_v-intr_rel" ].

jogge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jogge_v-intr_rel" ].

joike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "joike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_joike_v-intr_rel" ].

joike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "joike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_joike_v-tr_rel" ].

jorde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jorde_v-tr_rel" ].

jordfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jordfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jordfeste_v-tr_rel" ].

jordslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "jordslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jordslå_v-tr_rel" ].

jorte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "jorte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jorte_v-intr_rel" ].

journalføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "journalføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_journalføre_v-tr_rel" ].

journalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "journalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_journalisere_v-tr_rel" ].

jubilere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "jubilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jubilere_v-intr_rel" ].

juble_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "juble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_juble_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

juble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "juble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_juble_v-intr_rel" ].

jugle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jugle_v-intrObl_rel" ].

jugle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jugle_v-trPrtcl_rel" ].

jukse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jukse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jukse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

jukse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jukse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jukse_v-intr_rel" ].

jukse_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jukse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jukse_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

jule_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "jule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jule_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

jule_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "jule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jule_v-tr_rel" ].

jumpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "jumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jumpe_v-intr_rel" ].

jumpe_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "jumpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_jumpe_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

jumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "jumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jumpe_v-intr_rel" ].

junke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "junke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_junke_v-intr_rel" ].

juryere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "juryere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_juryere_v-tr_rel" ].

justere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "justere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_justere_v-tr_rel" ].

jåle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jåle_v-trPrtcl_rel" ].

jåle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jåle_v-tr_rel" ].

jøye_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "jøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_jøye_v-tr_rel" ].

kabbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kabbe_v-tr_rel" ].

kadmiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kadmiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kadmiere_v-tr_rel" ].

kadreie_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "kadreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kadreie_v-intr_rel" ].

kadreie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kadreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kadreie_v-tr_rel" ].

kake_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kake_v-trPrtcl_rel" ].

kake_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kake_v-tr_rel" ].

kakke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kakke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakke_v-trScpr_rel" ].

kakke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "kakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakke_v-trObl_rel" ].

kakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakke_v-tr_rel" ].

kakle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakle_v-intr_rel" ].

kakstryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kakstryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakstryke_v-tr_rel" ].

kakuminalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kakuminalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kakuminalisere_v-tr_rel" ].

kalandrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kalandrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalandrere_v-tr_rel" ].

kaldflire_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kaldflire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldflire_v-intr_rel" ].

kaldrøyke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kaldrøyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldrøyke_v-tr_rel" ].

kaldskratte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kaldskratte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldskratte_v-intr_rel" ].

kaldsmi_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "kaldsmi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldsmi_v-intr_rel" ].

kaldsmi_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "kaldsmi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldsmi_v-tr_rel" ].

kaldsvette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kaldsvette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaldsvette_v-intr_rel" ].

kalfatre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kalfatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalfatre_v-tr_rel" ].

kalibrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kalibrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalibrere_v-tr_rel" ].

kalke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kalke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalke_v-tr_rel" ].

kalkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kalkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalkere_v-tr_rel" ].

kalkulere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalkulere_v-intrObl_rel" ].

kalkulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalkulere_v-intr_rel" ].

kalkulere_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "kalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalkulere_v-intrObl_rel" ].

kalkulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kalkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalkulere_v-tr_rel" ].

kalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalle_v-intrObl_rel" ].

kalle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalle_v-intr_rel" ].

kalle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalle_v-trScpr_rel" ].

kalle_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kalle_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kalle_tr-refl-rais := v-trScpr-scObNrg_obRefl_scAdj &
 [ INFLECTION nonfstr-te,
   STEM < "kalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalle_v-trScpr_rel" ].

kalligrafere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kalligrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalligrafere_v-intr_rel" ].

kalsinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kalsinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalsinere_v-tr_rel" ].

kalve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kalve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kalve_v-intr_rel" ].

kamme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kamme_v-tr_rel" ].

kamme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kamme_v-tr_rel" ].

kampere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kampere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kampere_v-intrObl_rel" ].

kampere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kampere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kampere_v-intr_rel" ].

kamse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kamse_v-tr_rel" ].

kamuflere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kamuflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kamuflere_v-tr_rel" ].

kamuflere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kamuflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kamuflere_v-tr_rel" ].

kanalisere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "kanalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kanalisere_v-tr_rel" ].

kanalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kanalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kanalisere_v-tr_rel" ].

kandidere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kandidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kandidere_v-intr_rel" ].

kandidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kandidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kandidere_v-tr_rel" ].

kandisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kandisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kandisere_v-tr_rel" ].

kannelere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kannelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kannelere_v-intr_rel" ].

kannelere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kannelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kannelere_v-tr_rel" ].

kanonisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kanonisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kanonisere_v-tr_rel" ].

kansellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kansellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kansellere_v-tr_rel" ].

kante_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kante_v-intr_rel" ].

kante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kante_v-tr_rel" ].

kantre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kantre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kantre_v-intr_rel" ].

kantre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kantre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kantre_v-tr_rel" ].

kapitalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kapitalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapitalisere_v-tr_rel" ].

kapitulere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kapitulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapitulere_v-intrObl_rel" ].

kapitulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kapitulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapitulere_v-intr_rel" ].

kappdrikke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "kappdrikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kappdrikke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kappdrikke_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "kappdrikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kappdrikke_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

kappdrikke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "kappdrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappdrikke_v-intr_rel" ].

kappe_tr-arg12-secpred-av := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

kappe_tr-arg12-secpred-istykker := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC istykker-k ].

kappe_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kappe_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappe_v-tr_rel" ].

kappes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "kappes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappes_v-intr_rel" ].

kappkjøre_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kappkjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kappkjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

kappkjøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kappkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kappkjøre_v-intr_rel" ].

kapre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kapre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapre_v-tr_rel" ].

kapseise_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kapseise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapseise_v-intr_rel" ].

kapseise_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kapseise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapseise_v-tr_rel" ].

kapsle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kapsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapsle_v-trPrtcl_rel" ].

kapsle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kapsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapsle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

kapsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kapsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapsle_v-tr_rel" ].

kapunere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kapunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kapunere_v-tr_rel" ].

karakterisere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "karakterisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karakterisere_v-trScpr_rel" ].

karakterisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "karakterisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karakterisere_v-tr_rel" ].

karde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "karde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karde_v-intr_rel" ].

karde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "karde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karde_v-tr_rel" ].

kare_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kare_v-trScpr_rel" ].

kare_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "kare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kare_v-trScprShft_rel" ].

karikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "karikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karikere_v-tr_rel" ].

karnøfle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "karnøfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karnøfle_v-tr_rel" ].

karte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "karte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karte_v-tr_rel" ].

kartere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kartere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kartere_v-tr_rel" ].

kartlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kartlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kartlegge_v-tr_rel" ].

kartonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kartonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kartonere_v-tr_rel" ].

karve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "karve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_karve_v-tr_rel" ].

kase_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kase_v-tr_rel" ].

kassere__particleshift := v-trScprShft-obDir_scObNrgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kassere_v-trScprShft_rel" ].

kassere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kassere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

kassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kassere_v-tr_rel" ].

kaste_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaste_v-intrObl_rel" ].

kaste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "kaste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kaste_v-intrPrtcl_rel",
            LOCAL.KEY-SPEC opp-k ] ].

kaste_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "kaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaste_v-trObl_rel" ].

kaste_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "kaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaste_v-trScprShft_rel" ].

kastebytte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kastebytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kastebytte_v-intrObl_rel" ].

kastebytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kastebytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kastebytte_v-intr_rel" ].

kastebytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kastebytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kastebytte_v-tr_rel" ].

kastrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kastrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kastrere_v-tr_rel" ].

katalogisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "katalogisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katalogisere_v-tr_rel" ].

katalysere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "katalysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katalysere_v-tr_rel" ].

kategorisere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "kategorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kategorisere_v-trScpr_rel" ].

kategorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kategorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kategorisere_v-tr_rel" ].

katekisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "katekisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katekisere_v-intr_rel" ].

katekisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "katekisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katekisere_v-tr_rel" ].

katolisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "katolisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katolisere_v-tr_rel" ].

katte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "katte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_katte_v-tr_rel" ].

kaue_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kaue_v-intr_rel" ].

kauke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kauke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kauke_v-intr_rel" ].

kausjonere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kausjonere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kausjonere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kausjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kausjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kausjonere_v-intr_rel" ].

kave_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kave" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kave_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

kave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kave_v-intr_rel" ].

kave_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "kave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kave_v-trPath_rel" ].

kavere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kavere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kavere_v-intrObl_rel" ].

kavle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kavle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kavle_v-intr_rel" ].

kavle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kavle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kavle_v-tr_rel" ].

keie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "keie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_keie_v-tr_rel" ].

keie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "keie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_keie_v-tr_rel" ].

keike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "keike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_keike_v-intr_rel" ].

keike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "keike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_keike_v-tr_rel" ].

keivle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "keivle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_keivle_v-intr_rel" ].

kibbe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "kibbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kibbe_v-tr_rel" ].

kidnappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kidnappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kidnappe_v-tr_rel" ].

kike_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kike_v-intrObl_rel" ].

kike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kike_v-intr_rel" ].

kikke_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kikke_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

kikke_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kikke_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

kikke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kikke_v-intr_rel" ].

kikne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kikne_v-intr_rel" ].

kikre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kikre_v-intr_rel" ].

kikse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kikse_v-intr_rel" ].

kildre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kildre_v-tr_rel" ].

kile_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kile_v-intrImpersObl_rel" ].

kile_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kile_v-intrPrtcl_rel" ].

kile_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kile_v-trPrtcl_rel" ].

kile_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kile_v-trObl_rel" ].

kile_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kile_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kile_v-tr_rel" ].

kime_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "kime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kime_v-intrImpersObl_rel" ].

kime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kime_v-intr_rel" ].

kimse_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kimse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kimse_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kingse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kingse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kingse_v-tr_rel" ].

kinke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kinke_v-tr_rel" ].

kinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kinke_v-tr_rel" ].

kinkse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kinkse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kinkse_v-tr_rel" ].

kinkse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kinkse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kinkse_v-tr_rel" ].

kinne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kinne_v-tr_rel" ].

kippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kippe_v-intr_rel" ].

kippe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "kippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kippe_v-tr_rel" ].

kippe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "kippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kippe_v-trScprShft_rel" ].

kippe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kippe_v-tr_rel" ].

kisle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "kisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kisle_v-intrImpersObl_rel" ].

kisle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kisle_v-intr_rel" ].

kisle_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "kisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kisle_v-trObl_rel" ].

kisle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kisle_v-tr_rel" ].

kitle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "kitle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kitle_v-intrImpersObl_rel" ].

kitle_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "kitle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kitle_v-trObl_rel" ].

kitle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kitle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kitle_v-tr_rel" ].

kitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kitte_v-tr_rel" ].

kive_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "kive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kive_v-intrObl_rel" ].

kive_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kive_v-intr_rel" ].

kives_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "kives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kives_v-intrObl_rel" ].

kives_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kives_v-intr_rel" ].

kjakse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjakse_v-tr_rel" ].

kjangse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjangse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjangse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kjangse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjangse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjangse_v-intr_rel" ].

kjappe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjappe_v-tr_rel" ].

kjase_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjase_v-intr_rel" ].

kjase_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjase_v-trPrtcl_rel" ].

kjave_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjave_v-intrObl_rel" ].

kjave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjave_v-intr_rel" ].

kjede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kjede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjede_v-trScpr_rel" ].

kjede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjede_v-tr_rel" ].

kjede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjede_v-tr_rel" ].

kjederøyke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kjederøyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjederøyke_v-intr_rel" ].

kjee_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjee" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjee_v-intr_rel" ].

kjefte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjefte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjefte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kjefte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjefte_v-intr_rel" ].

kjekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjekke_v-tr_rel" ].

kjekle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjekle_v-intrObl_rel" ].

kjekle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kjekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjekle_v-intr_rel" ].

kjekse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "kjekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjekse_v-intrPrtcl_rel" ].

kjekse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjekse_v-tr_rel" ].

kjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjemme_v-tr_rel" ].

kjemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjemme_v-tr_rel" ].

kjempe_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjempe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjempe_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kjempe_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjempe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjempe_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

kjempe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjempe_v-intr_rel" ].

kjempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjempe_v-tr_rel" ].

kjenne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjenne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kjenne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-intrPrtcl_rel" ].

kjenne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-trPrtcl_rel" ].

;kjenne_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "kjenne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-trScpr_rel" ].

kjenne_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-trScpr_rel" ].

kjenne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-trScpr_rel" ].

kjenne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-tr_rel" ].

kjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjenne_v-tr_rel" ].

kjennetegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjennetegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjennetegne_v-tr_rel" ].

kjeppjage_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-de,
   STEM < "kjeppjage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjeppjage_v-tr_rel" ].

kjeppjage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kjeppjage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjeppjage_v-tr_rel" ].

kjerne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjerne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjerne_v-tr_rel" ].

kjerve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjerve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjerve_v-intr_rel" ].

kjerve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjerve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjerve_v-tr_rel" ].

kjese_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kjese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjese_v-intr_rel" ].

kjese_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kjese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjese_v-tr_rel" ].

kjeske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjeske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjeske_v-tr_rel" ].

kjevle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kjevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjevle_v-trScpr_rel" ].

kjevle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjevle_v-tr_rel" ].

kjæle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kjæle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjæle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kjæle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjæle_v-tr_rel" ].

kjære_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjære_v-trObl_rel" ].

kjærtegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjærtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjærtegne_v-tr_rel" ].

kjæte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kjæte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjæte_v-tr_rel" ].

kjøle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøle_v-trPrtcl_rel" ].

kjøle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

kjøle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøle_v-tr_rel" ].

kjøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøle_v-tr_rel" ].

kjølhale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kjølhale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjølhale_v-tr_rel" ].

kjølne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kjølne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjølne_v-intr_rel" ].

kjøpe_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøpe_v-ditr_rel" ].

kjøpe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøpe_v-ditr_rel" ].

kjøpe_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøpe_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kjøpe_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøpe_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

; "kjøpe seg blakk" - valid, but marginal with too many 'kjøpe'
;kjøpe_tr-arg1-secpred := v-trScpr-scObNrgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "kjøpe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_kjøpe_v_rel" ].

kjøpe_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøpe_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kjøpe_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøpe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kjøpe_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøpe_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

kjøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kjøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøpe_v-tr_rel" ].

kjøpslå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "kjøpslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøpslå_v-intrObl_rel" ].

kjøpslå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "kjøpslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøpslå_v-intr_rel" ].

kjøre_intr-dir := v-intr-suDir-suMover &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-intr_rel" ].

kjøre_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kjøre_intr-obl-igjennom := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC igjennom-k ] ].

kjøre_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

kjøre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-act-assoc ] ].

kjøre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-intrPrtcl_rel" ].

kjøre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-trPrtcl_rel" ].

kjøre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-trScpr_rel" ].

kjøre_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-tr_rel" ].

kjøre_tr-ppshift-10 := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-trScprShft_rel" ].

kjøre_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøre_v-trScpr_rel" ].

kjørne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kjørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjørne_v-tr_rel" ].

kjøve_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "kjøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøve_v-intrPrtcl_rel" ].

kjøve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kjøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kjøve_v-tr_rel" ].

klabbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klabbe_v-intrObl_rel" ].

klabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klabbe_v-intr_rel" ].

klabbe_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "klabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klabbe_v-trObl_rel" ].

kladde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kladde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kladde_v-tr_rel" ].

klaffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klaffe_v-intr_rel" ].

klage_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "klage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klage_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

klage_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "klage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klage_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

klage_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "klage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klage_v-intr_rel" ].

klake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klake_v-intr_rel" ].

klake_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klake_v-tr_rel" ].

klakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klakke_v-intr_rel" ].

klampe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "klampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klampe_v-intr_rel" ].

klampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klampe_v-intr_rel" ].

klamre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klamre_v-trPrtcl_rel" ].

klamre_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klamre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klamre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

klandre_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "klandre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klandre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

klandre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klandre_v-tr_rel" ].

klappe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-intrObl_rel" ].

klappe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-intrPrtcl_rel" ].

klappe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-intr_rel" ].

klappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-trScpr_rel" ].

klappe_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-trObl_rel" ].

klappe_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klappe_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

klappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klappe_v-tr_rel" ].

klapre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klapre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klapre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

klapre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klapre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klapre_v-intr_rel" ].

klapse_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "klapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klapse_v-trObl_rel" ].

klapse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klapse_v-tr_rel" ].

klare_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "klare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klare_v-intrObl_rel" ].

klare_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "klare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klare_v-tr_rel" ].

klare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "klare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klare_v-tr_rel" ].

klare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klare_v-tr_rel" ].

klarere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "klarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klarere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

klarere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "klarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klarere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC for-k ].

klarere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klarere_v-tr_rel" ].

klargjøre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "klargjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klargjøre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

klargjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "klargjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klargjøre_v-tr_rel" ].

klarlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "klarlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klarlegge_v-tr_rel" ].

klarne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klarne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klarne_v-intr_rel" ].

klase_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klase_v-tr_rel" ].

klaske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klaske_v-intrObl_rel" ].

klaske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klaske_v-trScpr_rel" ].

klaske_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "klaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klaske_v-trObl_rel" ].

klasse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klasse_v-intrObl_rel" ].

klasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klasse_v-intr_rel" ].

klasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klasse_v-tr_rel" ].

klassifisere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "klassifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klassifisere_v-trScpr_rel" ].

klassifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klassifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klassifisere_v-tr_rel" ].

klatre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "klatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatre_v-intr_rel" ].

klatre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatre_v-intr_rel" ].

klatre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatre_v-tr_rel" ].

klatte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatte_v-intrObl_rel" ].

klatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatte_v-intr_rel" ].

klatte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klatte_v-trScpr_rel" ].

klattemale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "klattemale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klattemale_v-intr_rel" ].

klattemale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klattemale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klattemale_v-tr_rel" ].

klausulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klausulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klausulere_v-tr_rel" ].

klave_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "klave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klave_v-tr_rel" ].

klavebinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "klavebinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klavebinde_v-tr_rel" ].

;kle_intr-obl := v-intrObl-oblN &
; [ INFLECTION finstr-dd,
;   STEM < "kle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_kle_v_rel" ].

kle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "kle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kle_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

kle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "kle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kle_v-trScpr_rel" ].

kle_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "kle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kle_v-tr_rel" ].

kle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "kle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kle_v-tr_rel" ].

klebe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klebe_v-intrObl_rel" ].

klebe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "klebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klebe_v-intr_rel" ].

klebe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klebe_v-trScpr_rel" ].

klebe_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klebe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klebe_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

#|
klede_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].

klede_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].

klede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].

klede_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].

klede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].

klede_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "klede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klede_v_rel" ].


kleie_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "kleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleie_v-intr_rel" ].

kleie_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "kleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleie_v-trObl_rel" ].

kleie_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "kleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleie_v-trObl_rel" ].

kleime_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kleime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleime_v-intr_rel" ].

kleise_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kleise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleise_v-intr_rel" ].
|#

klekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klekke_v-intrObl_rel" ].

klekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klekke_v-tr_rel" ].

klekke_tr-telicpartcl := v-trPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "klekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klekke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

klemme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "klemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klemme_v-trScpr_rel" ].

klemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "klemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klemme_v-tr_rel" ].

klemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klemme_v-tr_rel" ].

klemte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klemte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klemte_v-intr_rel" ].

klenge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klenge_v-intr_rel" ].

klenge_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klenge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

klenge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klenge_v-tr_rel" ].

kleppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleppe_v-tr_rel" ].

kleppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kleppe_v-tr_rel" ].

klesse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klesse_v-intrObl_rel" ].

klesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klesse_v-tr_rel" ].

klikke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "klikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klikke_v-intrImpers_rel" ].

klikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klikke_v-intr_rel" ].

klimatisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "klimatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klimatisere_v-tr_rel" ].

klimatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klimatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klimatisere_v-tr_rel" ].

klimpre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klimpre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klimpre_v-intrObl_rel" ].

klimpre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klimpre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klimpre_v-intr_rel" ].

kline_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kline" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kline_v-intr_rel" ].

kline_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kline" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kline_v-trScpr_rel" ].

klinge_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "klinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinge_v-intrImpersObl_rel" ].

klinge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "klinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinge_v-intr_rel" ].

klingre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klingre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klingre_v-intr_rel" ].

klinke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinke_v-intrObl_rel" ].

klinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinke_v-intr_rel" ].

klinke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinke_v-trScpr_rel" ].

klinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klinke_v-tr_rel" ].

klipe_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-strong,
   STEM < "klipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klipe_v-trObl_rel" ].

klipe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "klipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klipe_v-tr_rel" ].

klippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "klippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klippe_v-trScpr_rel" ].

klippe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "klippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klippe_v-tr_rel" ].

klippe_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "klippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klippe_v-tr_rel" ].

klirre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "klirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klirre_v-intrImpers_rel" ].

klirre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klirre_v-intr_rel" ].

klisjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klisjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klisjere_v-tr_rel" ].

klisse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klisse_v-intrObl_rel" ].

klisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klisse_v-intr_rel" ].

klisse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klisse_v-trScpr_rel" ].

klistre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klistre_v-trScpr_rel" ].

klistre_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klistre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klistre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

klistre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klistre_v-tr_rel" ].

klive_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "klive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klive_v-intr_rel" ].

klive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "klive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klive_v-intr_rel" ].

klive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "klive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klive_v-tr_rel" ].

kloakkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kloakkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kloakkere_v-tr_rel" ].

;klokke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "klokke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_klokke_v_rel" ].

klone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klone_v-tr_rel" ].

klore_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-intr_rel" ].

klore_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-trObl_rel" ].

klore_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-trObl_rel" ].

klore_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-trScprShft_rel" ].

klore_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-tr_rel" ].

klore_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klore_v-tr_rel" ].

klorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klorere_v-tr_rel" ].

kloroformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kloroformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kloroformere_v-tr_rel" ].

klovne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klovne_v-intr_rel" ].

klubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klubbe_v-intr_rel" ].

klubbe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klubbe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

klubbe_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "klubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klubbe_v-trObl_rel" ].

klubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klubbe_v-tr_rel" ].

kludre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kludre_v-intrObl_rel" ].

kludre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kludre_v-intr_rel" ].

kludre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kludre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

klukke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "klukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klukke_v-intrImpers_rel" ].

klukke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klukke_v-intr_rel" ].

klukkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klukkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klukkle_v-intr_rel" ].

klumpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klumpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

klumpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klumpe_v-tr_rel" ].

klumse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "klumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klumse_v-tr_rel" ].

klundre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klundre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klundre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

klundre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klundre_v-intr_rel" ].

klunke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "klunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klunke_v-intrImpers_rel" ].

klunke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klunke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klunke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

klunke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klunke_v-intr_rel" ].

klusse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "klusse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klusse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

klusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klusse_v-intr_rel" ].

klynge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klynge_v-trPrtcl_rel" ].

klynge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "klynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klynge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

klynge_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "klynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klynge_v-trObl_rel" ].

klynke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "klynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klynke_v-intrImpers_rel" ].

klynke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "klynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klynke_v-intr_rel" ].

klype_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "klype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klype_v-trObl_rel" ].

klype_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "klype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klype_v-tr_rel" ].

klyve_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-de,
   STEM < "klyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klyve_v-intr_rel" ].

klyve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "klyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klyve_v-intr_rel" ].

klå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "klå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_klå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

klå_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "klå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klå_v-trObl_rel" ].

klå_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "klå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klå_v-trObl_rel" ].

klø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "klø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klø_v-intr_rel" ].

klø_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "klø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klø_v-trObl_rel" ].

;klø_intr-detachposs := v-intrObl-oblPRTOFob &
; [ INFLECTION finstr-dd,
;   STEM < "klø" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_klø_v-trObl_rel" ].

klø_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "klø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klø_v-tr_rel" ].

klø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "klø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_klø_v-tr_rel" ].

kløfte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kløfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløfte_v-tr_rel" ].

kløkke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kløkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløkke_v-tr_rel" ].

kløne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kløne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløne_v-intr_rel" ].

kløne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kløne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløne_v-tr_rel" ].

kløtsje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kløtsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløtsje_v-intr_rel" ].

kløve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "kløve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløve_v-tr_rel" ].

kløve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kløve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløve_v-tr_rel" ].

kløvje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kløvje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløvje_v-tr_rel" ].

kløvne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kløvne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløvne_v-intr_rel" ].

kløyve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "kløyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløyve_v-tr_rel" ].

kløyve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kløyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kløyve_v-tr_rel" ].

kna_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "kna" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kna_v-tr_rel" ].

knabbe_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "knabbe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_knabbe_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

knabbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knabbe_v-tr_rel" ].

knake_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "knake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knake_v-intrImpers_rel" ].

knake_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "knake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knake_v-intrImpersObl_rel" ].

knake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knake_v-intr_rel" ].

knakke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knakke_v-intrObl_rel" ].

knalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knalle_v-intr_rel" ].

knalle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "knalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knalle_v-trScpr_rel" ].

knappe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knappe_v-intr_rel" ].

knappe_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "knappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

knappe_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "knappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

knappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knappe_v-tr_rel" ].

knarke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knarke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knarke_v-intr_rel" ].

knarte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knarte_v-tr_rel" ].

knase_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-te,
   STEM < "knase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knase_v-intrImpers_rel" ].

knase_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "knase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knase_v-intrImpersObl_rel" ].

knase_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "knase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knase_v-intr_rel" ].

knase_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "knase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knase_v-tr_rel" ].

knaske_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_knaske_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

knaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knaske_v-tr_rel" ].

knatre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "knatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knatre_v-intrImpers_rel" ].

knatre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knatre_v-intr_rel" ].

knatte_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "knatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knatte_v-intrImpers_rel" ].

knatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knatte_v-intr_rel" ].

kneble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kneble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneble_v-tr_rel" ].

knege_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "knege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knege_v-intr_rel" ].

knegge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knegge_v-intr_rel" ].

knegå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "knegå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knegå_v-tr_rel" ].

kneise_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kneise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneise_v-intrObl_rel" ].

kneise_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kneise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneise_v-intr_rel" ].

knekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "knekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knekke_v-intrPrtcl_rel" ].

knekke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "knekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knekke_v-intr_rel" ].

knekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knekke_v-trScpr_rel" ].

knekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "knekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knekke_v-tr_rel" ].

knekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knekte_v-tr_rel" ].

knele_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "knele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_knele_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

knele_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "knele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knele_v-intrPrtcl_rel" ].

knele_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "knele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knele_v-intr_rel" ].

kneppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kneppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneppe_v-intrObl_rel" ].

kneppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kneppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneppe_v-intr_rel" ].

kneppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kneppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneppe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

kneppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kneppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneppe_v-tr_rel" ].

knepre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knepre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knepre_v-intr_rel" ].

knerte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knerte_v-intrObl_rel" ].

knerte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "knerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knerte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

knerte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knerte_v-tr_rel" ].

knesette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "knesette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knesette_v-tr_rel" ].

kneste_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "kneste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kneste_v-intrImpersObl_rel" ].

knette_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "knette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knette_v-intrImpersObl_rel" ].

knikse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knikse_v-intr_rel" ].

knipe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "knipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipe_v-intrObl_rel" ].

knipe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

knipe_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-strong,
   STEM < "knipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipe_v-trObl_rel" ].

knipe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "knipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipe_v-tr_rel" ].

kniple_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kniple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kniple_v-intr_rel" ].

kniple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kniple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kniple_v-tr_rel" ].

;knippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "knippe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_knippe_v-trScpr_rel" ].

knippe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knippe_v-tr_rel" ].

knipse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knipse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_knipse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

knipse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knipse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipse_v-intr_rel" ].

knipse_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "knipse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipse_v-trObl_rel" ].

knipse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knipse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knipse_v-tr_rel" ].

knirke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "knirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knirke_v-intrImpersObl_rel" ].

knirke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knirke_v-intr_rel" ].

knise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "knise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knise_v-intr_rel" ].

knisle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knisle_v-intr_rel" ].

knistre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knistre_v-intr_rel" ].

knitre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "knitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knitre_v-intrImpersObl_rel" ].

knitre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knitre_v-intr_rel" ].

knive_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knive_v-intrObl_rel" ].

;knive_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "knive" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_knive_v-trScpr_rel" ].

knocke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "knocke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knocke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

knockoute_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knockoute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knockoute_v-tr_rel" ].

knoge_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "knoge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knoge_v-intr_rel" ].

knope_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "knope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knope_v-intr_rel" ].

knoppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knoppe_v-intr_rel" ].

knoppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "knoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knoppe_v-tr_rel" ].

knote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knote_v-intr_rel" ].

knote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knote_v-tr_rel" ].

knubbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knubbe_v-intrObl_rel" ].

knubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knubbe_v-intr_rel" ].

knubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knubbe_v-tr_rel" ].

knuffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knuffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuffe_v-intr_rel" ].

knuffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knuffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuffe_v-tr_rel" ].

knuge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuge_v-tr_rel" ].

knulle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knulle_v-intrObl_rel" ].

knulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knulle_v-intr_rel" ].

knulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knulle_v-tr_rel" ].

knupse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knupse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knupse_v-tr_rel" ].

knurke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knurke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knurke_v-intr_rel" ].

knurpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knurpe_v-tr_rel" ].

knurre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knurre_v-intr_rel" ].

knurve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knurve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knurve_v-tr_rel" ].

knuse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "knuse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuse_v-tr_rel" ].

knuselske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knuselske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuselske_v-tr_rel" ].

knusle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "knusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knusle_v-intrObl_rel" ].

knuspe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knuspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuspe_v-intr_rel" ].

knuspre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knuspre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuspre_v-intr_rel" ].

knustre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knustre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knustre_v-tr_rel" ].

knuvle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "knuvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knuvle_v-tr_rel" ].

kny_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "kny" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kny_v-intr_rel" ].

knyste_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "knyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyste_v-intrImpersObl_rel" ].

knyste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "knyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyste_v-intr_rel" ].

knyte_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

knyte_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

knyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "knyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyte_v-tr_rel" ].

knyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "knyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knyte_v-tr_rel" ].

knytte_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knytte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

knytte_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "knytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knytte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

knytte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "knytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knytte_v-tr_rel" ].

knytte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "knytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_knytte_v-tr_rel" ].

koagulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "koagulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koagulere_v-intr_rel" ].

koble_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "koble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koble_v-trScpr_rel" ].

koble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "koble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koble_v-tr_rel" ].

kode_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kode_v-trScpr_rel" ].

kode_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "kode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kode_v-trScpr_rel" ].

kode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kode_v-tr_rel" ].

kodifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kodifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kodifisere_v-tr_rel" ].

kogle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kogle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kogle_v-tr_rel" ].

koke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "koke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koke_v-trScpr_rel" ].

koke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "koke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koke_v-tr_rel" ].

kokettere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kokettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kokettere_v-intrObl_rel" ].

kokettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kokettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kokettere_v-intr_rel" ].

kokkelere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kokkelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kokkelere_v-intr_rel" ].

kokkerere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kokkerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kokkerere_v-intr_rel" ].

kokre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kokre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kokre_v-intr_rel" ].

kole_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kole_v-tr_rel" ].

kollabere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kollabere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollabere_v-intr_rel" ].

kollaborere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kollaborere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollaborere_v-intrObl_rel" ].

kollaborere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kollaborere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollaborere_v-intr_rel" ].

kollapse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kollapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollapse_v-intr_rel" ].

kollasjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kollasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollasjonere_v-tr_rel" ].

kolle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kolle_v-intr_rel" ].

kolle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kolle_v-tr_rel" ].

kollektivisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kollektivisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollektivisere_v-tr_rel" ].

kollidere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kollidere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kollidere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kollidere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kollidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollidere_v-intr_rel" ].

kollokvere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kollokvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollokvere_v-intrObl_rel" ].

kollokvere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kollokvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollokvere_v-intr_rel" ].

kollsegle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kollsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollsegle_v-intr_rel" ].

kollsegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kollsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollsegle_v-tr_rel" ].

kollseile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kollseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollseile_v-intr_rel" ].

kollseile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kollseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kollseile_v-tr_rel" ].

kolonisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kolonisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kolonisere_v-tr_rel" ].

kolorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kolorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kolorere_v-tr_rel" ].

kolportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kolportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kolportere_v-tr_rel" ].

kombinere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kombinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kombinere_v-intrObl_rel" ].

kombinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kombinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kombinere_v-tr_rel" ].

komitebehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "komitebehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komitebehandle_v-tr_rel" ].

komitébehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "komitébehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komitébehandle_v-tr_rel" ].

kommandere_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "kommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommandere_v-trObl_rel" ].

kommandere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "kommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommandere_v-tr_rel" ].

kommandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommandere_v-tr_rel" ].

komme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "komme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komme_v-intrPrtcl_rel" ].

komme_tr-refl-11 := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "komme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komme_v-tr_rel" ].

komme_tr-refl-obl-12 := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "komme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komme_v-trObl_rel" ].

kommentere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "kommentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommentere_v-intrComp_rel" ].

kommentere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "kommentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommentere_v-tr_rel" ].

kommentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kommentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommentere_v-tr_rel" ].

kommersialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kommersialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommersialisere_v-tr_rel" ].

kommunalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kommunalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommunalisere_v-tr_rel" ].

kommunisere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kommunisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kommunisere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kommunisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kommunisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommunisere_v-intr_rel" ].

kommutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kommutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kommutere_v-tr_rel" ].

komparere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "komparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komparere_v-intrObl_rel" ].

komparere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komparere_v-tr_rel" ].

kompe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kompe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompe_v-intr_rel" ].

kompe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kompe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompe_v-tr_rel" ].

kompensere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kompensere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kompensere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kompensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kompensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompensere_v-tr_rel" ].

kompilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kompilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompilere_v-tr_rel" ].

komplettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komplettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komplettere_v-tr_rel" ].

komplimentere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "komplimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komplimentere_v-trObl_rel" ].

komplimentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komplimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komplimentere_v-tr_rel" ].

komplisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komplisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komplisere_v-tr_rel" ].

komponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komponere_v-tr_rel" ].

kompostere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kompostere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompostere_v-intr_rel" ].

kompostere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kompostere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompostere_v-tr_rel" ].

komprimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "komprimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_komprimere_v-tr_rel" ].

kompromisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kompromisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompromisse_v-intr_rel" ].

kompromittere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kompromittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompromittere_v-tr_rel" ].

kompromittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kompromittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kompromittere_v-tr_rel" ].

kondemnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kondemnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondemnere_v-tr_rel" ].

kondensere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kondensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondensere_v-intr_rel" ].

kondensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kondensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondensere_v-tr_rel" ].

kondisjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kondisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondisjonere_v-tr_rel" ].

kondolere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kondolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondolere_v-intr_rel" ].

kondolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kondolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kondolere_v-tr_rel" ].

konferere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "konferere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konferere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

konferere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konferere_v-intr_rel" ].

konferere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konferere_v-tr_rel" ].

konfirmere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "konfirmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konfirmere_v-tr_rel" ].

konfirmere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "konfirmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konfirmere_v-tr_rel" ].

konfirmere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konfirmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konfirmere_v-tr_rel" ].

konfiskere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konfiskere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konfiskere_v-tr_rel" ].

konfrontere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "konfrontere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konfrontere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

konfrontere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konfrontere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konfrontere_v-tr_rel" ].

kongruere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kongruere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kongruere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kongruere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kongruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kongruere_v-intr_rel" ].

konjugere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konjugere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konjugere_v-tr_rel" ].

konke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "konke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konke_v-intr_rel" ].

konke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "konke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

konke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "konke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konke_v-tr_rel" ].

konkludere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konkludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkludere_v-intr_rel" ].

konkludere_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "konkludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkludere_v-intrObl_rel" ].

konkludere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "konkludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkludere_v-tr_rel" ].

konkludere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konkludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkludere_v-tr_rel" ].

konkretisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konkretisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkretisere_v-tr_rel" ].

konkurrere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "konkurrere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konkurrere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

konkurrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konkurrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konkurrere_v-intr_rel" ].

konnotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konnotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konnotere_v-tr_rel" ].

konsentrere_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "konsentrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsentrere_v-trObl_rel" ].

konsentrere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "konsentrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsentrere_v-tr_rel" ].

konsentrere_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "konsentrere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konsentrere_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

konsentrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsentrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsentrere_v-tr_rel" ].

konsertere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konsertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsertere_v-intr_rel" ].

konservere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konservere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konservere_v-tr_rel" ].

konsignere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsignere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsignere_v-tr_rel" ].

konsipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsipere_v-tr_rel" ].

konskribere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konskribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konskribere_v-tr_rel" ].

konsolidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsolidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsolidere_v-tr_rel" ].

konspirere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "konspirere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konspirere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

konspirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konspirere_v-intr_rel" ].

konstatere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "konstatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstatere_v-tr_rel" ].

konstatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konstatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstatere_v-tr_rel" ].

konstituere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "konstituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstituere_v-trScpr_rel" ].

konstituere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "konstituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstituere_v-tr_rel" ].

konstituere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "konstituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstituere_v-trScpr_rel" ].

konstituere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konstituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstituere_v-tr_rel" ].

konstruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konstruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konstruere_v-tr_rel" ].

konsultere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsultere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsultere_v-tr_rel" ].

konsumere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konsumere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konsumere_v-tr_rel" ].

kontakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kontakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontakte_v-tr_rel" ].

kontere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontere_v-tr_rel" ].

kontingentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontingentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontingentere_v-tr_rel" ].

kontinuere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kontinuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontinuere_v-intr_rel" ].

kontinuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontinuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontinuere_v-tr_rel" ].

kontorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontorisere_v-tr_rel" ].

kontrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrahere_v-tr_rel" ].

kontrasignere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontrasignere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrasignere_v-tr_rel" ].

kontrastere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kontrastere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kontrastere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kontrastere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontrastere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrastere_v-tr_rel" ].

kontre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kontre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontre_v-intr_rel" ].

kontre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kontre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontre_v-tr_rel" ].

kontribuere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kontribuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontribuere_v-intrObl_rel" ].

kontrollere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "kontrollere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrollere_v-intrComp_rel" ].

kontrollere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kontrollere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrollere_v-tr_rel" ].

kontrollere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "kontrollere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrollere_v-tr_rel" ].

kontrollere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kontrollere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kontrollere_v-tr_rel" ].

konvergere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konvergere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvergere_v-intr_rel" ].

konvergere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konvergere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvergere_v-tr_rel" ].

konversere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "konversere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konversere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

konversere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konversere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konversere_v-intr_rel" ].

konversere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konversere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konversere_v-tr_rel" ].

konvertere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "konvertere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_konvertere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

konvertere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "konvertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvertere_v-intr_rel" ].

konvertere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konvertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvertere_v-tr_rel" ].

konvoiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konvoiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvoiere_v-tr_rel" ].

konvoluttere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "konvoluttere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_konvoluttere_v-tr_rel" ].

kooperere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kooperere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kooperere_v-intrObl_rel" ].

kooperere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kooperere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kooperere_v-intr_rel" ].

koordinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "koordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koordinere_v-tr_rel" ].

kope_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kope_v-intr_rel" ].

kopiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kopiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kopiere_v-tr_rel" ].

kople_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kople_v-trScpr_rel" ].

kople_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kople_v-tr_rel" ].

koppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "koppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koppe_v-tr_rel" ].

kopulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kopulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kopulere_v-intr_rel" ].

kopulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kopulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kopulere_v-tr_rel" ].

kore_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kore_v-intr_rel" ].

kore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kore_v-tr_rel" ].

koreografere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "koreografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koreografere_v-intr_rel" ].

koreografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "koreografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koreografere_v-tr_rel" ].

korke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "korke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korke_v-tr_rel" ].

korke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "korke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korke_v-tr_rel" ].

korne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "korne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korne_v-tr_rel" ].

korporativisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "korporativisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korporativisere_v-tr_rel" ].

korrespondere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "korrespondere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_korrespondere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

korrespondere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "korrespondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korrespondere_v-intr_rel" ].

korrigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "korrigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korrigere_v-tr_rel" ].

korrodere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "korrodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korrodere_v-intr_rel" ].

korrugere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "korrugere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korrugere_v-tr_rel" ].

korrumpere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "korrumpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korrumpere_v-tr_rel" ].

korse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "korse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korse_v-tr_rel" ].

korse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "korse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korse_v-tr_rel" ].

korsfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "korsfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korsfeste_v-tr_rel" ].

korslegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "korslegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korslegge_v-tr_rel" ].

korte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "korte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korte_v-intrObl_rel" ].

korte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "korte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

korte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "korte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_korte_v-tr_rel" ].

kortne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kortne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kortne_v-intr_rel" ].

kortslutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kortslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kortslutte_v-tr_rel" ].

kose_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kose_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kose_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kose_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

kose_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kose_v-intr_rel" ].

kose_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kose_v-tr_rel" ].

kose_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "kose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kose_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

koste_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "koste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koste_v-intrObl_rel" ].

koste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "koste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koste_v-intr_rel" ].

; not clear what this is
;koste_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION nonfstr-et,
;   STEM < "koste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_koste_v-trScprShft_rel" ].

koste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "koste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_koste_v-tr_rel" ].

kostnadsberegne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kostnadsberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kostnadsberegne_v-trObl_rel" ].

kostnadsberegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kostnadsberegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kostnadsberegne_v-tr_rel" ].

kostnadsberekne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kostnadsberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kostnadsberekne_v-trObl_rel" ].

kostnadsberekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kostnadsberekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kostnadsberekne_v-tr_rel" ].

kostymere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kostymere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kostymere_v-tr_rel" ].

kovne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kovne_v-intr_rel" ].

krabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "krabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krabbe_v-intr_rel" ].

krafse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krafse_v-intr_rel" ].

krafse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "krafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krafse_v-trScprShft_rel" ].

;krage_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "krage" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_krage_v-trScpr_rel" ].

krake_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "krake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krake_v-trPath_rel" ].

krakelere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "krakelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krakelere_v-tr_rel" ].

krakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krakke_v-tr_rel" ].

kramme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kramme_v-intrObl_rel" ].

;kramme_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "kramme" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_kramme_v-trScpr_rel" ].

kramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kramme_v-tr_rel" ].

kramse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kramse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kramse_v-intr_rel" ].

krangle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "krangle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_krangle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

krangle_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "krangle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_krangle_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

krangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krangle_v-intr_rel" ].

kranse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kranse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kranse_v-tr_rel" ].

krase_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr,
   STEM < "krase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krase_v-intrImpersObl_rel" ].

krase_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "krase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krase_v-tr_rel" ].

krasje_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "krasje" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_krasje_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

krasje_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "krasje" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_krasje_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

krasje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krasje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasje_v-intr_rel" ].

krasjlande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krasjlande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasjlande_v-intr_rel" ].

krasle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "krasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasle_v-intrImpersObl_rel" ].

krasle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasle_v-intr_rel" ].

krasse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "krasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasse_v-intrObl_rel" ].

krasse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "krasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krasse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

kraume_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kraume" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kraume_v-intr_rel" ].

kraume_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr,
   STEM < "kraume" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kraume_v-trPath_rel" ].

krave_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "krave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krave_v-tr_rel" ].

kravle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kravle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kravle_v-intr_rel" ].

kravle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "kravle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kravle_v-trPath_rel" ].

kreditere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "kreditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreditere_v-ditr_rel" ].

kreditere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kreditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreditere_v-trObl_rel" ].

kreditere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kreditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreditere_v-tr_rel" ].

kreere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kreere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreere_v-tr_rel" ].

kreiste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kreiste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreiste_v-tr_rel" ].

kreke_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr,
   STEM < "kreke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreke_v-trPath_rel" ].

kremere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kremere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kremere_v-tr_rel" ].

kremte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kremte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kremte_v-intr_rel" ].

krenelere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "krenelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krenelere_v-tr_rel" ].

krenge_intr-oblrefl := v-intrObl-oblRefl &
 [ INFLECTION nonfstr,
   STEM < "krenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krenge_v-intrObl_rel" ].

krenge_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "krenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krenge_v-intr_rel" ].

krenge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "krenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krenge_v-tr_rel" ].

krenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krenke_v-tr_rel" ].

krepere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "krepere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krepere_v-intr_rel" ].

kreppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kreppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreppe_v-tr_rel" ].

krepse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krepse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krepse_v-intr_rel" ].

kretse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "kretse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kretse_v-intr_rel" ].

kreve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "kreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreve_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

kreve_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "kreve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kreve_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

kreve_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "kreve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kreve_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

kreve_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "kreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreve_v-tr_rel" ].

kreve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kreve_v-tr_rel" ].

krible_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "krible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krible_v-intrImpersObl_rel" ].

krible_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krible_v-intr_rel" ].

krige_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krige_v-intr_rel" ].

krikle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krikle_v-intr_rel" ].

krikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krikle_v-tr_rel" ].

krille_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "krille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krille_v-intr_rel" ].

krille_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr,
   STEM < "krille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krille_v-trObl_rel" ].

krille_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "krille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krille_v-tr_rel" ].

kriminalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kriminalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kriminalisere_v-tr_rel" ].

kringgå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "kringgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kringgå_v-tr_rel" ].

kringkaste_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "kringkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kringkaste_v-tr_rel" ].

kringkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kringkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kringkaste_v-tr_rel" ].

kringsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kringsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kringsette_v-tr_rel" ].

krinse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "krinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krinse_v-intr_rel" ].

krisle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "krisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krisle_v-intrImpers_rel" ].

krisle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "krisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krisle_v-intrImpersObl_rel" ].

krisle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krisle_v-intr_rel" ].

kristne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kristne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kristne_v-tr_rel" ].

krite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krite_v-tr_rel" ].

kritisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kritisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritisere_v-intrObl_rel" ].

kritisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kritisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritisere_v-tr_rel" ].

kritle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "kritle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritle_v-intrImpers_rel" ].

kritle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "kritle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritle_v-intrImpersObl_rel" ].

kritle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kritle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritle_v-intr_rel" ].

kritte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritte_v-intrObl_rel" ].

kritte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kritte_v-tr_rel" ].

kro_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "kro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kro_v-tr_rel" ].

kroke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "kroke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kroke_v-intr_rel" ].

kroke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kroke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kroke_v-trPrtcl_rel" ].

kroke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kroke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kroke_v-tr_rel" ].

krokere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "krokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krokere_v-intr_rel" ].

krokere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "krokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krokere_v-tr_rel" ].

krokkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "krokkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krokkere_v-tr_rel" ].

krokne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krokne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krokne_v-intr_rel" ].

kromgarve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kromgarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kromgarve_v-tr_rel" ].

; these are good verbs, but in NoW context, too much overlap with the money
;krone_tr-obl-til := v-trObl &
; [ INFLECTION nonfstr-et,
;   STEM < "krone" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_krone_v_rel",
;            LOCAL.KEY-SPEC til-k ] ].

;krone_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "krone" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_krone_v_rel" ].;

krongle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krongle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krongle_v-intr_rel" ].

krongle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "krongle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krongle_v-trPath_rel" ].

kronikkere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kronikkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kronikkere_v-intr_rel" ].

kroppsvisitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kroppsvisitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kroppsvisitere_v-tr_rel" ].

krote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krote_v-intr_rel" ].

krote_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "krote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krote_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

krote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krote_v-tr_rel" ].

kruke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kruke_v-intr_rel" ].

krukse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "krukse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krukse_v-tr_rel" ].

krulle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "krulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krulle_v-trPrtcl_rel" ].

krulle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "krulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krulle_v-trScpr_rel" ].

krulle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "krulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krulle_v-tr_rel" ].

krumme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krumme_v-tr_rel" ].

krungle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krungle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krungle_v-intr_rel" ].

krungle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "krungle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krungle_v-trPath_rel" ].

kruse_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kruse_v-intr_rel" ].

kruse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "kruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kruse_v-tr_rel" ].

kruse_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kruse_v-tr_rel" ].

krusle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "krusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krusle_v-trPath_rel" ].

kry_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION finstr-dd,
   STEM < "kry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kry_v-intrImpersObl_rel" ].

kry_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "kry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kry_v-intr_rel" ].

krydre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krydre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krydre_v-tr_rel" ].

krympe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krympe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krympe_v-intr_rel" ].

krympe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "krympe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krympe_v-tr_rel" ].

krympe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krympe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krympe_v-tr_rel" ].

kryne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryne_v-tr_rel" ].

krype_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "krype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krype_v-intr_rel" ].

kryptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kryptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryptere_v-tr_rel" ].

kryptifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kryptifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryptifisere_v-tr_rel" ].

krysse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krysse_v-intr_rel" ].

krysse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "krysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krysse_v-trScpr_rel" ].

krysse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krysse_v-tr_rel" ].

kryssforhøre_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kryssforhøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kryssforhøre_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

kryssforhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kryssforhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryssforhøre_v-tr_rel" ].

kryssklippe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kryssklippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryssklippe_v-tr_rel" ].

krystallisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "krystallisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krystallisere_v-tr_rel" ].

kryste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kryste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kryste_v-tr_rel" ].

kråle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kråle_v-intr_rel" ].

krøke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "krøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøke_v-trPrtcl_rel" ].

krøke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "krøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

krøke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "krøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøke_v-tr_rel" ].

krøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "krøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøke_v-tr_rel" ].

krøkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krøkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøkne_v-intr_rel" ].

krølle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "krølle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krølle_v-intr_rel" ].

krølle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "krølle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krølle_v-trPrtcl_rel" ].

krølle_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "krølle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krølle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

krølle_tr-arg12-secpred-sammen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "krølle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krølle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

krølle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krølle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krølle_v-tr_rel" ].

krøple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krøple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøple_v-tr_rel" ].

krøsse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "krøsse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_krøsse_v-tr_rel" ].

kubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kubbe_v-tr_rel" ].

kube_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kube" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kube_v-tr_rel" ].

kubere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kubere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kubere_v-tr_rel" ].

kue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kue_v-tr_rel" ].

kujonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kujonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kujonere_v-tr_rel" ].

kukelure_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kukelure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kukelure_v-intr_rel" ].

kuldslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "kuldslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuldslå_v-tr_rel" ].

kule_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-te,
   STEM < "kule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kule_v-intrImpers_rel" ].

kule_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kule_v-tr_rel" ].

kull-lyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kull-lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kull-lyse_v-tr_rel" ].

kulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulle_v-tr_rel" ].

kullkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kullkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullkaste_v-tr_rel" ].

kulllyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kulllyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulllyse_v-tr_rel" ].

kullsegle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kullsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullsegle_v-intr_rel" ].

kullsegle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kullsegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullsegle_v-tr_rel" ].

kullseile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kullseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullseile_v-intr_rel" ].

kullseile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kullseile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullseile_v-tr_rel" ].

kullyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kullyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kullyse_v-tr_rel" ].

kulminere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kulminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulminere_v-intr_rel" ].

kulse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kulse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulse_v-intr_rel" ].

kulske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kulske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulske_v-intr_rel" ].

kulte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kulte_v-tr_rel" ].

kultivere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kultivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kultivere_v-intrObl_rel" ].

kultivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kultivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kultivere_v-tr_rel" ].

kumle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kumle_v-tr_rel" ].

kumulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kumulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kumulere_v-intr_rel" ].

kumulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kumulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kumulere_v-tr_rel" ].

kunne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kunne_v-tr_rel" ].

kunngjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "kunngjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kunngjøre_v-tr_rel" ].

kunngjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kunngjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kunngjøre_v-tr_rel" ].

kupere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kupere_v-tr_rel" ].

kuple_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kuple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuple_v-tr_rel" ].

kuple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kuple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuple_v-tr_rel" ].

kuppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuppe_v-tr_rel" ].

kure_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kure_v-intr_rel" ].

kurere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "kurere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kurere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurere_v-tr_rel" ].

kurle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kurle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurle_v-tr_rel" ].

kurle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kurle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurle_v-tr_rel" ].

kurre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurre_v-intr_rel" ].

kurse_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kurse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kurse_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

kurse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kurse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurse_v-tr_rel" ].

kursere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kursere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kursere_v-intr_rel" ].

kursivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kursivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kursivere_v-tr_rel" ].

kurtisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kurtisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurtisere_v-tr_rel" ].

kurve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kurve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurve_v-tr_rel" ].

kurve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kurve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kurve_v-tr_rel" ].

kuske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuske_v-tr_rel" ].

kuste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kuste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuste_v-tr_rel" ].

kute_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kute_v-intr_rel" ].

kutte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kutte_v-trPrtcl_rel" ].

kutte_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kutte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

kutte_tr-arg12-secpred-i := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kutte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

kutte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kutte_v-tr_rel" ].

kutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kutte_v-tr_rel" ].

kuve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuve_v-tr_rel" ].

kuvende_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kuvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kuvende_v-intr_rel" ].

kvadrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvadrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvadrere_v-tr_rel" ].

kvakke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "kvakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvakke_v-intrImpers_rel" ].

kvakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvakke_v-intr_rel" ].

kvalifisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kvalifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvalifisere_v-tr_rel" ].

kvalifisere_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kvalifisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kvalifisere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

kvalifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvalifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvalifisere_v-tr_rel" ].

kvamne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvamne_v-intr_rel" ].

kvantifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvantifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvantifisere_v-tr_rel" ].

kvantitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvantitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvantitere_v-tr_rel" ].

kvare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvare_v-tr_rel" ].

kvarte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvarte_v-tr_rel" ].

kvaste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "kvaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvaste_v-intrPrtcl_rel" ].

kvede_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "kvede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvede_v-intr_rel" ].

kvede_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kvede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvede_v-tr_rel" ].

kvee_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvee" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvee_v-tr_rel" ].

kvege_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kvege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvege_v-tr_rel" ].

kveike_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kveike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveike_v-trObl_rel" ].

kveike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kveike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveike_v-tr_rel" ].

kveile_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kveile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveile_v-trPrtcl_rel" ].

kveile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kveile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveile_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

kvekke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvekke_v-intr_rel" ].

kvekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvekke_v-tr_rel" ].

kvelde_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "kvelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvelde_v-intrImpers_rel" ].

kvelde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvelde_v-intr_rel" ].

kvele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvele_v-tr_rel" ].

kvelve_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kvelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvelve_v-intr_rel" ].

kvelve_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvelve_v-trObl_rel" ].

kvelve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvelve_v-tr_rel" ].

kveppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kveppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveppe_v-intr_rel" ].

kveppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kveppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveppe_v-tr_rel" ].

kverke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kverke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverke_v-tr_rel" ].

kverne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kverne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverne_v-tr_rel" ].

kverrsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "kverrsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverrsette_v-tr_rel" ].

kverulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kverulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverulere_v-intr_rel" ].

kverve_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "kverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverve_v-intrPrtcl_rel" ].

kverve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverve_v-intr_rel" ].

kverve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kverve_v-tr_rel" ].

kvese_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kvese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvese_v-intr_rel" ].

kvesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvesse_v-tr_rel" ].

kveste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kveste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kveste_v-tr_rel" ].

kvi_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "kvi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvi_v-tr_rel" ].

kvi_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "kvi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvi_v-trObl_rel" ].

kvie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvie_v-tr_rel" ].

kvie_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kvie_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kvikke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvikke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

kvikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "kvikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvikke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

kvikke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvikke_v-tr_rel" ].

kvikne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "kvikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvikne_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

kvile_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "kvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvile_v-intrPrtcl_rel" ].

kvile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvile_v-intr_rel" ].

kvile_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "kvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvile_v-tr_rel" ].

kvine_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kvine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvine_v-intr_rel" ].

kvinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvinke_v-intr_rel" ].

kviskre_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "kviskre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviskre_v-ditr_rel" ].

kviskre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kviskre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviskre_v-intrObl_rel" ].

kviskre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kviskre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviskre_v-intr_rel" ].

kviskre_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kviskre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviskre_v-trObl_rel" ].

kviskre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "kviskre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviskre_v-tr_rel" ].

kvisle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvisle_v-tr_rel" ].

kviste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kviste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kviste_v-tr_rel" ].

kvite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvite_v-tr_rel" ].

kvitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvitne_v-intr_rel" ].

kvitre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kvitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvitre_v-intr_rel" ].

kvitte_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "kvitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kvitte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kvittere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kvittere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kvittere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

kvittere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kvittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvittere_v-intr_rel" ].

kvittere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "kvittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvittere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

kvitvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kvitvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvitvaske_v-tr_rel" ].

kvotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "kvotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvotere_v-tr_rel" ].

kvæve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "kvæve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kvæve_v-tr_rel" ].

kyle_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "kyle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kyle_v-tr_rel" ].

kylle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "kylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kylle_v-tr_rel" ].

kysse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kysse_v-intr_rel" ].

kysse_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "kysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kysse_v-trObl_rel" ].

kysse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kysse_v-tr_rel" ].

kyte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "kyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kyte_v-intrObl_rel" ].

kyte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "kyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kyte_v-intr_rel" ].

kå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "kå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kå_v-tr_rel" ].

kåle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåle_v-tr_rel" ].

kåre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "kåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåre_v-intrImpers_rel" ].

kåre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåre_v-intr_rel" ].

kåre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "kåre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kåre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

kåre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "kåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåre_v-tr_rel" ].

kåsere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "kåsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåsere_v-intrObl_rel" ].

kåsere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "kåsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kåsere_v-intr_rel" ].

kødde_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "kødde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_kødde_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

kødde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "kødde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_kødde_v-intr_rel" ].

køe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "køe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_køe_v-intr_rel" ].

køye_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "køye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_køye_v-intr_rel" ].

la_acc-cum-inf := v-trScpr-scObNrg_scBareinf &
 [ INFLECTION finstr-tt,
   STEM < "la" >,
   SYNSEM.LKEYS.KEYREL.PRED "_la_v-trScpr_rel" ].

la_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "la" >,
   SYNSEM.LKEYS.KEYREL.PRED "_la_v-intrPrtcl_rel" ].

la_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "la" >,
   SYNSEM.LKEYS.KEYREL.PRED "_la_v-trPrtcl_rel" ].

la_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "la" >,
   SYNSEM.LKEYS.KEYREL.PRED "_la_v-trScpr_rel" ].

la_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "la" >,
   SYNSEM.LKEYS.KEYREL.PRED "_la_v-tr_rel" ].

labialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "labialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_labialisere_v-tr_rel" ].

lade_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "lade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lade_v-intrPrtcl_rel" ].

lade_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lade_v-trPrtcl_rel" ].

lade_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lade_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

lade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lade_v-tr_rel" ].

lafte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lafte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lafte_v-tr_rel" ].

lage_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-de,
   STEM < "lage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lage_v-ditr_rel" ].

lage_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "lage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lage_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

lagerføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lagerføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lagerføre_v-tr_rel" ].

lagge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "lagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lagge_v-tr_rel" ].

lagre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lagre_v-trScpr_rel" ].

lagre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lagre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lagre_v-tr_rel" ].

lake_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "lake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lake_v-tr_rel" ].

lakke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "lakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lakke_v-intrImpersObl_rel" ].

lakke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "lakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lakke_v-intr_rel" ].

lakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lakke_v-intr_rel" ].

lakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lakke_v-tr_rel" ].

lakkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lakkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lakkere_v-tr_rel" ].

laksere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "laksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laksere_v-intr_rel" ].

laksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "laksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laksere_v-tr_rel" ].

lale_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "lale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lale_v-intr_rel" ].

lalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lalle_v-intrObl_rel" ].

lalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lalle_v-intr_rel" ].

laminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "laminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laminere_v-tr_rel" ].

lamme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lamme_v-intr_rel" ].

lamme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lamme_v-tr_rel" ].

lamslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "lamslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lamslå_v-tr_rel" ].

lande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lande_v-intr_rel" ].

landsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "landsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_landsette_v-tr_rel" ].

landsforvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "landsforvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_landsforvise_v-tr_rel" ].

lange_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lange_v-intrObl_rel" ].

lange_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "lange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lange_v-intrPrtcl_rel" ].

lange_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "lange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lange_v-trObl_rel" ].

lansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lansere_v-tr_rel" ].

lappe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lappe_v-intrObl_rel" ].

lappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

lappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lappe_v-tr_rel" ].

larme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "larme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_larme_v-intr_rel" ].

lasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lasere_v-tr_rel" ].

;laske_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "laske" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_laske_v-trScpr_rel" ].

laske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "laske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laske_v-tr_rel" ].

laste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "laste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laste_v-trScpr_rel" ].

laste_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "laste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_laste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

laste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "laste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_laste_v-tr_rel" ].

late_pp-shft := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "late" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_late_v-trScprShft_rel",
            LOCAL.KEY-SPEC etter-k ] ].

late_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "late" >,
   SYNSEM.LKEYS.KEYREL.PRED "_late-seg_v-tr_rel" ].

late_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "late" >,
   SYNSEM.LKEYS.KEYREL.PRED "_late_v-tr_rel" ].

latinisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "latinisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_latinisere_v-tr_rel" ].

latterliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "latterliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_latterliggjøre_v-tr_rel" ].

lauge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lauge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauge_v-tr_rel" ].

lauge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lauge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauge_v-tr_rel" ].

lausgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "lausgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lausgi_v-tr_rel" ].

lausgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lausgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lausgjøre_v-tr_rel" ].

lauslate_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "lauslate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauslate_v-trObl_rel" ].

lauslate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lauslate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauslate_v-tr_rel" ].

lausrive_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "lausrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lausrive_v-tr_rel" ].

lausrive_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "lausrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lausrive_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

lauve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lauve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauve_v-intr_rel" ].

lauve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lauve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lauve_v-tr_rel" ].

lave_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "lave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lave_v-intrPrtcl_rel" ].

lave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lave_v-intr_rel" ].

layoute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "layoute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_layoute_v-intr_rel" ].

layoute_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "layoute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_layoute_v-tr_rel" ].

le_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "le" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_le_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

le_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "le" >,
   SYNSEM.LKEYS.KEYREL.PRED "_le_v-intr_rel" ].

le_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "le" >,
   SYNSEM.LKEYS.KEYREL.PRED "_le_v-trScpr_rel" ].

le_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION finstr-dd,
   STEM < "le" >,
   SYNSEM.LKEYS.KEYREL.PRED "_le_v-trObl_rel" ].

le_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "le" >,
   SYNSEM.LKEYS.KEYREL.PRED "_le_v-tr_rel" ].

lease_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lease" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lease_v-tr_rel" ].

ledde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ledde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ledde_v-tr_rel" ].

lede_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lede_v-intr_rel" ].

lede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lede_v-trScpr_rel" ].

lede_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "lede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lede_v-tr_rel" ].

lede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lede_v-tr_rel" ].

ledes_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "ledes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ledes_v-intrObl_rel" ].

ledes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "ledes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ledes_v-intr_rel" ].

ledsage_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "ledsage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ledsage_v-tr_rel" ].

;ledsage_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "ledsage" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ledsage_v_rel" ].

lee_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lee" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lee_v-tr_rel" ].

lefle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lefle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lefle_v-intrObl_rel" ].

legalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "legalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legalisere_v-tr_rel" ].

lege_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lege_v-tr_rel" ].

lege_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lege_v-tr_rel" ].

legemliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "legemliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legemliggjøre_v-tr_rel" ].

legere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "legere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legere_v-tr_rel" ].

legge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-intrObl_rel" ].

legge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-intrPrtcl_rel" ].

legge_tr-arg12-secpred := v-trScpr-scObArgCsd &  ; removed _scLoc, to get 'legge turen mot nord'
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-trScpr_rel" ].

legge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-trScprShft_rel" ].

legge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-tr_rel" ].

legge_tr-refl-obl-bak := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_legge_v-trObl_rel",
            LOCAL.KEY-SPEC bak-k ] ].

legge_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_legge_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

legge_tr-refl-obl-inni := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_legge_v-trObl_rel",
            LOCAL.KEY-SPEC inni-k ] ].

legge_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_legge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

legge_tr-refl-obl-under := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_legge_v-trObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

legge_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "legge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-trScpr_rel" ].

;legge_tv := v-tr &
; [ INFLECTION nonfstr-strong,
;   STEM < "legge" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_legge_v-tr_rel" ].

legitimere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "legitimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legitimere_v-tr_rel" ].

legitimere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "legitimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legitimere_v-tr_rel" ].

legitimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "legitimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_legitimere_v-tr_rel" ].

leie_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "leie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leie_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

leie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "leie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leie_v-tr_rel" ].

leies_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "leies" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leies_v-intr_rel" ].

leike_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leike_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

leike_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leike_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

leike_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leike_v-intr_rel" ].

leike_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leike_v-tr_rel" ].

leike_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leike_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

leike_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leike_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

leike_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "leike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leike_v-tr_rel" ].

leire_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "leire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leire_v-tr_rel" ].

leite_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "leite" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leite_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

leite_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "leite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leite_v-intr_rel" ].

;leite_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "leite" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_leite_v-trScpr_rel" ].

leive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "leive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leive_v-tr_rel" ].

leke_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leke_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

leke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

leke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leke_v-intr_rel" ].

leke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leke_v-tr_rel" ].

leke_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leke_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

leke_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

leke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "leke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leke_v-tr_rel" ].

lekke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "lekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekke_v-intr_rel" ].

lekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "lekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekke_v-intrPrtcl_rel" ].

lekke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekke_v-intr_rel" ].

lekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekke_v-tr_rel" ].

lekre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekre_v-tr_rel" ].

lekre_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekre_v-trObl_rel" ].

lekse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lekse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

;lekte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "lekte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_lekte_v-trScpr_rel" ].

lemleste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lemleste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lemleste_v-tr_rel" ].

lemmatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lemmatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lemmatisere_v-tr_rel" ].

lemme_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "lemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lemme_v-intr_rel" ].

lemme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "lemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lemme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

lempe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lempe_v-intrObl_rel" ].

lempe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lempe_v-trScpr_rel" ].

lempe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lempe_v-tr_rel" ].

lempe_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lempe_v-trObl_rel" ].

lempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lempe_v-tr_rel" ].

lemstre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lemstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lemstre_v-tr_rel" ].

lene_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "lene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lene_v-trPrtcl_rel" ].

lene_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "lene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lene_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

lene_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "lene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lene_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lene_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "lene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lene_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

lene_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "lene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lene_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lenges_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lenges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lenges_v-intrObl_rel" ].

lenges_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lenges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lenges_v-intr_rel" ].

lengte_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lengte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lengte_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

lengte_iv := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "lengte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lengte_v-intr_rel" ].

lengte_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "lengte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lengte_v-intrObl_rel" ].

lenke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lenke_v-trPrtcl_rel" ].

lenke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lenke_v-trScpr_rel" ].

lenke_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lenke_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lenke_v-tr_rel" ].

lense_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lense_v-intr_rel" ].

lense_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "lense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lense_v-trObl_rel" ].

lense_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lense_v-trObl_rel" ].

lense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lense_v-tr_rel" ].

lepe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "lepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lepe_v-intr_rel" ].

lepje_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "lepje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lepje_v-trScprShft_rel" ].

lepje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lepje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lepje_v-tr_rel" ].

lese_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lese_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

lese_intr-obl-igjennom := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lese_v-intrObl_rel",
            LOCAL.KEY-SPEC igjennom-k ] ].

lese_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lese_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

lese_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lese_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lese_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lese_v-intr_rel" ].

lese_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lese" >,
   SYNSEM [LKEYS.KEYREL.PRED "_lese_v-trScpr_rel",
            LOCAL.CAT.QVAL.PREDIC.LOCAL.CAT.HEAD.KEYS.KEY ut-k] ].

leske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "leske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leske_v-tr_rel" ].

leske_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "leske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_leske_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

leske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "leske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leske_v-tr_rel" ].

lespe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lespe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lespe_v-intr_rel" ].

less_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "less" >,
   SYNSEM.LKEYS.KEYREL.PRED "_less_v-intrObl_rel" ].

lesse_tr-arg12-secpred-på := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lesse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

lesse_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lesse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

lesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lesse_v-tr_rel" ].

lest_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "lest" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lest_v-intrObl_rel" ].

lete_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lete" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lete_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

lete_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lete_v-intr_rel" ].

lete_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lete_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

letne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "letne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_letne_v-intrImpers_rel" ].

letne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "letne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_letne_v-intr_rel" ].

lette_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lette_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

lette_intr-oblrefl := v-intrObl-oblRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lette_v-intrObl_rel" ].

lette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lette_v-intr_rel" ].

lette_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "lette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lette_v-trObl_rel" ].

lette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lette_v-tr_rel" ].

leve_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-de,
   STEM < "leve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_leve_v-intrPrtcl_rel" ].

levendegjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "levendegjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levendegjøre_v-tr_rel" ].

levere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "levere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levere_v-ditr_rel" ].

levere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "levere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_levere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

levere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "levere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levere_v-tr_rel" ].

levne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "levne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levne_v-ditr_rel" ].

levne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "levne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levne_v-intrPrtcl_rel" ].

levne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "levne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levne_v-tr_rel" ].

levre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "levre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_levre_v-tr_rel" ].

li_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION finstr-dd,
   STEM < "li" >,
   SYNSEM.LKEYS.KEYREL.PRED "_li_v-intrImpersObl_rel" ].

li_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "li" >,
   SYNSEM.LKEYS.KEYREL.PRED "_li_v-intrObl_rel" ].

li_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "li" >,
   SYNSEM.LKEYS.KEYREL.PRED "_li_v-intr_rel" ].

liberalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "liberalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_liberalisere_v-tr_rel" ].

lide_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lide" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lide_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

lide_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lide_v-intr_rel" ].

ligge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "ligge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ligge_v-intrPrtcl_rel" ].

ligne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ligne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ligne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ligne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ligne_v-intr_rel" ].

ligne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ligne_v-tr_rel" ].

lignifisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lignifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lignifisere_v-intr_rel" ].

like_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "like" >,
   SYNSEM.LKEYS.KEYREL.PRED "_like_v-tr_rel" ].

like_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "like" >,
   SYNSEM.LKEYS.KEYREL.PRED "_like_v-tr_rel" ].

like_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "like" >,
   SYNSEM.LKEYS.KEYREL.PRED "_like_v-tr_rel" ].

likerette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "likerette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likerette_v-tr_rel" ].

likestille_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "likestille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_likestille_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

likestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "likestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likestille_v-tr_rel" ].

likne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "likne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_likne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

likne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "likne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likne_v-intr_rel" ].

likne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "likne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likne_v-trObl_rel" ].

likne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "likne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likne_v-tr_rel" ].

likvidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "likvidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_likvidere_v-tr_rel" ].

lime_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lime_v-trScpr_rel" ].

;linde_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "linde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_linde_v-trScpr_rel" ].

lindre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lindre_v-intr_rel" ].

lindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lindre_v-tr_rel" ].

linjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "linjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_linjere_v-tr_rel" ].

linne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "linne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_linne_v-intrImpers_rel" ].

linnkoke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "linnkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_linnkoke_v-intr_rel" ].

linnkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "linnkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_linnkoke_v-tr_rel" ].

linnsalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "linnsalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_linnsalte_v-tr_rel" ].

lire_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "lire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lire_v-trScprShft_rel" ].

lirke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lirke_v-trPrtcl_rel" ].

lirke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lirke_v-trScpr_rel" ].

lirke_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "lirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lirke_v-tr_rel" ].

lisensiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lisensiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lisensiere_v-tr_rel" ].

lisitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lisitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lisitere_v-tr_rel" ].

lisse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lisse_v-tr_rel" ].

;liste_iv := v-intr &
; [ INFLECTION nonfstr-et,
;   STEM < "liste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_liste_v_rel" ].

liste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "liste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_liste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

;liste_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr-et,
;   STEM < "liste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_liste_v_rel" ].

;liste_tr-refl-dir := v-trPath-obRefl_obDir &
; [ INFLECTION nonfstr,
;   STEM < "liste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_liste_v_rel" ].

liste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "liste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_liste_v-tr_rel" ].

lite_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "lite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lite_v-intrObl_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

litografere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "litografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_litografere_v-intr_rel" ].

livberge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "livberge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livberge_v-tr_rel" ].

livberge_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "livberge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_livberge_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

livberge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "livberge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livberge_v-tr_rel" ].

live_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "live" >,
   SYNSEM.LKEYS.KEYREL.PRED "_live_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

live_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "live" >,
   SYNSEM.LKEYS.KEYREL.PRED "_live_v-tr_rel" ].

livne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "livne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livne_v-intrPrtcl_rel" ].

livnære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "livnære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livnære_v-tr_rel" ].

livnære_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "livnære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_livnære_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

livnære_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "livnære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livnære_v-trScpr_rel" ].

livsforsikre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "livsforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livsforsikre_v-tr_rel" ].

livsforsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "livsforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_livsforsikre_v-tr_rel" ].

ljome_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "ljome" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ljome_v-intrImpersObl_rel" ].

ljome_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ljome" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ljome_v-intr_rel" ].

ljuge_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "ljuge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ljuge_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ljuge_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "ljuge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ljuge_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

ljuge_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "ljuge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ljuge_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

ljuge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "ljuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ljuge_v-intr_rel" ].

lobbe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "lobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lobbe_v-tr_rel" ].

lobbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lobbe_v-tr_rel" ].

lodde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lodde_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

lodde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lodde_v-tr_rel" ].

loe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "loe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loe_v-intr_rel" ].

loe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "loe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loe_v-trScpr_rel" ].

loffe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "loffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loffe_v-intr_rel" ].

loffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "loffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loffe_v-intr_rel" ].

loge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "loge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loge_v-intrPrtcl_rel" ].

loge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "loge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loge_v-intr_rel" ].

logge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "logge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_logge_v-trScpr_rel" ].

logge_tr-refl-obl-av := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "logge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_logge_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

logge_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "logge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_logge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

logge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "logge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_logge_v-tr_rel" ].

logre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "logre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_logre_v-intr_rel" ].

lokalbedøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "lokalbedøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokalbedøve_v-tr_rel" ].

;lokalisere_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "lokalisere" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_lokalisere_v-trScpr_rel" ].

lokalisere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "lokalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokalisere_v-trObl_rel" ].

lokalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lokalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokalisere_v-tr_rel" ].

lokke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-intrObl_rel" ].

lokke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-intr_rel" ].

lokke_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-trObl_rel" ].

lokke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-trScpr_rel" ].

lokke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-tr_rel" ].

lokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lokke_v-tr_rel" ].

lombardere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lombardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lombardere_v-intr_rel" ].

longere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "longere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_longere_v-tr_rel" ].

loope_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "loope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loope_v-intr_rel" ].

loppe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "loppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loppe_v-trObl_rel" ].

loppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "loppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loppe_v-tr_rel" ].

loppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "loppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_loppe_v-tr_rel" ].

lorgnettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lorgnettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lorgnettere_v-tr_rel" ].

lose_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr,
   STEM < "lose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lose_v-tr_rel" ].

lose_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lose_v-tr_rel" ].

losjere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "losjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_losjere_v-intrObl_rel" ].

losjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "losjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_losjere_v-tr_rel" ].

losse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "losse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_losse_v-intr_rel" ].

losse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "losse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_losse_v-tr_rel" ].

love_ditr := v-ditr &
 [ INFLECTION nonfstr,
   STEM < "love" >,
   SYNSEM.LKEYS.KEYREL.PRED "_love_v-ditr_rel" ].

love_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr,
   STEM < "love" >,
   SYNSEM.LKEYS.KEYREL.PRED "_love_v-ditr_rel" ].

love_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "love" >,
   SYNSEM.LKEYS.KEYREL.PRED "_love_v-intr_rel" ].

love_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr,
   STEM < "love" >,
   SYNSEM.LKEYS.KEYREL.PRED "_love_v-tr_rel" ].

love_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr,
   STEM < "love" >,
   SYNSEM.LKEYS.KEYREL.PRED "_love_v-tr_rel" ].

lovfeste_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "lovfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovfeste_v-tr_rel" ].

lovfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lovfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovfeste_v-tr_rel" ].

lovheimle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lovheimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovheimle_v-tr_rel" ].

lovhjemle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lovhjemle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovhjemle_v-tr_rel" ].

lovkvede_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lovkvede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovkvede_v-tr_rel" ].

lovprise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lovprise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovprise_v-tr_rel" ].

lovsynge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lovsynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lovsynge_v-tr_rel" ].

lue_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "lue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lue_v-intrPrtcl_rel" ].

lue_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "lue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lue_v-intr_rel" ].

luffe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "luffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luffe_v-intr_rel" ].

lufte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "lufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lufte_v-intrPrtcl_rel" ].

lufte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lufte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

lufte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lufte_v-tr_rel" ].

lufte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lufte_v-tr_rel" ].

lugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lugge_v-intr_rel" ].

lugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lugge_v-tr_rel" ].

lugne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lugne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lugne_v-tr_rel" ].

lugne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lugne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lugne_v-tr_rel" ].

luke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "luke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luke_v-intr_rel" ].

luke_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "luke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

luke_tr-arg12-secpred-bort := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "luke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

luke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "luke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luke_v-tr_rel" ].

lukke_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

lukke_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

lukke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukke_v-tr_rel" ].

lukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukke_v-tr_rel" ].

lukrere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lukrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukrere_v-intrObl_rel" ].

luksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "luksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luksere_v-tr_rel" ].

lukte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lukte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lukte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

lukte_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-et,
   STEM < "lukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukte_v-intrAdv_rel" ].

lukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lukte_v-tr_rel" ].

lulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lulle_v-intr_rel" ].

lulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lulle_v-tr_rel" ].

lumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lumpe_v-tr_rel" ].

lune_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "lune" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lune_v-intr_rel" ].

lunke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "lunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunke_v-intr_rel" ].

lunke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunke_v-intrObl_rel" ].

lunke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunke_v-tr_rel" ].

lunne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "lunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunne_v-tr_rel" ].

lunsje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lunsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunsje_v-intr_rel" ].

lunte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "lunte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lunte_v-intr_rel" ].

lure_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "lure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lure_v-trObl_rel" ].

lure_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "lure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lure_v-trPath_rel" ].

lure_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lure_v-tr_rel" ].

lurve_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lurve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lurve_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

;lurve_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "lurve" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_lurve_v-trScpr_rel" ].

luse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "luse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luse_v-intrObl_rel" ].

luse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "luse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luse_v-tr_rel" ].

luske_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "luske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_luske_v-intr_rel" ].

lute_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "lute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lute_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

lute_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lute_v-tr_rel" ].

lute_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lute_v-tr_rel" ].

lutre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lutre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lutre_v-tr_rel" ].

lyde_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-strong,
   STEM < "lyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyde_v-intrAdv_rel" ].

lyde_intr-secpr := v-intrScpr-scSuNrgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "lyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyde_v-intrScpr_rel" ].

lyde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyde_v-intr_rel" ].

lyde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "lyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyde_v-tr_rel" ].

lydisolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lydisolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lydisolere_v-tr_rel" ].

lye_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lye_v-intr_rel" ].

lye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lye_v-tr_rel" ].

lyge_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyge_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

lyge_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyge_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

lyge_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyge_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lyge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyge_v-intr_rel" ].

lykkes_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lykkes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lykkes_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

lykkes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lykkes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lykkes_v-intr_rel" ].

lykkønske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lykkønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lykkønske_v-tr_rel" ].

lyne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "lyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyne_v-intrImpers_rel" ].

lyne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyne_v-intr_rel" ].

lynsje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lynsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lynsje_v-tr_rel" ].

lyse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyse_v-intrPrtcl_rel" ].

lyse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyse_v-intr_rel" ].

lyse_tr-arg1-secpred := v-trScpr-scObNrgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyse_v-trScpr_rel" ].

lyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

lyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyse_v-tr_rel" ].

lyske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lyske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyske_v-tr_rel" ].

lyske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lyske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyske_v-tr_rel" ].

lysne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "lysne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lysne_v-intrImpers_rel" ].

lysne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lysne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lysne_v-intr_rel" ].

lyste_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "lyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyste_v-tr_rel" ].

lyste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyste_v-tr_rel" ].

lystre_intr := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "lystre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lystre_v-intr_rel" ].

lystre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lystre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lystre_v-tr_rel" ].

lyve_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyve_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

lyve_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyve_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

lyve_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "lyve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lyve_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

lyve_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "lyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lyve_v-intr_rel" ].

låne_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "låne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låne_v-ditr_rel" ].

låne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "låne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

låne_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "låne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_låne_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

låne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "låne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låne_v-tr_rel" ].

lånta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "lånta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lånta_v-tr_rel" ].

låre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "låre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

låre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "låre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låre_v-tr_rel" ].

låse_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "låse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

låse_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "låse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

låse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "låse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låse_v-tr_rel" ].

låse_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "låse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låse_v-trObl_rel" ].

låse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "låse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låse_v-tr_rel" ].

låte_intr-secpr-rais := v-intrScpr-suNrg-scInfORscAdjORscPPORscEQUAT &
 [ INFLECTION nonfstr,
   STEM < "låte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_låte_v-intrScpr_rel" ].

lægre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lægre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lægre_v-tr_rel" ].

lære_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-ditr_rel" ].

lære_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_lære_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

lære_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-ditr_rel" ].

lære_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-tr_rel" ].

lære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

lære_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-trObl_rel" ].

lære_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-tr_rel" ].

lære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "lære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lære_v-tr_rel" ].

;lø_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION finstr-dd,
;   STEM < "lø" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_lø_v-trScpr_rel" ].

;lø_tv := v-tr &
; [ INFLECTION finstr-dd,
;   STEM < "lø" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_lø_v-tr_rel" ].

;løe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "løe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_løe_v-trScpr_rel" ].

løe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "løe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løe_v-tr_rel" ].

løfte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "løfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løfte_v-intrObl_rel" ].

løfte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "løfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løfte_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

løfte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "løfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løfte_v-trScpr_rel" ].

løfte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "løfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løfte_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

løfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "løfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løfte_v-tr_rel" ].

lønne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "lønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lønne_v-intrObl_rel" ].

lønne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "lønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lønne_v-tr_rel" ].

lønne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "lønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_lønne_v-tr_rel" ].

løse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "løse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løse_v-trScpr_rel" ].

løse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "løse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løse_v-tr_rel" ].

løse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "løse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løse_v-tr_rel" ].

løsgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "løsgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løsgi_v-tr_rel" ].

løsgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "løsgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løsgjøre_v-tr_rel" ].

løslate_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "løslate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_løslate_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

løslate_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "løslate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løslate_v-tr_rel" ].

løsne_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "løsne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_løsne_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

løsne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "løsne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løsne_v-intr_rel" ].

løsrive_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "løsrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løsrive_v-tr_rel" ].

løsrive_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "løsrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_løsrive_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

løye_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "løye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løye_v-intrImpers_rel" ].

løye_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "løye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løye_v-intr_rel" ].

løyne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "løyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løyne_v-tr_rel" ].

løype_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "løype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løype_v-tr_rel" ].

løyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "løyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løyse_v-trScpr_rel" ].

løyse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "løyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løyse_v-tr_rel" ].

løyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "løyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løyse_v-tr_rel" ].

løyve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "løyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_løyve_v-tr_rel" ].

magasinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "magasinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_magasinere_v-tr_rel" ].

mage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mage_v-tr_rel" ].

magnetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "magnetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_magnetisere_v-tr_rel" ].

magre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "magre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_magre_v-intrPrtcl_rel" ].

magre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "magre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_magre_v-tr_rel" ].

maie_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "maie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maie_v-trPrtcl_rel" ].

makadamisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "makadamisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_makadamisere_v-tr_rel" ].

make_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "make" >,
   SYNSEM.LKEYS.KEYREL.PRED "_make_v-tr_rel" ].

make_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "make" >,
   SYNSEM.LKEYS.KEYREL.PRED "_make_v-tr_rel" ].

maksimalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "maksimalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maksimalisere_v-tr_rel" ].

maksimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "maksimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maksimere_v-tr_rel" ].

;maksle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "maksle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_maksle_v-trScpr_rel" ].

;maksle_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "maksle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_maksle_v-tr_rel" ].

makte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "makte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_makte_v-tr_rel" ].

makte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "makte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_makte_v-tr_rel" ].

maktstele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "maktstele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maktstele_v-tr_rel" ].

maktstjele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "maktstjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maktstjele_v-tr_rel" ].

makulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "makulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_makulere_v-tr_rel" ].

male_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "male" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_male_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

male_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "male" >,
   SYNSEM.LKEYS.KEYREL.PRED "_male_v-intr_rel" ].

male_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "male" >,
   SYNSEM.LKEYS.KEYREL.PRED "_male_v-trScpr_rel" ].

male_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "male" >,
   SYNSEM.LKEYS.KEYREL.PRED "_male_v-tr_rel" ].

male_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "male" >,
   SYNSEM.LKEYS.KEYREL.PRED "_male_v-tr_rel" ].

malte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "malte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_malte_v-tr_rel" ].

maltraktere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "maltraktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maltraktere_v-tr_rel" ].

mane_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mane_v-intrObl_rel" ].

mane_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mane_v-trObl_rel" ].

mane_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mane_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

mangedoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mangedoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangedoble_v-tr_rel" ].

mangfoldiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mangfoldiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangfoldiggjøre_v-tr_rel" ].

mangle_io-pres := v-trPresnt &
 [ INFLECTION nonfstr-et,
   STEM < "mangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangle_v-trPresnt_rel" ].

mangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangle_v-intr_rel" ].

mangle_subj-pres := v-intrPresnt &
 [ INFLECTION nonfstr-et,
   STEM < "mangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangle_v-intrPresnt_rel" ].

mangle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mangle_v-tr_rel" ].

manifestere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "manifestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manifestere_v-trScpr_rel" ].

manifestere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "manifestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manifestere_v-tr_rel" ].

manifestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "manifestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manifestere_v-tr_rel" ].

manikyrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "manikyrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manikyrere_v-tr_rel" ].

manipulere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "manipulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manipulere_v-intrObl_rel" ].

manipulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "manipulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manipulere_v-tr_rel" ].

mankere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mankere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mankere_v-intr_rel" ].

mankere_subj-pres := v-intrPresnt &
 [ INFLECTION nonfstr-te,
   STEM < "mankere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mankere_v-intrPresnt_rel" ].

manne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "manne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manne_v-trPrtcl_rel" ].

mannsoppdekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mannsoppdekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mannsoppdekke_v-tr_rel" ].

manudusere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "manudusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manudusere_v-intr_rel" ].

manudusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "manudusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manudusere_v-tr_rel" ].

manøvrere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "manøvrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manøvrere_v-intr_rel" ].

manøvrere_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "manøvrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manøvrere_v-trPath_rel" ].

manøvrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "manøvrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_manøvrere_v-tr_rel" ].

margstele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "margstele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_margstele_v-tr_rel" ].

margstjele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "margstjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_margstjele_v-tr_rel" ].

marinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "marinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marinere_v-tr_rel" ].

markedsføre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "markedsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markedsføre_v-tr_rel" ].

markedsføre_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "markedsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markedsføre_v-trScpr_rel" ].

markedsføre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "markedsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markedsføre_v-trScpr_rel" ].

markedsføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "markedsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markedsføre_v-tr_rel" ].

markere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "markere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markere_v-tr_rel" ].

markere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "markere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markere_v-trScpr_rel" ].

markere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "markere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_markere_v-tr_rel" ].

marknadsføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "marknadsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marknadsføre_v-tr_rel" ].

marme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "marme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marme_v-intr_rel" ].

marmorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "marmorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marmorere_v-tr_rel" ].

marsjere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "marsjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marsjere_v-intr_rel" ].

marsjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "marsjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_marsjere_v-tr_rel" ].

martre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "martre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_martre_v-tr_rel" ].

mase_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mase" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mase_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

mase_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mase_v-intr_rel" ].

mase_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mase_v-trScprShft_rel" ].

mase_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "mase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mase_v-tr_rel" ].

;maske_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "maske" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_maske_v-trScpr_rel" ].

maskere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "maskere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskere_v-tr_rel" ].

maskere_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "maskere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskere_v-tr_rel" ].

maskinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "maskinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinere_v-tr_rel" ].

maskinklippe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "maskinklippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinklippe_v-tr_rel" ].

maskinklyppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "maskinklyppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinklyppe_v-tr_rel" ].

maskinskrive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "maskinskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinskrive_v-intr_rel" ].

maskinskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "maskinskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinskrive_v-tr_rel" ].

maskinstrikke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "maskinstrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinstrikke_v-intr_rel" ].

maskinstrikke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "maskinstrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskinstrikke_v-tr_rel" ].

maskulinisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "maskulinisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maskulinisere_v-tr_rel" ].

massakrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "massakrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_massakrere_v-tr_rel" ].

masseprodusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "masseprodusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_masseprodusere_v-tr_rel" ].

massere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "massere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_massere_v-tr_rel" ].

maste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "maste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maste_v-tr_rel" ].

masturbere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "masturbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_masturbere_v-intr_rel" ].

matberge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "matberge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matberge_v-tr_rel" ].

matberge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "matberge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matberge_v-tr_rel" ].

matche_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "matche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matche_v-tr_rel" ].

mate_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "mate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mate_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

mate_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "mate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mate_v-tr_rel" ].

mate_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mate_v-tr_rel" ].

materialisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "materialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_materialisere_v-tr_rel" ].

materialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "materialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_materialisere_v-tr_rel" ].

matrikulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "matrikulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matrikulere_v-tr_rel" ].

matte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "matte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

matte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "matte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_matte_v-tr_rel" ].

mattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mattere_v-tr_rel" ].

maule_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "maule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maule_v-intr_rel" ].

maule_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "maule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maule_v-tr_rel" ].

maure_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr,
   STEM < "maure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maure_v-intrImpersObl_rel" ].

maure_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "maure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maure_v-intrPrtcl_rel" ].

maure_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "maure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_maure_v-intr_rel" ].

meddele_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "meddele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meddele_v-ditr_rel" ].

meddele_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "meddele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meddele_v-ditr_rel" ].

meddele_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "meddele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meddele_v-tr_rel" ].

medføre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "medføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medføre_v-tr_rel" ].

medføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "medføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medføre_v-tr_rel" ].

medgi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "medgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medgi_v-tr_rel" ].

medgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "medgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medgi_v-tr_rel" ].

medisinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "medisinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medisinere_v-tr_rel" ].

meditere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "meditere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_meditere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

meditere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "meditere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meditere_v-intr_rel" ].

medunderskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "medunderskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medunderskrive_v-tr_rel" ].

medvirke_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "medvirke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_medvirke_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

medvirke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "medvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_medvirke_v-intr_rel" ].

megle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "megle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_megle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

megle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "megle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_megle_v-intr_rel" ].

meie_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "meie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meie_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

meie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "meie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meie_v-tr_rel" ].

meine_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "meine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meine_v-tr_rel" ].

meine_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "meine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meine_v-tr_rel" ].

meisle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "meisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meisle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

meisle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "meisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meisle_v-tr_rel" ].

meite_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "meite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meite_v-intr_rel" ].

meite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "meite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meite_v-tr_rel" ].

mekanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mekanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mekanisere_v-tr_rel" ].

mekke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mekke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

mekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mekke_v-tr_rel" ].

mekle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mekle_v-intrObl_rel" ].

mekle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mekle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mekle_v-intr_rel" ].

mekre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mekre_v-intr_rel" ].

melde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-intrObl_rel" ].

melde_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-intrPrtcl_rel" ].

melde_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_melde_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

melde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-tr_rel" ].

melde_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_melde_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

melde_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-trScpr_rel" ].

melde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-tr_rel" ].

melde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "melde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melde_v-tr_rel" ].

mele_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "mele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mele_v-tr_rel" ].

melere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "melere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melere_v-tr_rel" ].

melke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "melke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melke_v-trObl_rel" ].

melke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "melke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melke_v-tr_rel" ].

mellomlande_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mellomlande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mellomlande_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

mellomlande_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mellomlande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mellomlande_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

mellomlande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mellomlande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mellomlande_v-intr_rel" ].

melte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "melte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_melte_v-tr_rel" ].

memorere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "memorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_memorere_v-tr_rel" ].

mene_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "mene" >,
   SYNSEM.LOCAL.CAT.VAL.COMPS <[LOCAL.CAT.HEAD fin-comp]>,  ; not really true, but to avoid catastrophe with 'men han har snakket med en konsulent på telefonen' ('men' as imperative)
   SYNSEM.LKEYS.KEYREL.PRED "_mene_v-tr_rel" ].

mene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mene_v-tr_rel" ].

menge_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "menge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_menge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

menstruere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "menstruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_menstruere_v-intr_rel" ].

mentalundersøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mentalundersøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mentalundersøke_v-tr_rel" ].

mergle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mergle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mergle_v-tr_rel" ].

mergstele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mergstele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mergstele_v-tr_rel" ].

mergstjele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mergstjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mergstjele_v-tr_rel" ].

merittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "merittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merittere_v-tr_rel" ].

merke_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-ditr_rel" ].

merke_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-ditr_rel" ].

merke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-trScpr_rel" ].

merke_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-intrComp_rel" ].

merke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-tr_rel" ].

merke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "merke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merke_v-tr_rel" ].

merle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "merle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_merle_v-tr_rel" ].

meske_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "meske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meske_v-trObl_rel" ].

meske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "meske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_meske_v-tr_rel" ].

messe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "messe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_messe_v-intr_rel" ].

messe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "messe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_messe_v-tr_rel" ].

mestre_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "mestre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mestre_v-tr_rel" ].

mestre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mestre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mestre_v-tr_rel" ].

metallisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "metallisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_metallisere_v-tr_rel" ].

mette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mette_v-tr_rel" ].

midle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "midle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_midle_v-intr_rel" ].

midle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "midle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_midle_v-tr_rel" ].

mige_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "mige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mige_v-intr_rel" ].

migrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "migrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_migrere_v-intr_rel" ].

mikroskopere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mikroskopere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mikroskopere_v-tr_rel" ].

mikse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mikse_v-tr_rel" ].

mildne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mildne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mildne_v-intr_rel" ].

mildne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mildne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mildne_v-tr_rel" ].

militarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "militarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_militarisere_v-tr_rel" ].

mime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mime_v-intr_rel" ].

mime_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mime_v-tr_rel" ].

mimre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mimre_v-intrObl_rel" ].

mimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mimre_v-intr_rel" ].

minelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "minelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minelegge_v-tr_rel" ].

minere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "minere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minere_v-intr_rel" ].

minere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "minere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minere_v-tr_rel" ].

miniatyrisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "miniatyrisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miniatyrisere_v-tr_rel" ].

minimalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "minimalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minimalisere_v-tr_rel" ].

minimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "minimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minimere_v-tr_rel" ].

minke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "minke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minke_v-intr_rel" ].

minne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "minne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minne_v-intrObl_rel" ].

minne_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "minne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_minne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

minnes_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "minnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minnes_v-tr_rel" ].

minnes_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "minnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minnes_v-tr_rel" ].

minske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "minske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_minske_v-tr_rel" ].

misbillige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "misbillige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misbillige_v-tr_rel" ].

misbruke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "misbruke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misbruke_v-tr_rel" ].

misfare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "misfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misfare_v-tr_rel" ].

misforstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "misforstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misforstå_v-tr_rel" ].

mishage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mishage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mishage_v-tr_rel" ].

mishandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mishandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mishandle_v-tr_rel" ].

mishøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "mishøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mishøre_v-tr_rel" ].

misjonere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "misjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misjonere_v-intrObl_rel" ].

misjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "misjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misjonere_v-intr_rel" ].

miskjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "miskjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miskjenne_v-tr_rel" ].

miskle_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "miskle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miskle_v-tr_rel" ].

miskunne_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "miskunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miskunne_v-trObl_rel" ].

miskunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "miskunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miskunne_v-tr_rel" ].

misligholde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "misligholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misligholde_v-tr_rel" ].

mislike_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "mislike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mislike_v-tr_rel" ].

mislike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mislike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mislike_v-tr_rel" ].

mislykkes_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "mislykkes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mislykkes_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

mislykkes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mislykkes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mislykkes_v-intr_rel" ].

mislykkes_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "mislykkes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mislykkes_v-intrObl_rel" ].

misoppfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "misoppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misoppfatte_v-tr_rel" ].

misregne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "misregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misregne_v-tr_rel" ].

misrekne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "misrekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misrekne_v-tr_rel" ].

misse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "misse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_misse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

misse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "misse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misse_v-tr_rel" ].

missnakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "missnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_missnakke_v-intr_rel" ].

missnakke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "missnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_missnakke_v-tr_rel" ].

mista_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "mista" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mista_v-trObl_rel" ].

mista_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "mista" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mista_v-tr_rel" ].

mista_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "mista" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mista_v-tr_rel" ].

miste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "miste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_miste_v-tr_rel" ].

mistenke_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "mistenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistenke_v-trObl_rel" ].

mistenke_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "mistenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mistenke_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

mistenke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mistenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistenke_v-tr_rel" ].

mistenkeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mistenkeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistenkeliggjøre_v-tr_rel" ].

mistolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mistolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistolke_v-tr_rel" ].

mistrives_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "mistrives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistrives_v-intr_rel" ].

mistro_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "mistro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistro_v-tr_rel" ].

mistru_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "mistru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mistru_v-tr_rel" ].

misunne_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "misunne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_misunne_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

misunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "misunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_misunne_v-tr_rel" ].

mjaue_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mjaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjaue_v-intr_rel" ].

mjuke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "mjuke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjuke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

mjuke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "mjuke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjuke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

mjuklande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mjuklande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjuklande_v-intr_rel" ].

mjukne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mjukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjukne_v-intr_rel" ].

mjøle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "mjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjøle_v-tr_rel" ].

mjølke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "mjølke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjølke_v-trObl_rel" ].

mjølke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mjølke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mjølke_v-tr_rel" ].

mobbe_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "mobbe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mobbe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

mobbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mobbe_v-tr_rel" ].

mobilisere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "mobilisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_mobilisere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

mobilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mobilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mobilisere_v-tr_rel" ].

modellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "modellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modellere_v-tr_rel" ].

moderere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "moderere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moderere_v-tr_rel" ].

moderere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "moderere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moderere_v-tr_rel" ].

modernisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "modernisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modernisere_v-tr_rel" ].

modifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "modifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modifisere_v-tr_rel" ].

modne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "modne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modne_v-intr_rel" ].

modne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "modne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modne_v-tr_rel" ].

modnes_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "modnes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modnes_v-intr_rel" ].

modulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "modulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modulere_v-intr_rel" ].

modulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "modulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_modulere_v-tr_rel" ].

molde_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "molde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_molde_v-trPrtcl_rel" ].

molde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "molde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_molde_v-trScpr_rel" ].

molde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "molde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_molde_v-tr_rel" ].

molestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "molestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_molestere_v-tr_rel" ].

mompe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mompe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mompe_v-intr_rel" ].

monne_intr-obladv := v-intrAdv &
 [ INFLECTION nonfstr-et,
   STEM < "monne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_monne_v-intrAdv_rel" ].

monne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "monne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_monne_v-intr_rel" ].

monoftongere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "monoftongere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_monoftongere_v-tr_rel" ].

monopolisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "monopolisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_monopolisere_v-tr_rel" ].

montere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "montere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_montere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

montere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "montere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_montere_v-tr_rel" ].

moppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "moppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moppe_v-intr_rel" ].

moppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "moppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moppe_v-tr_rel" ].

moralisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "moralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moralisere_v-intrObl_rel" ].

moralisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "moralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_moralisere_v-intr_rel" ].

more_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "more" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_more_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

more_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "more" >,
   SYNSEM.LKEYS.KEYREL.PRED "_more_v-tr_rel" ].

more_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "more" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_more_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

more_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "more" >,
   SYNSEM.LKEYS.KEYREL.PRED "_more_v-tr_rel" ].

morgne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "morgne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morgne_v-intrImpers_rel" ].

morgne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "morgne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morgne_v-intr_rel" ].

morkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "morkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morkne_v-intr_rel" ].

morse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "morse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morse_v-intr_rel" ].

morse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "morse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morse_v-tr_rel" ].

morske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "morske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_morske_v-tr_rel" ].

mortifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mortifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mortifisere_v-tr_rel" ].

mose_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mose_v-intr_rel" ].

mose_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mose_v-tr_rel" ].

mosjonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mosjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mosjonere_v-intr_rel" ].

mosjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mosjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mosjonere_v-tr_rel" ].

motarbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "motarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motarbeide_v-tr_rel" ].

motbevise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "motbevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motbevise_v-tr_rel" ].

motbevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "motbevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motbevise_v-tr_rel" ].

motivere_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "motivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motivere_v-trObl_rel" ].

motivere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "motivere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_motivere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

motivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "motivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motivere_v-tr_rel" ].

motorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "motorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motorisere_v-tr_rel" ].

motsette_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "motsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motsette_v-ditr_rel" ].

motsette_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "motsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motsette_v-ditr_rel" ].

motsette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "motsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motsette_v-tr_rel" ].

motsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "motsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motsi_v-tr_rel" ].

motstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "motstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motstå_v-tr_rel" ].

motsvare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "motsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motsvare_v-tr_rel" ].

motta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "motta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motta_v-tr_rel" ].

motvirke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "motvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motvirke_v-tr_rel" ].

motvirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "motvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_motvirke_v-tr_rel" ].

movere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "movere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_movere_v-tr_rel" ].

mudre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mudre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mudre_v-intr_rel" ].

mudre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "mudre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mudre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

mudre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mudre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mudre_v-tr_rel" ].

#|
muge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "muge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muge_v-tr_rel" ].

mugge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "mugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mugge_v-trScpr_rel" ].

mugge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "mugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mugge_v-tr_rel" ].
|#

mugne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mugne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mugne_v-intr_rel" ].

mukke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mukke_v-intr_rel" ].

mulde_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "mulde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulde_v-trPrtcl_rel" ].

mulde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "mulde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulde_v-trScpr_rel" ].

mulde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "mulde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulde_v-tr_rel" ].

mule_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "mule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mule_v-intr_rel" ].

mulebinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mulebinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulebinde_v-tr_rel" ].

muliggjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "muliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muliggjøre_v-tr_rel" ].

muliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "muliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muliggjøre_v-tr_rel" ].

muljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "muljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muljere_v-tr_rel" ].

mulkte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "mulkte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulkte_v-trObl_rel" ].

mulkte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mulkte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulkte_v-tr_rel" ].

mulktere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "mulktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulktere_v-trObl_rel" ].

mulktere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mulktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulktere_v-tr_rel" ].

mulle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "mulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulle_v-intrObl_rel" ].

mulle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "mulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulle_v-intr_rel" ].

mulne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "mulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulne_v-intrImpers_rel" ].

mulre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mulre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mulre_v-intr_rel" ].

multiplisere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "multiplisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_multiplisere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

multiplisere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "multiplisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_multiplisere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

multiplisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "multiplisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_multiplisere_v-tr_rel" ].

mumifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mumifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumifisere_v-tr_rel" ].

mumisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mumisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumisere_v-tr_rel" ].

mumle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumle_v-intrObl_rel" ].

mumle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumle_v-intr_rel" ].

mumse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumse_v-intrObl_rel" ].

mumse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mumse_v-tr_rel" ].

munne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "munne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_munne_v-intrObl_rel" ].

munnhogges_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "munnhogges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_munnhogges_v-intrObl_rel" ].

munnhogges_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "munnhogges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_munnhogges_v-intr_rel" ].

munnhugges_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "munnhugges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_munnhugges_v-intrObl_rel" ].

munnhugges_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "munnhugges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_munnhugges_v-intr_rel" ].

muntre_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "muntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muntre_v-trObl_rel" ].

muntre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "muntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muntre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

muntre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "muntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_muntre_v-tr_rel" ].

mure_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mure_v-intr_rel" ].

mure_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "mure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mure_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

mure_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "mure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mure_v-trObl_rel" ].

murre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "murre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_murre_v-intrImpersObl_rel" ].

murre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "murre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_murre_v-intrObl_rel" ].

murre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "murre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_murre_v-intr_rel" ].

musisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "musisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_musisere_v-intr_rel" ].

mussere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mussere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mussere_v-intr_rel" ].

mute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mute_v-intr_rel" ].

mute_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mute_v-tr_rel" ].

mutere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "mutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mutere_v-intr_rel" ].

mutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mutere_v-tr_rel" ].

mygle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mygle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mygle_v-intr_rel" ].

myke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "myke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

myke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "myke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

myklande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "myklande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myklande_v-intr_rel" ].

mykne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mykne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mykne_v-intr_rel" ].

myldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "myldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myldre_v-intr_rel" ].

mynte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "mynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mynte_v-intrObl_rel" ].

mynte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "mynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mynte_v-trObl_rel" ].

myrde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "myrde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myrde_v-tr_rel" ].

myse_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "myse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_myse_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

myse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "myse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myse_v-intr_rel" ].

mystifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mystifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mystifisere_v-tr_rel" ].

myte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "myte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_myte_v-intr_rel" ].

måke_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "måke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_måke_v-tr_rel" ].

måke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "måke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_måke_v-tr_rel" ].

målbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "målbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_målbinde_v-tr_rel" ].

målbære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "målbære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_målbære_v-tr_rel" ].

måle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "måle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_måle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

måle_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "måle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_måle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

måle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "måle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_måle_v-tr_rel" ].

måpe_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "måpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_måpe_v-intr_rel" ].

;måte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "måte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_måte_v-trScpr_rel" ].

;måte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION nonfstr,
;   STEM < "måte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_måte_v-trScprShft_rel" ].

;måtte_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr-strong,
;   STEM < "måtte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_måtte_v-intrObl_rel" ].

;måtte_intr-telicpartcl := v-intrPrtcl &
; [ INFLECTION nonfstr-strong,
;   STEM < "måtte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_måtte_v-intrPrtcl_rel" ].

mæle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "mæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mæle_v-intrObl_rel" ].

;mæle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "mæle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_mæle_v-trScpr_rel" ].

mæle_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "mæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mæle_v-tr_rel" ].

mæle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "mæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mæle_v-tr_rel" ].

mæte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mæte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mæte_v-tr_rel" ].

møblere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "møblere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møblere_v-tr_rel" ].

møkke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "møkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møkke_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

møkke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "møkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møkke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

mønje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mønje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mønje_v-tr_rel" ].

mønstre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "mønstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mønstre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

mønstre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mønstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mønstre_v-tr_rel" ].

mørbanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mørbanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørbanke_v-tr_rel" ].

mørke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "mørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørke_v-tr_rel" ].

mørklegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "mørklegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørklegge_v-tr_rel" ].

mørkne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "mørkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørkne_v-intrImpers_rel" ].

mørkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mørkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørkne_v-intr_rel" ].

mørne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "mørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_mørne_v-intr_rel" ].

møte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "møte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_møte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

møte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "møte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møte_v-intrPrtcl_rel" ].

møte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "møte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møte_v-tr_rel" ].

møtes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "møtes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_møtes_v-intr_rel" ].

nage_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "nage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nage_v-intr_rel" ].

nage_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "nage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nage_v-tr_rel" ].

nagle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nagle_v-trScpr_rel" ].

nagle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nagle_v-tr_rel" ].

nappe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nappe_v-intr_rel" ].

nappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nappe_v-trScpr_rel" ].

nappe_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nappe_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

nappe_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nappe_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

nappe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nappe_v-trScprShft_rel" ].

nappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nappe_v-tr_rel" ].

narkotisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "narkotisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_narkotisere_v-tr_rel" ].

narre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "narre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_narre_v-trObl_rel" ].

narre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "narre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_narre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

narre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "narre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_narre_v-tr_rel" ].

nasalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nasalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nasalere_v-tr_rel" ].

nasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nasjonalisere_v-tr_rel" ].

naske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "naske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naske_v-intr_rel" ].

naske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "naske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naske_v-trScprShft_rel" ].

naske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "naske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naske_v-tr_rel" ].

nate_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "nate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nate_v-tr_rel" ].

natte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "natte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_natte_v-intrPrtcl_rel" ].

natte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "natte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_natte_v-tr_rel" ].

naturalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "naturalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naturalisere_v-tr_rel" ].

naube_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "naube" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naube_v-intr_rel" ].

naube_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "naube" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naube_v-trObl_rel" ].

naube_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "naube" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naube_v-tr_rel" ].

naue_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "naue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_naue_v-intr_rel" ].

navigere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "navigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_navigere_v-intr_rel" ].

navigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "navigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_navigere_v-tr_rel" ].

navle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "navle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_navle_v-tr_rel" ].

navne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "navne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_navne_v-tr_rel" ].

navngi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "navngi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_navngi_v-tr_rel" ].

nazifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nazifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nazifisere_v-tr_rel" ].

nebbes_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nebbes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nebbes_v-intr_rel" ].

nedarves_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nedarves" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedarves_v-intr_rel" ].

nedbryte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nedbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedbryte_v-tr_rel" ].

nedbygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "nedbygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedbygge_v-tr_rel" ].

neddemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "neddemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neddemme_v-tr_rel" ].

nedfelle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "nedfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedfelle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

nedfelle_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "nedfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedfelle_v-trObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

nedfelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedfelle_v-tr_rel" ].

nedkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedkalle_v-tr_rel" ].

nedkjempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedkjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedkjempe_v-tr_rel" ].

nedkjøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedkjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedkjøle_v-tr_rel" ].

nedkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedkjøre_v-tr_rel" ].

nedkomme_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "nedkomme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nedkomme_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

nedkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "nedkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedkomme_v-intr_rel" ].

nedlate_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "nedlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedlate_v-trObl_rel" ].

nedlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nedlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedlegge_v-tr_rel" ].

nedmolde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedmolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedmolde_v-tr_rel" ].

nedmulde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedmulde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedmulde_v-tr_rel" ].

nedprioritere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedprioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedprioritere_v-tr_rel" ].

nedringe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedringe_v-tr_rel" ].

nedsable_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedsable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedsable_v-tr_rel" ].

nedsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nedsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedsette_v-tr_rel" ].

nedskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nedskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedskrive_v-tr_rel" ].

nedstamme_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nedstamme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nedstamme_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

nedstemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedstemme_v-tr_rel" ].

nedtegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedtegne_v-tr_rel" ].

nedtrappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedtrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedtrappe_v-tr_rel" ].

nedverdige_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "nedverdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedverdige_v-trObl_rel" ].

nedverdige_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nedverdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedverdige_v-tr_rel" ].

nedverdige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nedverdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedverdige_v-tr_rel" ].

nedvurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nedvurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nedvurdere_v-tr_rel" ].

negere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "negere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_negere_v-tr_rel" ].

neglisjere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "neglisjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neglisjere_v-intrComp_rel" ].

neglisjere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "neglisjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neglisjere_v-tr_rel" ].

neglisjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "neglisjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neglisjere_v-tr_rel" ].

neie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "neie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neie_v-intr_rel" ].

;neie_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "neie" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_neie_v-trScpr_rel" ].

neie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "neie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_neie_v-tr_rel" ].

nekte_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "nekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v-ditr_rel" ].

nekte_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v-ditr_rel" ].

nekte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v-intr_rel" ].

nekte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "nekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v-tr_rel" ].

;nekte_tr-refl-rais := v-trScpr-scObNrg_obRefl_scAdjORPredprtcl &
; [ INFLECTION nonfstr-et,
;   STEM < "nekte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v_rel" ].

nekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nekte_v-tr_rel" ].

nenne_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr,
   STEM < "nenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nenne_v-tr_rel" ].

nenne_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "nenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nenne_v-tr_rel" ].

;neste_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "neste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_neste_v-trScpr_rel" ].

nette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nette_v-tr_rel" ].

nevehelse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nevehelse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevehelse_v-intrObl_rel" ].

nevehelse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nevehelse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevehelse_v-intr_rel" ].

nevehilse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "nevehilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevehilse_v-intrObl_rel" ].

nevehilse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "nevehilse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevehilse_v-intr_rel" ].

nevetakes_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "nevetakes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevetakes_v-intr_rel" ].

nevne_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "nevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevne_v-intrComp_rel" ].

nevne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "nevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevne_v-tr_rel" ].

nevne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nevne_v-tr_rel" ].

nidoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nidoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nidoble_v-tr_rel" ].

niholde_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "niholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_niholde_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nikke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nikke_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nikke_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

nikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nikke_v-intr_rel" ].

nippe_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nippe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nippe_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

nippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nippe_v-intr_rel" ].

nisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nisse_v-intr_rel" ].

niste_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "niste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_niste_v-trPrtcl_rel" ].

;niste_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "niste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_niste_v-trScpr_rel" ].

nistirre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nistirre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nistirre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nistirre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nistirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nistirre_v-intr_rel" ].

nitrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nitrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nitrere_v-tr_rel" ].

nitrifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nitrifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nitrifisere_v-tr_rel" ].

nitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nitte_v-tr_rel" ].

nivellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nivellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nivellere_v-tr_rel" ].

nomadisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "nomadisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nomadisere_v-intr_rel" ].

nominere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "nominere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nominere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

nominere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "nominere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nominere_v-trScpr_rel" ].

nominere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nominere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nominere_v-tr_rel" ].

nonchalere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "nonchalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nonchalere_v-intr_rel" ].

normalisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "normalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_normalisere_v-tr_rel" ].

normalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "normalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_normalisere_v-tr_rel" ].

normere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "normere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_normere_v-tr_rel" ].

norske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "norske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_norske_v-intrObl_rel" ].

norske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "norske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_norske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

norske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "norske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_norske_v-tr_rel" ].

notere_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-ditr_rel" ].

notere_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-ditr_rel" ].

notere_tr-arg12-secpred-ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

notere_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

notere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-intrComp_rel" ].

notere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-tr_rel" ].

notere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "notere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notere_v-tr_rel" ].

notifisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "notifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notifisere_v-tr_rel" ].

notifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "notifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_notifisere_v-tr_rel" ].

nubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nubbe_v-intr_rel" ].

nudde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nudde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nudde_v-intr_rel" ].

nufse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nufse_v-intrObl_rel" ].

nufse_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "nufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nufse_v-trObl_rel" ].

nugge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nugge_v-intrObl_rel" ].

nugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nugge_v-intr_rel" ].

nulle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nulle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

nummerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nummerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nummerere_v-tr_rel" ].

nuppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nuppe_v-intr_rel" ].

nuppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nuppe_v-tr_rel" ].

nupre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nupre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nupre_v-tr_rel" ].

nuske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nuske_v-intrObl_rel" ].

nuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nuske_v-intr_rel" ].

nuske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nuske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

nusle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nusle_v-intr_rel" ].

nusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nusse_v-intr_rel" ].

nusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nusse_v-tr_rel" ].

nyansere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "nyansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyansere_v-tr_rel" ].

nyansere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nyansere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyansere_v-tr_rel" ].

nydanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nydanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nydanne_v-tr_rel" ].

nydyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nydyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nydyrke_v-tr_rel" ].

#|
nye_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nye_v-trScpr_rel" ].

nykke_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "nykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nykke_v-intr_rel" ].

nykke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "nykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nykke_v-trScpr_rel" ].
|#

nynne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nynne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nynne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nynne_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nynne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nynne_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

nynne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nynne_v-intr_rel" ].

nynne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nynne_v-tr_rel" ].

nype_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "nype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nype_v-intr_rel" ].

nype_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "nype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nype_v-tr_rel" ].

nyrydde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nyrydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyrydde_v-tr_rel" ].

nyse_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "nyse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nyse_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

nyse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "nyse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nyse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nyse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "nyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyse_v-intr_rel" ].

nyskape_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nyskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyskape_v-tr_rel" ].

nyte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "nyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyte_v-tr_rel" ].

nyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyte_v-tr_rel" ].

nytte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "nytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nytte_v-intr_rel" ].

nytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nytte_v-tr_rel" ].

nyttiggjøre_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "nyttiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyttiggjøre_v-ditr_rel" ].

nyttiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nyttiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyttiggjøre_v-tr_rel" ].

nyve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "nyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nyve_v-tr_rel" ].

nå_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "nå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nå_v-intr_rel" ].

nå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "nå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nå_v-intrObl_rel" ].

nå_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "nå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nå_v-intrPrtcl_rel" ].

nå_tr-obl-til := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "nå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nå_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

nå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "nå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nå_v-tr_rel" ].

nåde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nåde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nåde_v-tr_rel" ].

nåtle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nåtle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nåtle_v-tr_rel" ].

nære_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "nære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nære_v-trObl_rel" ].

nære_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "nære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nære_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nære_v-tr_rel" ].

nærlese_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nærlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nærlese_v-tr_rel" ].

nærme_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nærme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nærme_v-ditr_rel" ].

nærme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nærme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nærme_v-tr_rel" ].

nø_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "nø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nø_v-trObl_rel" ].

nø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "nø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nø_v-tr_rel" ].

nøde_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "nøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøde_v-trObl_rel" ].

nøde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nøde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøde_v-tr_rel" ].

nødlande_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nødlande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nødlande_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

nødlande_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "nødlande" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nødlande_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

nødlande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nødlande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nødlande_v-intr_rel" ].

nødlande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nødlande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nødlande_v-tr_rel" ].

nødslakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nødslakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nødslakte_v-tr_rel" ].

nødvendiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "nødvendiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nødvendiggjøre_v-tr_rel" ].

nøffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "nøffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøffe_v-intr_rel" ].

nøle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "nøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøle_v-intr_rel" ].

nøle_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "nøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøle_v-intrObl_rel" ].

nøre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "nøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøre_v-intrObl_rel" ].

nøre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "nøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøre_v-intrPrtcl_rel" ].

nøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøre_v-tr_rel" ].

nøste_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nøste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøste_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

nøste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "nøste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

nøste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "nøste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøste_v-tr_rel" ].

nøye_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "nøye" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_nøye_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

nøyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "nøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøyte_v-tr_rel" ].

nøytralisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "nøytralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_nøytralisere_v-tr_rel" ].

obdusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "obdusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_obdusere_v-tr_rel" ].

objektivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "objektivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_objektivere_v-tr_rel" ].

observere_acc-cum-inf := v-trScpr-scObNrg_scBareinf &
 [ INFLECTION nonfstr-te,
   STEM < "observere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_observere_v-trScpr_rel" ].

observere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "observere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_observere_v-intrComp_rel" ].

observere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "observere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_observere_v-tr_rel" ].

observere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "observere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_observere_v-tr_rel" ].

obstruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "obstruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_obstruere_v-tr_rel" ].

odle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "odle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_odle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

odle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "odle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_odle_v-tr_rel" ].

offerere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "offerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_offerere_v-ditr_rel" ].

offerere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "offerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_offerere_v-trObl_rel" ].

offerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "offerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_offerere_v-tr_rel" ].

ofre_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ofre_v-ditr_rel" ].

ofre_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ofre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ofre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ofre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

ofre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ofre_v-tr_rel" ].

ofre_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ofre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ofre_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ofre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

ofre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ofre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ofre_v-tr_rel" ].

oie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "oie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oie_v-intr_rel" ].

oie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oie_v-tr_rel" ].

oie_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oie_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

oie_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oie_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

okke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "okke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okke_v-intr_rel" ].

okke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "okke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okke_v-tr_rel" ].

okke_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "okke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okke_v-trObl_rel" ].

okkultere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "okkultere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okkultere_v-tr_rel" ].

okkupere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "okkupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okkupere_v-tr_rel" ].

oksidere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "oksidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oksidere_v-intr_rel" ].

oksidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oksidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oksidere_v-tr_rel" ].

okulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "okulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_okulere_v-tr_rel" ].

olje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "olje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_olje_v-tr_rel" ].

olme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "olme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_olme_v-intrObl_rel" ].

olme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "olme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_olme_v-intr_rel" ].

olme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "olme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_olme_v-tr_rel" ].

omadressere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "omadressere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omadressere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omadressere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omadressere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omadressere_v-tr_rel" ].

omarbeide_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "omarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omarbeide_v-tr_rel" ].

ombestemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ombestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ombestemme_v-tr_rel" ].

ombrekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ombrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ombrekke_v-tr_rel" ].

ombringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ombringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ombringe_v-tr_rel" ].

ombære_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ombære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ombære_v-tr_rel" ].

omdanne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "omdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omdanne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omdanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omdanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omdanne_v-tr_rel" ].

omfamne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omfamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omfamne_v-tr_rel" ].

omfatte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "omfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omfatte_v-trObl_rel" ].

omfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omfatte_v-tr_rel" ].

omfavne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omfavne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omfavne_v-tr_rel" ].

omforme_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "omforme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omforme_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omforme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omforme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omforme_v-tr_rel" ].

omgi_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "omgi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omgi_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

omgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "omgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgi_v-tr_rel" ].

omgjøre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "omgjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omgjøre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "omgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgjøre_v-tr_rel" ].

omgå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "omgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgå_v-tr_rel" ].

omgåes_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "omgåes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgåes_v-intrObl_rel" ].

omgåes_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "omgåes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgåes_v-intr_rel" ].

omgås_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "omgås" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgås_v-intrObl_rel" ].

omgås_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "omgås" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omgås_v-intr_rel" ].

omhandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omhandle_v-tr_rel" ].

ominnrede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ominnrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ominnrede_v-tr_rel" ].

omkalfatre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omkalfatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omkalfatre_v-tr_rel" ].

omkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "omkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omkomme_v-intr_rel" ].

omkranse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omkranse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omkranse_v-tr_rel" ].

ommøblere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ommøblere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ommøblere_v-tr_rel" ].

omorganisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omorganisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omorganisere_v-tr_rel" ].

omplante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omplante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omplante_v-tr_rel" ].

ompotte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ompotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ompotte_v-tr_rel" ].

omprikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omprikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omprikle_v-tr_rel" ].

omprioritere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "omprioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omprioritere_v-intr_rel" ].

omprioritere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omprioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omprioritere_v-tr_rel" ].

omprøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "omprøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omprøve_v-tr_rel" ].

omramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omramme_v-tr_rel" ].

omredigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omredigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omredigere_v-tr_rel" ].

omregne_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "omregne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omregne_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omregne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omregne_v-tr_rel" ].

omrekne_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "omrekne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omrekne_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omrekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omrekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omrekne_v-tr_rel" ].

omringe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omringe_v-tr_rel" ].

områ_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "områ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_områ_v-tr_rel" ].

omrømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omrømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omrømme_v-tr_rel" ].

omsette_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "omsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omsette_v-trObl_rel" ].

omsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "omsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omsette_v-tr_rel" ].

omskape_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "omskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskape_v-trObl_rel" ].

omskape_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskape_v-tr_rel" ].

omskape_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omskape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskape_v-tr_rel" ].

omskifte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "omskifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskifte_v-intr_rel" ].

omskjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omskjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskjære_v-tr_rel" ].

omskole_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "omskole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskole_v-tr_rel" ].

omskole_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omskole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskole_v-tr_rel" ].

omskolere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omskolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskolere_v-tr_rel" ].

omskolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omskolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskolere_v-tr_rel" ].

omskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "omskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omskrive_v-tr_rel" ].

omslutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omslutte_v-tr_rel" ].

omslynge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omslynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omslynge_v-tr_rel" ].

omstille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstille_v-tr_rel" ].

omstille_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omstille_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

omstille_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omstille_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstille_v-tr_rel" ].

omstrukturere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omstrukturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstrukturere_v-tr_rel" ].

omstrukturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omstrukturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstrukturere_v-tr_rel" ].

omstyrte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omstyrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstyrte_v-tr_rel" ].

omstøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omstøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omstøte_v-tr_rel" ].

omtale_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "omtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omtale_v-trScpr_rel" ].

omtale_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "omtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omtale_v-trScpr_rel" ].

omtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omtale_v-tr_rel" ].

omvandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omvandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvandle_v-tr_rel" ].

omvelte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "omvelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvelte_v-tr_rel" ].

omvende_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "omvende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omvende_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omvende_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvende_v-tr_rel" ].

omvende_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "omvende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_omvende_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

omvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvende_v-tr_rel" ].

omvurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omvurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvurdere_v-tr_rel" ].

omvøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "omvøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_omvøle_v-tr_rel" ].

onanere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "onanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_onanere_v-intr_rel" ].

ondulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ondulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ondulere_v-tr_rel" ].

onne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "onne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_onne_v-intr_rel" ].

opalescere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opalescere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opalescere_v-tr_rel" ].

opalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opalisere_v-tr_rel" ].

operasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "operasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_operasjonalisere_v-tr_rel" ].

operere_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "operere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_operere_v-intrLghtScpr_rel" ].

operere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "operere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_operere_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

operere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "operere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_operere_v-intr_rel" ].

operere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "operere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_operere_v-tr_rel" ].

oppbevare_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "oppbevare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppbevare_v-trScpr_rel" ].

oppbevare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppbevare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppbevare_v-tr_rel" ].

oppbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppbringe_v-tr_rel" ].

oppby_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "oppby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppby_v-tr_rel" ].

oppbygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "oppbygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppbygge_v-tr_rel" ].

oppdage_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "oppdage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdage_v-intrComp_rel" ].

oppdage_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "oppdage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdage_v-tr_rel" ].

oppdage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppdage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdage_v-tr_rel" ].

oppdatere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "oppdatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdatere_v-tr_rel" ].

oppdatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppdatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdatere_v-tr_rel" ].

oppdra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "oppdra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdra_v-tr_rel" ].

oppdrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppdrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdrette_v-tr_rel" ].

oppdrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppdrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdrive_v-tr_rel" ].

oppdyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppdyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppdyrke_v-tr_rel" ].

oppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppe_v-tr_rel" ].

oppebie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppebie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppebie_v-tr_rel" ].

oppebære_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppebære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppebære_v-tr_rel" ].

oppelske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppelske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppelske_v-tr_rel" ].

oppfange_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppfange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfange_v-tr_rel" ].

oppfatte_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "oppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfatte_v-intrComp_rel" ].

oppfatte_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "oppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfatte_v-trScpr_rel" ].

oppfatte_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "oppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfatte_v-trScpr_rel" ].

oppfatte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "oppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfatte_v-tr_rel" ].

oppfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfatte_v-tr_rel" ].

oppfinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppfinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfinne_v-tr_rel" ].

oppflaske_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "oppflaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppflaske_v-trObl_rel" ].

oppflaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppflaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppflaske_v-tr_rel" ].

oppfordre_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "oppfordre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppfordre_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppfordre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "oppfordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfordre_v-trObl_rel" ].

oppfordre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "oppfordre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppfordre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppfordre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppfordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfordre_v-tr_rel" ].

oppfostre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "oppfostre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppfostre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppfostre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppfostre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppfostre_v-tr_rel" ].

oppføre_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "oppføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppføre_v-trScpr_rel" ].

;oppføre_tv := v-tr &
; [ INFLECTION nonfstr-te,
;   STEM < "oppføre" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_oppføre_v_rel" ].

oppgi_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION finstr-tt,
   STEM < "oppgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppgi_v-intrComp_rel" ].

oppgi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "oppgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppgi_v-tr_rel" ].

oppgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "oppgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppgi_v-tr_rel" ].

oppheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "oppheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppheve_v-tr_rel" ].

opphisse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "opphisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opphisse_v-tr_rel" ].

opphisse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "opphisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opphisse_v-tr_rel" ].

oppholde_tr-refl-obl-bak := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "oppholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppholde_v-trObl_rel",
            LOCAL.KEY-SPEC bak-k ] ].

oppholde_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "oppholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppholde_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

oppholde_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "oppholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppholde_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

oppholde_tr-refl-obl-under := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "oppholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppholde_v-trObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

oppholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppholde_v-tr_rel" ].

opphøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "opphøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opphøre_v-intr_rel" ].

oppildne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "oppildne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppildne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppildne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppildne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppildne_v-tr_rel" ].

oppirre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppirre_v-tr_rel" ].

oppjustere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "oppjustere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppjustere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppjustere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppjustere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppjustere_v-tr_rel" ].

oppkalle_tr-obl-etter := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "oppkalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppkalle_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

oppkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppkalle_v-tr_rel" ].

oppkaste_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oppkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppkaste_v-trObl_rel" ].

oppkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppkaste_v-tr_rel" ].

oppklare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppklare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppklare_v-tr_rel" ].

oppkonstruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppkonstruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppkonstruere_v-tr_rel" ].

opplate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "opplate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplate_v-tr_rel" ].

oppleve_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-de,
   STEM < "oppleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppleve_v-tr_rel" ].

oppleve_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-de,
   STEM < "oppleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppleve_v-intrComp_rel" ].

oppleve_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "oppleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppleve_v-tr_rel" ].

oppleve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "oppleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppleve_v-tr_rel" ].

opplive_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "opplive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplive_v-tr_rel" ].

opplive_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "opplive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplive_v-trObl_rel" ].

opplive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "opplive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplive_v-tr_rel" ].

opplyse_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "opplyse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_opplyse_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

opplyse_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "opplyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplyse_v-tr_rel" ].

opplyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opplyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opplyse_v-tr_rel" ].

oppløfte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oppløfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløfte_v-tr_rel" ].

oppløfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppløfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløfte_v-tr_rel" ].

oppløse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "oppløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

oppløse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "oppløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløse_v-tr_rel" ].

oppløyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "oppløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløyse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

oppløyse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "oppløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppløyse_v-tr_rel" ].

oppmagasinere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "oppmagasinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppmagasinere_v-tr_rel" ].

oppmagasinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppmagasinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppmagasinere_v-tr_rel" ].

oppmuntre_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "oppmuntre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppmuntre_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppmuntre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "oppmuntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppmuntre_v-trObl_rel" ].

oppmuntre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr,
   STEM < "oppmuntre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppmuntre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppmuntre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppmuntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppmuntre_v-tr_rel" ].

oppnevne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppnevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppnevne_v-tr_rel" ].

oppnorske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppnorske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppnorske_v-tr_rel" ].

oppnå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "oppnå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppnå_v-tr_rel" ].

oppnå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "oppnå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppnå_v-tr_rel" ].

opponere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "opponere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_opponere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

opponere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "opponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opponere_v-intr_rel" ].

opprede_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "opprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opprede_v-tr_rel" ].

oppreise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppreise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppreise_v-tr_rel" ].

oppreklamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppreklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppreklamere_v-tr_rel" ].

opprette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "opprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opprette_v-tr_rel" ].

opprettholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "opprettholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opprettholde_v-tr_rel" ].

opprinne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "opprinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opprinne_v-intr_rel" ].

oppruste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppruste_v-tr_rel" ].

opprøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opprøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opprøre_v-tr_rel" ].

oppsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppsette_v-tr_rel" ].

oppskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oppskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppskrive_v-tr_rel" ].

oppsluke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppsluke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppsluke_v-tr_rel" ].

oppslutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppslutte_v-tr_rel" ].

oppspore_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppspore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppspore_v-tr_rel" ].

oppstykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppstykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppstykke_v-tr_rel" ].

oppstå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "oppstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppstå_v-intr_rel" ].

oppsummere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppsummere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppsummere_v-tr_rel" ].

oppsøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppsøke_v-tr_rel" ].

oppta_tr-obl-til := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "oppta" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppta_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "oppta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppta_v-tr_rel" ].

opptegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "opptegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptegne_v-tr_rel" ].

opptenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opptenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptenne_v-tr_rel" ].

opptjene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "opptjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptjene_v-tr_rel" ].

opptrappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "opptrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptrappe_v-tr_rel" ].

opptre_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "opptre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptre_v-intr_rel" ].

opptre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION finstr-dd,
   STEM < "opptre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_opptre_v-trScpr_rel" ].

oppvarte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "oppvarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvarte_v-intr_rel" ].

oppvarte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppvarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvarte_v-tr_rel" ].

oppveie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "oppveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppveie_v-tr_rel" ].

oppvekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppvekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvekke_v-tr_rel" ].

oppvigle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oppvigle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvigle_v-tr_rel" ].

oppvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvise_v-tr_rel" ].

oppvurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oppvurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppvurdere_v-tr_rel" ].

oppøve_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "oppøve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oppøve_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oppøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "oppøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oppøve_v-tr_rel" ].

optere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "optere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_optere_v-tr_rel" ].

optimalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "optimalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_optimalisere_v-tr_rel" ].

optimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "optimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_optimere_v-tr_rel" ].

orde_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "orde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orde_v-intrPrtcl_rel" ].

ordinere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "ordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordinere_v-trObl_rel" ].

ordinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordinere_v-tr_rel" ].

ordlegge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "ordlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordlegge_v-tr_rel" ].

ordne_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ordne_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

ordne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordne_v-intrPrtcl_rel" ].

ordne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordne_v-tr_rel" ].

ordne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ordne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

ordne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ordne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ordne_v-tr_rel" ].

oreigne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oreigne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oreigne_v-tr_rel" ].

organisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "organisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_organisere_v-tr_rel" ].

organisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "organisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_organisere_v-tr_rel" ].

orge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "orge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orge_v-intr_rel" ].

orge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "orge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orge_v-tr_rel" ].

orientere_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "orientere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_orientere_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

orientere_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "orientere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_orientere_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

orientere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "orientere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orientere_v-tr_rel" ].

orientere_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "orientere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_orientere_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

orientere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "orientere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orientere_v-tr_rel" ].

orke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "orke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orke_v-tr_rel" ].

orke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "orke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orke_v-tr_rel" ].

orkestrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "orkestrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orkestrere_v-intr_rel" ].

orkestrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "orkestrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orkestrere_v-tr_rel" ].

orme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "orme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orme_v-tr_rel" ].

orme_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "orme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_orme_v-trPath_rel" ].

ornamentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ornamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ornamentere_v-tr_rel" ].

oscillere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "oscillere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oscillere_v-intr_rel" ].

oscillere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oscillere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oscillere_v-tr_rel" ].

ose_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ose_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

ose_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ose_v-intr_rel" ].

oste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "oste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oste_v-tr_rel" ].

oste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "oste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oste_v-tr_rel" ].

otre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "otre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_otre_v-intr_rel" ].

overanstrenge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "overanstrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overanstrenge_v-tr_rel" ].

overanstrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overanstrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overanstrenge_v-tr_rel" ].

overbelaste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "overbelaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbelaste_v-tr_rel" ].

overbelaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overbelaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbelaste_v-tr_rel" ].

overbeskatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overbeskatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbeskatte_v-tr_rel" ].

overbeskytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overbeskytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbeskytte_v-tr_rel" ].

overbetone_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overbetone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbetone_v-tr_rel" ].

overbevise_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "overbevise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overbevise_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

overbevise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "overbevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbevise_v-tr_rel" ].

overbevise_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "overbevise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overbevise_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

overbevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overbevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbevise_v-tr_rel" ].

overbringe_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "overbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbringe_v-ditr_rel" ].

overbringe_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "overbringe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overbringe_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbringe_v-tr_rel" ].

overbrodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overbrodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overbrodere_v-tr_rel" ].

overby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overby_v-tr_rel" ].

overdimensjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overdimensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdimensjonere_v-tr_rel" ].

overdra_tr-obl-til := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "overdra" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overdra_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overdra_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "overdra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdra_v-tr_rel" ].

overdrive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "overdrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdrive_v-intr_rel" ].

overdrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overdrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdrive_v-tr_rel" ].

overdynge_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "overdynge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overdynge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

overdynge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overdynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdynge_v-tr_rel" ].

overdøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "overdøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overdøve_v-tr_rel" ].

overeksponere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "overeksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overeksponere_v-tr_rel" ].

overeksponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overeksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overeksponere_v-tr_rel" ].

overfalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overfalle_v-tr_rel" ].

overflødiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overflødiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overflødiggjøre_v-tr_rel" ].

overfløye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "overfløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overfløye_v-tr_rel" ].

overforsikre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "overforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overforsikre_v-tr_rel" ].

overforsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overforsikre_v-tr_rel" ].

overfuse_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "overfuse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overfuse_v-tr_rel" ].

overføre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "overføre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overføre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overføre_v-tr_rel" ].

overgi_tr-obl-til := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "overgi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overgi_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overgi_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "overgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overgi_v-tr_rel" ].

overgi_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "overgi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overgi_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "overgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overgi_v-tr_rel" ].

overgå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "overgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overgå_v-tr_rel" ].

overhale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overhale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overhale_v-tr_rel" ].

overholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overholde_v-tr_rel" ].

overhøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "overhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overhøre_v-tr_rel" ].

overhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overhøre_v-tr_rel" ].

overhøvle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overhøvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overhøvle_v-tr_rel" ].

overkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overkjøre_v-tr_rel" ].

overkomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overkomme_v-tr_rel" ].

overkompensere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "overkompensere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overkompensere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

overkompensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overkompensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overkompensere_v-tr_rel" ].

overlaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overlaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlaste_v-tr_rel" ].

overlegge_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "overlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlegge_v-tr_rel" ].

overlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlegge_v-tr_rel" ].

overlesse_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "overlesse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overlesse_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

overlesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overlesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlesse_v-tr_rel" ].

overleve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "overleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overleve_v-intr_rel" ].

overleve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "overleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overleve_v-tr_rel" ].

overlevere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "overlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlevere_v-ditr_rel" ].

overlevere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "overlevere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overlevere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overlevere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overlevere_v-tr_rel" ].

overliste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overliste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overliste_v-tr_rel" ].

overmanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overmanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overmanne_v-tr_rel" ].

overopphete_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overopphete" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overopphete_v-tr_rel" ].

overprøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "overprøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overprøve_v-tr_rel" ].

overraske_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "overraske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overraske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

overraske_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "overraske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overraske_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

overraske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overraske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overraske_v-tr_rel" ].

overrekke_ditr := v-ditr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "overrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overrekke_v-ditr_rel" ].

overrekke_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "overrekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overrekke_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overrekke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "overrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overrekke_v-tr_rel" ].

overrenne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overrenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overrenne_v-tr_rel" ].

overrisle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overrisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overrisle_v-tr_rel" ].

overrumple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overrumple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overrumple_v-tr_rel" ].

oversende_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "oversende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oversende_v-ditr_rel" ].

oversende_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "oversende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oversende_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oversende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oversende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oversende_v-tr_rel" ].

oversette_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "oversette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oversette_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

oversette_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "oversette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oversette_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oversette_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "oversette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_oversette_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

oversette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oversette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oversette_v-tr_rel" ].

oversitte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "oversitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oversitte_v-tr_rel" ].

overskride_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overskride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overskride_v-tr_rel" ].

overskue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overskue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overskue_v-tr_rel" ].

overskygge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overskygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overskygge_v-tr_rel" ].

overspille_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "overspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overspille_v-intr_rel" ].

overspille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overspille_v-tr_rel" ].

overstige_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overstige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overstige_v-tr_rel" ].

oversvømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "oversvømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_oversvømme_v-tr_rel" ].

overta_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION finstr-tt,
   STEM < "overta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overta_v-intrLghtScpr_rel" ].

overta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "overta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overta_v-tr_rel" ].

overtale_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "overtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtale_v-trObl_rel" ].

overtale_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "overtale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overtale_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

overtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtale_v-tr_rel" ].

overtegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtegne_v-tr_rel" ].

overtre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "overtre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtre_v-tr_rel" ].

overtreffe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overtreffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtreffe_v-tr_rel" ].

overtrekke_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "overtrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtrekke_v-ditr_rel" ].

overtrekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overtrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtrekke_v-tr_rel" ].

overtyde_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "overtyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtyde_v-trObl_rel" ].

overtyde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overtyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overtyde_v-tr_rel" ].

overutvikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overutvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overutvikle_v-tr_rel" ].

overveie_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-de,
   STEM < "overveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overveie_v-tr_rel" ].

overveie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "overveie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overveie_v-tr_rel" ].

overvelde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "overvelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvelde_v-tr_rel" ].

overvinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "overvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvinne_v-tr_rel" ].

overvintre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "overvintre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvintre_v-intr_rel" ].

overvurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overvurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvurdere_v-tr_rel" ].

overvåke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overvåke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvåke_v-tr_rel" ].

overvære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overvære_v-tr_rel" ].

overøse_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "overøse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_overøse_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

overøse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "overøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_overøse_v-tr_rel" ].

ovre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ovre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ovre_v-tr_rel" ].

pace_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pace" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pace_v-intr_rel" ].

pace_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pace" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pace_v-tr_rel" ].

padle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "padle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_padle_v-intr_rel" ].

padle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "padle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_padle_v-trPath_rel" ].

padle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "padle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_padle_v-tr_rel" ].

paffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "paffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paffe_v-intr_rel" ].

paffe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "paffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paffe_v-trScpr_rel" ].

paginere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "paginere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paginere_v-tr_rel" ].

pakke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "pakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakke_v-intrPrtcl_rel" ].

pakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakke_v-intr_rel" ].

pakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakke_v-trScpr_rel" ].

pakke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakke_v-tr_rel" ].

pakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakke_v-tr_rel" ].

pakte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

pakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pakte_v-tr_rel" ].

palatalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "palatalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_palatalisere_v-tr_rel" ].

pale_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "pale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pale_v-intr_rel" ].

palletere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "palletere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_palletere_v-tr_rel" ].

palme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "palme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_palme_v-tr_rel" ].

palpere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "palpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_palpere_v-tr_rel" ].

panegyrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "panegyrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_panegyrere_v-tr_rel" ].

panele_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "panele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_panele_v-tr_rel" ].

panere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "panere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_panere_v-tr_rel" ].

panorere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "panorere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_panorere_v-intr_rel" ].

pansre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pansre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pansre_v-tr_rel" ].

pante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pante_v-tr_rel" ].

pantsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "pantsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pantsette_v-tr_rel" ].

pantstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pantstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pantstille_v-tr_rel" ].

pappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pappe_v-tr_rel" ].

paradere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "paradere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paradere_v-intr_rel" ].

parafere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parafere_v-tr_rel" ].

parafinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parafinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parafinere_v-tr_rel" ].

parafrasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parafrasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parafrasere_v-tr_rel" ].

paragrafere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "paragrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paragrafere_v-tr_rel" ].

parallellforskyve_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "parallellforskyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parallellforskyve_v-tr_rel" ].

parallellføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parallellføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parallellføre_v-tr_rel" ].

parallellisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parallellisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parallellisere_v-tr_rel" ].

paralysere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "paralysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_paralysere_v-tr_rel" ].

parasittere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "parasittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parasittere_v-intr_rel" ].

pare_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "pare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pare_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

pare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pare_v-tr_rel" ].

pare_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pare_v-tr_rel" ].

parere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parere_v-tr_rel" ].

parfymere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "parfymere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parfymere_v-tr_rel" ].

parfymere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parfymere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parfymere_v-tr_rel" ].

#|
parkere_intr-obl-bak := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "parkere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_parkere_v_rel",
            LOCAL.KEY-SPEC bak-k ] ].

parkere_intr-obl-foran := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "parkere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_parkere_v_rel",
            LOCAL.KEY-SPEC foran-k ] ].

parkere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "parkere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_parkere_v_rel",
            LOCAL.KEY-SPEC i-k ] ].

parkere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "parkere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_parkere_v_rel",
            LOCAL.KEY-SPEC på-k ] ].

parkere_intr-obl-under := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "parkere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_parkere_v_rel",
            LOCAL.KEY-SPEC under-k ] ].
|#

parkere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "parkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parkere_v-intr_rel" ].

parkere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "parkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parkere_v-trScpr_rel" ].

parkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parkere_v-tr_rel" ].

parlamentere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "parlamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parlamentere_v-intrObl_rel" ].

parlamentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "parlamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parlamentere_v-intr_rel" ].

parlere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "parlere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parlere_v-intr_rel" ].

parlere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parlere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parlere_v-tr_rel" ].

parodiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parodiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parodiere_v-tr_rel" ].

parsellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "parsellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_parsellere_v-tr_rel" ].

partere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "partere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_partere_v-tr_rel" ].

partisipere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "partisipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_partisipere_v-intrObl_rel" ].

partisipere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "partisipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_partisipere_v-intr_rel" ].

pasifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pasifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pasifisere_v-tr_rel" ].

passe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "passe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passe_v-intrObl_rel" ].

passe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "passe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passe_v-intr_rel" ].

passe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "passe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passe_v-tr_rel" ].

passe_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "passe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_passe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

passe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "passe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passe_v-tr_rel" ].

passere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "passere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passere_v-tr_rel" ].

passiare_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "passiare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passiare_v-intrObl_rel" ].

passiare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "passiare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passiare_v-intr_rel" ].

passivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "passivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passivere_v-tr_rel" ].

passivisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "passivisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_passivisere_v-tr_rel" ].

pasteurisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pasteurisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pasteurisere_v-tr_rel" ].

patentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "patentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patentere_v-tr_rel" ].

patentsøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "patentsøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patentsøke_v-tr_rel" ].

patinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "patinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patinere_v-tr_rel" ].

patronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "patronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patronisere_v-tr_rel" ].

patruljere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "patruljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patruljere_v-intr_rel" ].

patruljere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "patruljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patruljere_v-tr_rel" ].

patte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "patte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_patte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

patte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "patte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_patte_v-intr_rel" ].

pausere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pausere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pausere_v-intr_rel" ].

peile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "peile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peile_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

peile_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "peile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peile_v-tr_rel" ].

peise_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "peise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peise_v-intr_rel" ].

peise_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "peise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peise_v-intrPrtcl_rel" ].

peise_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "peise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peise_v-tr_rel" ].

peke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "peke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_peke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

peke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "peke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_peke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

pelle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "pelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelle_v-trPath_rel" ].

pelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelle_v-tr_rel" ].

pelletere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pelletere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelletere_v-intr_rel" ].

pelletere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pelletere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelletere_v-tr_rel" ].

pelme_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "pelme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelme_v-tr_rel" ].

pelme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pelme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelme_v-tr_rel" ].

pelse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pelse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pelse_v-tr_rel" ].

pendle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "pendle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pendle_v-intr_rel" ].

penetrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "penetrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_penetrere_v-tr_rel" ].

penne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "penne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_penne_v-trScpr_rel" ].

penne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "penne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_penne_v-tr_rel" ].

pense_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "pense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pense_v-intr_rel" ].

pense_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pense_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

pensjonere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "pensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pensjonere_v-tr_rel" ].

pensjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pensjonere_v-tr_rel" ].

pensle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pensle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pensle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

pensle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pensle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pensle_v-tr_rel" ].

pepre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pepre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pepre_v-tr_rel" ].

perennere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "perennere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perennere_v-intr_rel" ].

perfeksjonere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "perfeksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perfeksjonere_v-tr_rel" ].

perfeksjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "perfeksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perfeksjonere_v-tr_rel" ].

perforere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "perforere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perforere_v-tr_rel" ].

pergamentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pergamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pergamentere_v-tr_rel" ].

perkolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "perkolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perkolere_v-tr_rel" ].

perkutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "perkutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perkutere_v-tr_rel" ].

perle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "perle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perle_v-intr_rel" ].

permittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "permittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_permittere_v-tr_rel" ].

permutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "permutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_permutere_v-tr_rel" ].

perse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "perse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perse_v-intr_rel" ].

perse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "perse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perse_v-tr_rel" ].

persiflere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "persiflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_persiflere_v-tr_rel" ].

persipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "persipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_persipere_v-tr_rel" ].

persistere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "persistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_persistere_v-intr_rel" ].

personifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "personifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_personifisere_v-tr_rel" ].

personliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "personliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_personliggjøre_v-tr_rel" ].

perspirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "perspirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perspirere_v-intr_rel" ].

perturbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "perturbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_perturbere_v-tr_rel" ].

pervertere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pervertere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pervertere_v-tr_rel" ].

pese_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "pese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pese_v-intr_rel" ].

piffe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "piffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piffe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pigge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "pigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigge_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pigge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigge_v-intr_rel" ].

pigge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigge_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pigge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pigge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "pigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigge_v-trPath_rel" ].

pigmentere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pigmentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pigmentere_v-intr_rel" ].

pikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pikere_v-tr_rel" ].

pikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pikke_v-intrObl_rel" ].

pikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pikke_v-trScpr_rel" ].

pikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pikke_v-tr_rel" ].

pile_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "pile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pile_v-intr_rel" ].

pilke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pilke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pilke_v-intr_rel" ].

pilke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pilke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pilke_v-tr_rel" ].

pille_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pille_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pille_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "pille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pille_v-intrPrtcl_rel" ].

pille_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pille_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

pille_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "pille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pille_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pille_v-tr_rel" ].

pilte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "pilte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pilte_v-intr_rel" ].

pimpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pimpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pimpe_v-intr_rel" ].

pimpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pimpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pimpe_v-tr_rel" ].

pine_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "pine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pine_v-trScpr_rel" ].

pine_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "pine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pine_v-trScprShft_rel" ].

pine_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "pine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pine_v-tr_rel" ].

pine_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pine_v-tr_rel" ].

pinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pinke_v-intr_rel" ].

pinne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pinne_v-trScpr_rel" ].

pinne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pinne_v-tr_rel" ].

pinse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pinse_v-tr_rel" ].

pipe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "pipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pipe_v-intr_rel" ].

pipe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "pipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pipe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

piple_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "piple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piple_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC frem-k ].

piple_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "piple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piple_v-intr_rel" ].

pippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pippe_v-intr_rel" ].

pippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pippe_v-trScpr_rel" ].

pirke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pirke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pirke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pirke_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "pirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pirke_v-trObl_rel" ].

pirre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pirre_v-tr_rel" ].

piruettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "piruettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piruettere_v-intr_rel" ].

piske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "piske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piske_v-trScpr_rel" ].

piske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "piske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piske_v-tr_rel" ].

pisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pisse_v-intr_rel" ].

pisse_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "pisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pisse_v-trObl_rel" ].

piste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "piste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_piste_v-intr_rel" ].

pistre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pistre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pistre_v-intr_rel" ].

pitle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "pitle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pitle_v-trPath_rel" ].

pjalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pjalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjalle_v-intr_rel" ].

pjatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pjatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjatte_v-intr_rel" ].

pjoltre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pjoltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjoltre_v-intr_rel" ].

pjuske_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjuske_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

pjuske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjuske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

pjutre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pjutre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pjutre_v-intr_rel" ].

plaffe_tr-telicpartcl := v-trPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "plaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plaffe_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

;plaffe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "plaffe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_plaffe_v-trScpr_rel" ].

plagiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "plagiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plagiere_v-tr_rel" ].

plane_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plane_v-intr_rel" ].

planere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "planere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_planere_v-tr_rel" ].

planke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "planke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_planke_v-tr_rel" ].

planlegge_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "planlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_planlegge_v-tr_rel" ].

planlegge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "planlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_planlegge_v-tr_rel" ].

planlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "planlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_planlegge_v-tr_rel" ].

plante_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "plante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plante_v-trScpr_rel" ].

plante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plante_v-tr_rel" ].

plapre_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plapre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plapre_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

plapre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plapre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plapre_v-intr_rel" ].

plaske_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plaske_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

plaske_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plaske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

plaske_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "plaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plaske_v-intrPrtcl_rel" ].

plaske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plaske_v-intr_rel" ].

plassere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "plassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plassere_v-trObl_rel" ].

plassere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "plassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plassere_v-trScpr_rel" ].

plastre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plastre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plastre_v-tr_rel" ].

platinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "platinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_platinere_v-tr_rel" ].

pledere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pledere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pledere_v-tr_rel" ].

pleie_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "pleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pleie_v-tr_rel" ].

pleie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pleie_v-tr_rel" ].

plette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plette_v-tr_rel" ].

plettere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "plettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plettere_v-intrObl_rel" ].

plettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "plettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plettere_v-tr_rel" ].

plikte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "plikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plikte_v-tr_rel" ].

plinge_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "plinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plinge_v-intrImpersObl_rel" ].

plinge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plinge_v-intr_rel" ].

plire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plire_v-intr_rel" ].

plissere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "plissere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plissere_v-tr_rel" ].

ploge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "ploge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ploge_v-intr_rel" ].

plombere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "plombere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plombere_v-tr_rel" ].

plotte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "plotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plotte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

pludre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pludre_v-intr_rel" ].

plugge_tr-arg12-secpred-til := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "plugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plugge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

plugge_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "plugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plugge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

plugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plugge_v-tr_rel" ].

plukke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plukke_v-intrObl_rel" ].

plukke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "plukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plukke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

plukke_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "plukke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plukke_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

plukke_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "plukke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plukke_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

plukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plukke_v-tr_rel" ].

plumpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "plumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plumpe_v-intr_rel" ].

plumpe_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plumpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plumpe_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

plundre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plundre_v-intrObl_rel" ].

plundre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plundre_v-intr_rel" ].

plundre_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "plundre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plundre_v-intrObl_rel" ].

plusse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plusse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plusse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

plyndre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plyndre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plyndre_v-intr_rel" ].

plyndre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plyndre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plyndre_v-tr_rel" ].

plystre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "plystre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_plystre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

plystre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "plystre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plystre_v-intr_rel" ].

plystre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "plystre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_plystre_v-tr_rel" ].

pløse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløse_v-intr_rel" ].

pløse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "pløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløse_v-tr_rel" ].

pløye_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-de,
   STEM < "pløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløye_v-intr_rel" ].

pløye_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "pløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløye_v-intrObl_rel" ].

pløye_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-de,
   STEM < "pløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløye_v-trPath_rel" ].

pløye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "pløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pløye_v-tr_rel" ].

pochere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pochere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pochere_v-tr_rel" ].

pode_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pode_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

pode_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pode" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pode_v-tr_rel" ].

poengtere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "poengtere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poengtere_v-tr_rel" ].

poengtere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "poengtere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poengtere_v-tr_rel" ].

poetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "poetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poetisere_v-tr_rel" ].

pokre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pokre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pokre_v-intrObl_rel" ].

pokulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pokulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pokulere_v-intr_rel" ].

polarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "polarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polarisere_v-tr_rel" ].

pole_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "pole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pole_v-tr_rel" ].

polemisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "polemisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polemisere_v-intrObl_rel" ].

polemisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "polemisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polemisere_v-intr_rel" ].

polere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "polere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polere_v-trScpr_rel" ].

polere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "polere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polere_v-tr_rel" ].

politisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "politisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_politisere_v-tr_rel" ].

pollinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pollinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pollinere_v-tr_rel" ].

polstre_tr-arg12-secpred-til := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "polstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polstre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

polstre_tr-arg12-secpred-inn := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "polstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polstre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

polstre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "polstre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polstre_v-tr_rel" ].

polymerisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "polymerisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polymerisere_v-intr_rel" ].

polymerisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "polymerisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_polymerisere_v-tr_rel" ].

pomadisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pomadisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pomadisere_v-tr_rel" ].

poncere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "poncere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poncere_v-tr_rel" ].

ponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ponere_v-tr_rel" ].

poppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "poppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poppe_v-intr_rel" ].

poppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "poppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poppe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

poppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "poppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poppe_v-tr_rel" ].

popularisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "popularisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_popularisere_v-tr_rel" ].

porsjonere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "porsjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_porsjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

porsjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "porsjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_porsjonere_v-tr_rel" ].

portrettere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "portrettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_portrettere_v-tr_rel" ].

;pose_iv := v-intr &
; [ INFLECTION nonfstr,
;   STEM < "pose" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_pose_v-intr_rel" ].

;pose_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr,
;   STEM < "pose" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_pose_v-tr_rel" ].

posere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "posere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_posere_v-intr_rel" ].

posisjonere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "posisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_posisjonere_v-tr_rel" ].

posisjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "posisjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_posisjonere_v-tr_rel" ].

posjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "posjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_posjere_v-tr_rel" ].

postdatere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "postdatere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_postdatere_v-tr_rel" ].

poste_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "poste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poste_v-ditr_rel" ].

poste_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "poste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_poste_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

poste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "poste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poste_v-tr_rel" ].

postere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "postere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_postere_v-tr_rel" ].

postlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "postlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_postlegge_v-tr_rel" ].

poststemple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "poststemple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_poststemple_v-tr_rel" ].

postulere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "postulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_postulere_v-tr_rel" ].

postulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "postulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_postulere_v-tr_rel" ].

;pote_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "pote" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_pote_v-trScpr_rel" ].

;pote_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "pote" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_pote_v-tr_rel" ].

potensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "potensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_potensere_v-tr_rel" ].

potte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "potte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_potte_v-intrObl_rel" ].

potte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "potte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_potte_v-tr_rel" ].

praie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "praie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_praie_v-tr_rel" ].

prakke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prakke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

prakke_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "prakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prakke_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

praktisere_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "praktisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_praktisere_v-intrLghtScpr_rel" ].

praktisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "praktisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_praktisere_v-tr_rel" ].

prale_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "prale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prale_v-intrObl_rel" ].

prale_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "prale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prale_v-intr_rel" ].

prange_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prange_v-intrObl_rel" ].

prange_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prange_v-intr_rel" ].

;prange_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "prange" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_prange_v-trScpr_rel" ].

prange_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "prange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prange_v-trObl_rel" ].

prasle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prasle_v-intr_rel" ].

prate_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prate_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

prate_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prate_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

prate_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prate_v-intr_rel" ].

prate_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prate_v-tr_rel" ].

predestinere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "predestinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predestinere_v-trObl_rel" ].

predestinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "predestinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predestinere_v-tr_rel" ].

predeterminere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "predeterminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predeterminere_v-trObl_rel" ].

predeterminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "predeterminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predeterminere_v-tr_rel" ].

predike_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "predike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predike_v-tr_rel" ].

predike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "predike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predike_v-tr_rel" ].

predikere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "predikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predikere_v-tr_rel" ].

predikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "predikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predikere_v-tr_rel" ].

predisponere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "predisponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predisponere_v-trObl_rel" ].

predisponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "predisponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_predisponere_v-tr_rel" ].

prefabrikkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prefabrikkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prefabrikkere_v-tr_rel" ].

preferere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "preferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preferere_v-tr_rel" ].

prege_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prege_v-tr_rel" ].

prekavere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "prekavere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prekavere_v-tr_rel" ].

prekavere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prekavere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prekavere_v-tr_rel" ].

preke_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "preke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_preke_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

preke_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "preke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_preke_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

preke_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "preke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preke_v-intr_rel" ].

preke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "preke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preke_v-tr_rel" ].

prelle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "prelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prelle_v-intrPrtcl_rel" ].

preludere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "preludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preludere_v-intr_rel" ].

preludere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "preludere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preludere_v-tr_rel" ].

premiere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "premiere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_premiere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

premiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "premiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_premiere_v-tr_rel" ].

prente_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "prente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prente_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

prente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prente_v-tr_rel" ].

prenumerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prenumerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prenumerere_v-tr_rel" ].

preparere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "preparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preparere_v-tr_rel" ].

preparere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "preparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preparere_v-trObl_rel" ].

preparere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "preparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preparere_v-tr_rel" ].

preppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "preppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preppe_v-tr_rel" ].

presentere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presentere_v-ditr_rel" ].

presentere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_presentere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

presentere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presentere_v-tr_rel" ].

presentere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presentere_v-trScpr_rel" ].

presentere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presentere_v-trScpr_rel" ].

presentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "presentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presentere_v-tr_rel" ].

preservere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "preservere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preservere_v-tr_rel" ].

presidere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "presidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presidere_v-intrObl_rel" ].

presidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "presidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presidere_v-tr_rel" ].

presisere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "presisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presisere_v-intrComp_rel" ].

presisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "presisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presisere_v-tr_rel" ].

presisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "presisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presisere_v-tr_rel" ].

preskribere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "preskribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_preskribere_v-tr_rel" ].

presse_intr-obl-gjennom := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_presse_v-intrObl_rel",
            LOCAL.KEY-SPEC gjennom-k ] ].

presse_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presse_v-trObl_rel" ].

presse_tr-obl-gjennom := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_presse_v-trObl_rel",
            LOCAL.KEY-SPEC gjennom-k ] ].

presse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presse_v-tr_rel" ].

presse_tr-refl-obl-gjennom := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_presse_v-trObl_rel",
            LOCAL.KEY-SPEC gjennom-k ] ].

presse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "presse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presse_v-tr_rel" ].

prestere_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "prestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prestere_v-tr_rel" ].

prestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prestere_v-tr_rel" ].

prestevie_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "prestevie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prestevie_v-tr_rel" ].

presumere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "presumere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presumere_v-tr_rel" ].

presumere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "presumere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presumere_v-tr_rel" ].

presupponere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "presupponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presupponere_v-tr_rel" ].

presupponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "presupponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_presupponere_v-tr_rel" ].

pretendere_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "pretendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pretendere_v-tr_rel" ].

pretendere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pretendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pretendere_v-tr_rel" ].

prette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prette_v-tr_rel" ].

prikke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "prikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikke_v-intrImpersObl_rel" ].

prikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikke_v-intrObl_rel" ].

prikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "prikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

prikke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "prikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikke_v-trObl_rel" ].

prikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikke_v-tr_rel" ].

prikle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "prikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikle_v-intrImpersObl_rel" ].

prikle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "prikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikle_v-trScpr_rel" ].

prikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prikle_v-tr_rel" ].

prille_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prille_v-intrObl_rel" ].

prime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prime_v-intr_rel" ].

primsigne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "primsigne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_primsigne_v-tr_rel" ].

prioritere_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "prioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prioritere_v-tr_rel" ].

prioritere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "prioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prioritere_v-trScpr_rel" ].

prioritere_tr-obl-foran := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "prioritere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prioritere_v-trObl_rel",
            LOCAL.KEY-SPEC foran-k ] ].

prioritere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prioritere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prioritere_v-tr_rel" ].

prisbelønne_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "prisbelønne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prisbelønne_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

prisbelønne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prisbelønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prisbelønne_v-tr_rel" ].

prise_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "prise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prise_v-trPrtcl_rel" ].

prise_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "prise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prise_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

prise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prise_v-tr_rel" ].

prisgi_tr-obl-for := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "prisgi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prisgi_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

prisgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "prisgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prisgi_v-tr_rel" ].

privatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "privatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_privatisere_v-tr_rel" ].

privilegere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "privilegere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_privilegere_v-tr_rel" ].

probere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "probere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_probere_v-tr_rel" ].

problematisere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "problematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_problematisere_v-intrComp_rel" ].

problematisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "problematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_problematisere_v-tr_rel" ].

problematisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "problematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_problematisere_v-tr_rel" ].

produsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "produsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_produsere_v-tr_rel" ].

proe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "proe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proe_v-intr_rel" ].

profanere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "profanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profanere_v-tr_rel" ].

profesjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "profesjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profesjonalisere_v-tr_rel" ].

profetere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "profetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profetere_v-tr_rel" ].

profetere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "profetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profetere_v-tr_rel" ].

profilere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "profilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profilere_v-tr_rel" ].

profilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "profilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profilere_v-tr_rel" ].

profittere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "profittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_profittere_v-intrObl_rel" ].

prognosere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "prognosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prognosere_v-intr_rel" ].

prognosere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prognosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prognosere_v-tr_rel" ].

prognostisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "prognostisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prognostisere_v-intr_rel" ].

prognostisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prognostisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prognostisere_v-tr_rel" ].

programfeste_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "programfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programfeste_v-tr_rel" ].

programfeste_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-et,
   STEM < "programfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programfeste_v-intrComp_rel" ].

programfeste_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "programfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programfeste_v-tr_rel" ].

programfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "programfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programfeste_v-tr_rel" ].

programmere_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "programmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programmere_v-trObl_rel" ].

programmere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "programmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_programmere_v-tr_rel" ].

projisere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "projisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_projisere_v-trScpr_rel" ].

projisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "projisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_projisere_v-tr_rel" ].

proklamere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "proklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proklamere_v-trScpr_rel" ].

proklamere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "proklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proklamere_v-tr_rel" ].

proklamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proklamere_v-tr_rel" ].

proletarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proletarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proletarisere_v-tr_rel" ].

prolongere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prolongere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prolongere_v-tr_rel" ].

promenere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "promenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_promenere_v-intr_rel" ].

promenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "promenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_promenere_v-tr_rel" ].

promovere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "promovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_promovere_v-tr_rel" ].

prompe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prompe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prompe_v-intr_rel" ].

promulgere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "promulgere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_promulgere_v-tr_rel" ].

pronere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pronere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pronere_v-tr_rel" ].

pronominalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pronominalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pronominalisere_v-tr_rel" ].

propagandere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "propagandere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_propagandere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

propagandere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "propagandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_propagandere_v-intr_rel" ].

propagere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "propagere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_propagere_v-tr_rel" ].

proponere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "proponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proponere_v-tr_rel" ].

proponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proponere_v-tr_rel" ].

proporsjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proporsjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proporsjonere_v-tr_rel" ].

proppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "proppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proppe_v-intrObl_rel" ].

proppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "proppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proppe_v-trScpr_rel" ].

proppe_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "proppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proppe_v-trObl_rel" ].

proppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "proppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proppe_v-tr_rel" ].

prosedere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "prosedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosedere_v-intrObl_rel" ].

prosedere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "prosedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosedere_v-trObl_rel" ].

prosedere_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "prosedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosedere_v-trScprShft_rel" ].

prosedere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prosedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosedere_v-tr_rel" ].

prosentlønne_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "prosentlønne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prosentlønne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

prosentlønne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prosentlønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosentlønne_v-tr_rel" ].

prosessere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "prosessere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosessere_v-intr_rel" ].

prosessere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prosessere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosessere_v-tr_rel" ].

prosjektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prosjektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prosjektere_v-tr_rel" ].

proskribere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proskribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proskribere_v-tr_rel" ].

prospektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prospektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prospektere_v-tr_rel" ].

prostituere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "prostituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prostituere_v-tr_rel" ].

prostituere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prostituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prostituere_v-tr_rel" ].

protesjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "protesjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_protesjere_v-tr_rel" ].

protestere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "protestere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_protestere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

protestere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "protestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_protestere_v-intr_rel" ].

protokollere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "protokollere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_protokollere_v-tr_rel" ].

protte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "protte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_protte_v-intr_rel" ].

prove_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "prove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prove_v-tr_rel" ].

prove_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "prove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prove_v-tr_rel" ].

proviantere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "proviantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proviantere_v-intr_rel" ].

proviantere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "proviantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_proviantere_v-tr_rel" ].

providere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "providere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_providere_v-trObl_rel" ].

providere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "providere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_providere_v-tr_rel" ].

provosere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "provosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_provosere_v-trScpr_rel" ].

provosere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "provosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_provosere_v-tr_rel" ].

prunke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prunke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prunke_v-intrObl_rel" ].

pruppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pruppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pruppe_v-intr_rel" ].

pruste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pruste_v-intr_rel" ].

prute_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "prute" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prute_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

prute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prute_v-intr_rel" ].

prute_tr-arg12-secpred-ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "prute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prute_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

prute_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "prute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prute_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pryde_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pryde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pryde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

pryde_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pryde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pryde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

pryde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pryde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pryde_v-tr_rel" ].

pryle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pryle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pryle_v-tr_rel" ].

prøve_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøve_v-trObl_rel" ].

prøve_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøve_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC frem-k ].

prøve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøve_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

prøve_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøve_v-trObl_rel" ].

prøve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøve_v-tr_rel" ].

prøve_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prøve_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

prøve_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "prøve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_prøve_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

prøvebore_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prøvebore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøvebore_v-intr_rel" ].

prøvefilme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "prøvefilme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøvefilme_v-intr_rel" ].

prøvekjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "prøvekjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøvekjøre_v-tr_rel" ].

prøveskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "prøveskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_prøveskyte_v-tr_rel" ].

psyke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "psyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_psyke_v-trPrtcl_rel" ].

psyke_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "psyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_psyke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

psyke_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "psyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_psyke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

psyke_tr-arg12-secpred-ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "psyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_psyke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

psykoanalysere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "psykoanalysere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_psykoanalysere_v-tr_rel" ].

ptroe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ptroe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ptroe_v-intr_rel" ].

ptrotte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ptrotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ptrotte_v-intr_rel" ].

publisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "publisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_publisere_v-tr_rel" ].

publisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "publisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_publisere_v-tr_rel" ].

pudre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pudre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pudre_v-tr_rel" ].

pudre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pudre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pudre_v-tr_rel" ].

puffe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "puffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puffe_v-intrObl_rel" ].

puffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "puffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puffe_v-intr_rel" ].

puffe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "puffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puffe_v-trScpr_rel" ].

puffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "puffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puffe_v-tr_rel" ].

puge_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "puge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puge_v-intr_rel" ].

puge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "puge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puge_v-tr_rel" ].

pugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pugge_v-intr_rel" ].

pugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pugge_v-tr_rel" ].

pukke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pukke_v-intrObl_rel" ].

pukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pukke_v-tr_rel" ].

puldre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "puldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puldre_v-intrPrtcl_rel" ].

puldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "puldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puldre_v-intr_rel" ].

pule_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pule_v-intr_rel" ].

pulse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "pulse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pulse_v-intr_rel" ].

pulse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pulse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pulse_v-intr_rel" ].

pulsere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pulsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pulsere_v-intr_rel" ].

pulverisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pulverisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pulverisere_v-tr_rel" ].

pumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pumpe_v-intr_rel" ].

pumpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pumpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pumpe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "pumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pumpe_v-trObl_rel" ].

pumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pumpe_v-tr_rel" ].

pumpebremse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pumpebremse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pumpebremse_v-intr_rel" ].

punche_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "punche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punche_v-intr_rel" ].

punche_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "punche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punche_v-tr_rel" ].

punge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "punge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punge_v-intrObl_rel" ].

punge_intr-secpred := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "punge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punge_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

punktere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "punktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punktere_v-intr_rel" ].

punktere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "punktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_punktere_v-tr_rel" ].

purke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "purke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_purke_v-intr_rel" ].

purle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "purle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_purle_v-intr_rel" ].

purre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "purre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_purre_v-intr_rel" ].

pushe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pushe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pushe_v-tr_rel" ].

pusle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pusle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pusle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

pusle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pusle_v-intr_rel" ].

pusse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pusse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pusse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pusse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "pusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pusse_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

pusse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pusse_v-trScpr_rel" ].

pusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pusse_v-tr_rel" ].

puste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "puste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puste_v-intrPrtcl_rel" ].

puste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "puste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_puste_v-intr_rel" ].

putle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "putle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_putle_v-intrObl_rel" ].

putle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "putle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_putle_v-intr_rel" ].

putre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "putre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_putre_v-intr_rel" ].

putte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "putte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_putte_v-trScpr_rel" ].

pynte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pynte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pynte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

pynte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pynte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pynte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pynte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pynte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

pynte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "pynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pynte_v-tr_rel" ].

pynte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pynte_v-tr_rel" ].

påakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påakte_v-tr_rel" ].

påanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påanke_v-tr_rel" ].

påberope_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "påberope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påberope_v-ditr_rel" ].

påby_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-strong,
   STEM < "påby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påby_v-ditr_rel" ].

påby_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "påby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påby_v-tr_rel" ].

påby_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "påby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påby_v-tr_rel" ].

pådra_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "pådra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pådra_v-ditr_rel" ].

pådømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pådømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pådømme_v-tr_rel" ].

påføre_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "påføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påføre_v-ditr_rel" ].

pågripe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "pågripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pågripe_v-tr_rel" ].

pågå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "pågå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pågå_v-intr_rel" ].

påhvile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påhvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påhvile_v-tr_rel" ].

påkalle_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "påkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påkalle_v-ditr_rel" ].

påkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påkalle_v-tr_rel" ].

påkjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påkjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påkjære_v-tr_rel" ].

påkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påkjøre_v-tr_rel" ].

påklage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "påklage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påklage_v-tr_rel" ].

pålegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "pålegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pålegge_v-ditr_rel" ].

pålegge_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-strong,
   STEM < "pålegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pålegge_v-ditr_rel" ].

påligge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "påligge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påligge_v-tr_rel" ].

påløpe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "påløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påløpe_v-intr_rel" ].

påpeke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "påpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påpeke_v-tr_rel" ].

påpeke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påpeke_v-tr_rel" ].

påregne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påregne_v-tr_rel" ].

pårekne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pårekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pårekne_v-tr_rel" ].

påse_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "påse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påse_v-tr_rel" ].

påskjønne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "påskjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påskjønne_v-trObl_rel" ].

påskjønne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påskjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påskjønne_v-tr_rel" ].

påskynde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påskynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påskynde_v-tr_rel" ].

påstå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "påstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påstå_v-tr_rel" ].

påstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "påstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påstå_v-tr_rel" ].

påta_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "påta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påta_v-ditr_rel" ].

påtale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtale_v-tr_rel" ].

påtegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påtegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtegne_v-tr_rel" ].

påtenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påtenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtenne_v-tr_rel" ].

påtreffe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "påtreffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtreffe_v-tr_rel" ].

påtvinge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "påtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtvinge_v-ditr_rel" ].

påtvinge_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-strong,
   STEM < "påtvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påtvinge_v-ditr_rel" ].

påvirke_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "påvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påvirke_v-trObl_rel" ].

påvirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "påvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påvirke_v-tr_rel" ].

påvise_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "påvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påvise_v-intrComp_rel" ].

påvise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "påvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påvise_v-tr_rel" ].

påvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "påvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_påvise_v-tr_rel" ].

pæle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pæle_v-intr_rel" ].

pæle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "pæle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pæle_v-tr_rel" ].

pælme_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pælme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pælme_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pælme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "pælme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pælme_v-trScpr_rel" ].

pælme_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "pælme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pælme_v-tr_rel" ].

pælme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "pælme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pælme_v-tr_rel" ].

pøble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "pøble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pøble_v-intr_rel" ].

pønse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pønse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pønse_v-intrObl_rel" ].

pønse_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "pønse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pønse_v-intrObl_rel" ].

pønske_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "pønske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_pønske_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

pønske_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "pønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pønske_v-intrObl_rel" ].

pøse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "pøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pøse_v-intrPrtcl_rel" ].

pøse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "pøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pøse_v-intr_rel" ].

pøse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "pøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_pøse_v-trScpr_rel" ].

rabattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rabattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rabattere_v-tr_rel" ].

rable_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "rable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rable_v-intrImpersObl_rel" ].

rable_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rable_v-intr_rel" ].

rable_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rable_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

rable_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rable_v-tr_rel" ].

radbrekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "radbrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_radbrekke_v-tr_rel" ].

#|
rade_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rade_v-trScpr_rel" ].

rade_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "rade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rade_v-trPath_rel" ].

rade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rade_v-tr_rel" ].
|#

radere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "radere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_radere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

radere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "radere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_radere_v-tr_rel" ].

radiere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "radiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_radiere_v-intr_rel" ].

radikalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "radikalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_radikalisere_v-tr_rel" ].

raffinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "raffinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raffinere_v-tr_rel" ].

rafse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "rafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rafse_v-trScprShft_rel" ].

rafte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rafte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rafte_v-intr_rel" ].

rafte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rafte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rafte_v-tr_rel" ].

rage_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rage_v-intr_rel" ].

rage_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rage" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rage_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

raide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "raide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raide_v-tr_rel" ].

rake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rake_v-intr_rel" ].

rake_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rake_v-tr_rel" ].

rake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rake_v-tr_rel" ].

rakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rakke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

rakle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rakle_v-intr_rel" ].

rakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rakne_v-intr_rel" ].

raljere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "raljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raljere_v-intrObl_rel" ].

raljere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "raljere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raljere_v-intr_rel" ].

ralle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ralle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ralle_v-intr_rel" ].

ramle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "ramle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramle_v-intr_rel" ].

ramme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

ramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramme_v-tr_rel" ].

ramponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ramponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramponere_v-tr_rel" ].

ramsalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ramsalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramsalte_v-tr_rel" ].

ramse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ramse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ramse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rana_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr,
   STEM < "rana" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rana_v-trScprShft_rel" ].

rana_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "rana" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rana_v-tr_rel" ].

rande_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rande_v-tr_rel" ].

randsy_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "randsy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_randsy_v-tr_rel" ].

rane_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "rane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rane_v-trScprShft_rel" ].

rane_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rane_v-tr_rel" ].

range_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "range" >,
   SYNSEM.LKEYS.KEYREL.PRED "_range_v-trScprShft_rel" ].

range_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "range" >,
   SYNSEM.LKEYS.KEYREL.PRED "_range_v-tr_rel" ].

rangere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rangere_v-intrObl_rel" ].

rangere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "rangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rangere_v-trObl_rel" ].

rangere_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr,
   STEM < "rangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rangere_v-trAdv_rel" ].

rangere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rangere_v-tr_rel" ].

rangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rangle_v-intr_rel" ].

ranke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ranke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ranke_v-tr_rel" ].

ranke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ranke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ranke_v-tr_rel" ].

ransake_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ransake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ransake_v-tr_rel" ].

rape_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rape_v-intr_rel" ].

rappe_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rappe_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

rappe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rappe_v-intr_rel" ].

rappe_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rappe_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

rappe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rappe_v-trScprShft_rel" ].

rappe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rappe_v-tr_rel" ].

rappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rappe_v-tr_rel" ].

rappellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rappellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rappellere_v-tr_rel" ].

rapportere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rapportere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rapportere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

rapportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rapportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rapportere_v-tr_rel" ].

rapse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rapse_v-intr_rel" ].

rapse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rapse_v-tr_rel" ].

rase_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rase" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rase_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

rase_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "rase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rase_v-intrPrtcl_rel" ].

rase_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rase_v-intr_rel" ].

rasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasere_v-tr_rel" ].

rasjonalisere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonalisere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

rasjonalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonalisere_v-tr_rel" ].

rasjonere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonere_v-intrObl_rel" ].

rasjonere_tr-arg12-secpred-bort := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

rasjonere_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

rasjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasjonere_v-tr_rel" ].

raske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "raske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raske_v-trScpr_rel" ].

raske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "raske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raske_v-tr_rel" ].

rasle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "rasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasle_v-intrImpersObl_rel" ].

rasle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rasle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rasle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

rasle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rasle_v-intr_rel" ].

raspe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "raspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raspe_v-intrObl_rel" ].

raspe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "raspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raspe_v-trScprShft_rel" ].

raspe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "raspe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raspe_v-tr_rel" ].

ratifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ratifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ratifisere_v-tr_rel" ].

ratle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "ratle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ratle_v-intrImpersObl_rel" ].

ratle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ratle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ratle_v-intrObl_rel" ].

ratle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ratle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ratle_v-intr_rel" ].

ratte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ratte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ratte_v-intr_rel" ].

rauke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "rauke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rauke_v-tr_rel" ].

rause_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "rause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rause_v-intrPrtcl_rel" ].

rause_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "rause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rause_v-intr_rel" ].

raute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "raute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_raute_v-intr_rel" ].

rave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rave_v-intr_rel" ].

re_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "re" >,
   SYNSEM.LKEYS.KEYREL.PRED "_re_v-intrObl_rel" ].

re_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "re" >,
   SYNSEM.LKEYS.KEYREL.PRED "_re_v-tr_rel" ].

reagere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "reagere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reagere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

reagere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "reagere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reagere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

reagere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "reagere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reagere_v-intr_rel" ].

reaktivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reaktivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reaktivere_v-tr_rel" ].

realisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "realisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_realisere_v-tr_rel" ].

realisere_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "realisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_realisere_v-tr_rel" ].

realitetsbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "realitetsbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_realitetsbehandle_v-tr_rel" ].

reassurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reassurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reassurere_v-tr_rel" ].

rebellere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rebellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rebellere_v-intr_rel" ].

recensere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "recensere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_recensere_v-tr_rel" ].

redde_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "redde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_redde_v-trObl_rel" ].

redde_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "redde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_redde_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

rede_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "rede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rede_v-intrObl_rel" ].

rede_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "rede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rede_v-intr_rel" ].

redegjøre_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "redegjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_redegjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

redigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "redigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_redigere_v-tr_rel" ].

redoble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "redoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_redoble_v-intr_rel" ].

reduplisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reduplisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reduplisere_v-tr_rel" ].

redusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "redusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_redusere_v-tr_rel" ].

referere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "referere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_referere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

referere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "referere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_referere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

referere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "referere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_referere_v-trObl_rel" ].

referere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "referere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_referere_v-tr_rel" ].

reflektere_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "reflektere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reflektere_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

reflektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reflektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reflektere_v-tr_rel" ].

reformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reformere_v-tr_rel" ].

refse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "refse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_refse_v-trObl_rel" ].

refse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "refse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_refse_v-tr_rel" ].

refundere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "refundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_refundere_v-tr_rel" ].

refusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "refusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_refusere_v-tr_rel" ].

regalere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "regalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regalere_v-intrObl_rel" ].

regalere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "regalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regalere_v-trObl_rel" ].

regalere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "regalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regalere_v-trObl_rel" ].

regalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regalere_v-tr_rel" ].

regenerere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "regenerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regenerere_v-intr_rel" ].

regenerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regenerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regenerere_v-tr_rel" ].

regissere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regissere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regissere_v-tr_rel" ].

registrere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "registrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_registrere_v-intrComp_rel" ].

registrere_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "registrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_registrere_v-trScpr_rel" ].

registrere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "registrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_registrere_v-trScpr_rel" ].

registrere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "registrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_registrere_v-tr_rel" ].

registrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "registrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_registrere_v-tr_rel" ].

regjere_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "regjere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_regjere_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

regjere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "regjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regjere_v-intr_rel" ].

regjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regjere_v-tr_rel" ].

reglementere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reglementere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reglementere_v-tr_rel" ].

regne_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "regne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regne_v-intr_rel" ].

regne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "regne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regne_v-intrObl_rel" ].

regne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "regne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regne_v-trScpr_rel" ].

regne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "regne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regne_v-tr_rel" ].

regularisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regularisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regularisere_v-tr_rel" ].

regulere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "regulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regulere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

regulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regulere_v-tr_rel" ].

regummiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "regummiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_regummiere_v-tr_rel" ].

rehabilitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rehabilitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rehabilitere_v-tr_rel" ].

reie_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "reie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reie_v-intrObl_rel" ].

reie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "reie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reie_v-tr_rel" ].

reike_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "reike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reike_v-intr_rel" ].

reindyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "reindyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reindyrke_v-tr_rel" ].

reingjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "reingjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reingjøre_v-tr_rel" ].

reinske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "reinske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

reinske_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "reinske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinske_v-trObl_rel" ].

reinske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "reinske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinske_v-tr_rel" ].

reinskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "reinskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinskrive_v-tr_rel" ].

reinvaske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "reinvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinvaske_v-tr_rel" ].

reinvaske_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "reinvaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reinvaske_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

reinvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "reinvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinvaske_v-tr_rel" ].

reinvestere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "reinvestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinvestere_v-intr_rel" ].

reinvestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reinvestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reinvestere_v-tr_rel" ].

reipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "reipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reipe_v-tr_rel" ].

reise_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-intr_rel" ].

reise_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-intrPrtcl_rel" ].

reise_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

reise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

reise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-tr_rel" ].

reise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reise_v-tr_rel" ].

reive_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "reive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reive_v-tr_rel" ].

rejisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rejisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rejisere_v-tr_rel" ].

rekapitulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekapitulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekapitulere_v-tr_rel" ].

reke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "reke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reke_v-intr_rel" ].

reke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "reke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reke_v-intrPrtcl_rel" ].

rekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "rekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekke_v-intrObl_rel" ].

rekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "rekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekke_v-intrPrtcl_rel" ].

rekke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "rekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekke_v-intr_rel" ].

rekke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "rekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekke_v-tr_rel" ].

rekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekke_v-tr_rel" ].

reklamere_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "reklamere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reklamere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

reklamere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "reklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reklamere_v-intr_rel" ].

reklamere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reklamere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reklamere_v-tr_rel" ].

rekne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekne_v-intrObl_rel" ].

rekne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekne_v-intr_rel" ].

rekne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "rekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekne_v-trScpr_rel" ].

rekognosere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rekognosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekognosere_v-intr_rel" ].

rekognosere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekognosere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekognosere_v-tr_rel" ].

rekommandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekommandere_v-tr_rel" ].

rekonstruere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekonstruere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekonstruere_v-tr_rel" ].

rekordforbedre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rekordforbedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekordforbedre_v-tr_rel" ].

rekordforbedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rekordforbedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekordforbedre_v-tr_rel" ].

rekreere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rekreere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekreere_v-intr_rel" ].

rekreere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "rekreere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekreere_v-tr_rel" ].

rekruttere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "rekruttere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rekruttere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

rekruttere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekruttere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekruttere_v-tr_rel" ].

rektifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rektifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rektifisere_v-tr_rel" ].

rekvirere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "rekvirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekvirere_v-trObl_rel" ].

rekvirere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rekvirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rekvirere_v-tr_rel" ].

relatere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "relatere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_relatere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

relatere_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "relatere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_relatere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

relativisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "relativisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_relativisere_v-tr_rel" ].

relegere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "relegere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_relegere_v-tr_rel" ].

relokere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "relokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_relokere_v-trScpr_rel" ].

relokere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "relokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_relokere_v-tr_rel" ].

rembursere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rembursere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rembursere_v-tr_rel" ].

reminisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "reminisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reminisere_v-intr_rel" ].

reminisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reminisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reminisere_v-tr_rel" ].

remisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "remisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remisere_v-intr_rel" ].

remittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "remittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remittere_v-tr_rel" ].

remje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "remje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remje_v-intr_rel" ].

remontere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "remontere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remontere_v-tr_rel" ].

remplassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "remplassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remplassere_v-tr_rel" ].

remse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "remse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_remse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rendyrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rendyrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rendyrke_v-tr_rel" ].

rengjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rengjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rengjøre_v-tr_rel" ].

renne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "renne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renne_v-intrPrtcl_rel" ].

renne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "renne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renne_v-trScpr_rel" ].

renne_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "renne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renne_v-trScprShft_rel" ].

renonsere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "renonsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renonsere_v-intrObl_rel" ].

renovere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "renovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renovere_v-tr_rel" ].

rense_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rense_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rense_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rense_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

rense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rense_v-tr_rel" ].

renske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "renske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

renske_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "renske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_renske_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

renske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "renske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renske_v-tr_rel" ].

renskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "renskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renskrive_v-tr_rel" ].

renvaske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "renvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renvaske_v-tr_rel" ].

renvaske_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "renvaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_renvaske_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

renvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "renvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_renvaske_v-tr_rel" ].

reorganisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reorganisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reorganisere_v-tr_rel" ].

reparere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reparere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reparere_v-tr_rel" ].

repatriere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "repatriere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_repatriere_v-tr_rel" ].

repetere_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "repetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_repetere_v-intrComp_rel" ].

repetere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "repetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_repetere_v-tr_rel" ].

repetere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "repetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_repetere_v-tr_rel" ].

replisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "replisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_replisere_v-intr_rel" ].

replisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "replisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_replisere_v-tr_rel" ].

representere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "representere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_representere_v-tr_rel" ].

reprodusere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "reprodusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reprodusere_v-tr_rel" ].

reprodusere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reprodusere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reprodusere_v-tr_rel" ].

reservere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "reservere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_reservere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

reservere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "reservere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reservere_v-tr_rel" ].

reservere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "reservere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reservere_v-trObl_rel" ].

reservere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reservere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reservere_v-tr_rel" ].

;residere_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "residere" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_residere_v-trScpr_rel" ].

residivere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "residivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_residivere_v-intr_rel" ].

resignere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "resignere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resignere_v-intrObl_rel" ].

resignere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "resignere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resignere_v-intr_rel" ].

resipere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resipere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resipere_v-tr_rel" ].

resirkulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resirkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resirkulere_v-tr_rel" ].

resistere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "resistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resistere_v-intr_rel" ].

resistere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resistere_v-tr_rel" ].

resitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resitere_v-tr_rel" ].

resolvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resolvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resolvere_v-tr_rel" ].

resonnere_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "resonnere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_resonnere_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

resonnere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "resonnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resonnere_v-intr_rel" ].

resonnere_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "resonnere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_resonnere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

resorbere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resorbere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resorbere_v-tr_rel" ].

resosialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resosialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resosialisere_v-tr_rel" ].

respektere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "respektere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_respektere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

respektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "respektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_respektere_v-tr_rel" ].

respirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "respirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_respirere_v-intr_rel" ].

respondere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "respondere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_respondere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

respondere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "respondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_respondere_v-intr_rel" ].

respondere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "respondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_respondere_v-tr_rel" ].

restaurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "restaurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_restaurere_v-tr_rel" ].

restere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "restere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_restere_v-intr_rel" ].

restituere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "restituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_restituere_v-tr_rel" ].

restituere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "restituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_restituere_v-tr_rel" ].

resultere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "resultere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_resultere_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

resymere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "resymere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_resymere_v-tr_rel" ].

retardere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "retardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retardere_v-intr_rel" ].

retardere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "retardere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retardere_v-tr_rel" ].

retinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "retinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retinere_v-tr_rel" ].

retirere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "retirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retirere_v-intrObl_rel" ].

retirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "retirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retirere_v-intr_rel" ].

rette_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rette_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

rette_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rette_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

rette_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rette_v-tr_rel" ].

rette_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rette_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

rette_tr-refl-obl-etter := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rette_v-trObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

rette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rette_v-tr_rel" ].

rettferdiggjøre_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-strong,
   STEM < "rettferdiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettferdiggjøre_v-intrComp_rel" ].

rettferdiggjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "rettferdiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettferdiggjøre_v-tr_rel" ].

rettferdiggjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "rettferdiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettferdiggjøre_v-tr_rel" ].

rettferdiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rettferdiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettferdiggjøre_v-tr_rel" ].

rettkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rettkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettkjenne_v-tr_rel" ].

rettlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rettlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettlede_v-tr_rel" ].

rettleie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rettleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rettleie_v-tr_rel" ].

returnere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "returnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_returnere_v-intr_rel" ].

returnere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "returnere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_returnere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

returnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "returnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_returnere_v-tr_rel" ].

retusjere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "retusjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retusjere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

retusjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "retusjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_retusjere_v-tr_rel" ].

revaluere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "revaluere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revaluere_v-tr_rel" ].

revansjere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "revansjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revansjere_v-tr_rel" ].

revansjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "revansjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revansjere_v-tr_rel" ].

reve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "reve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reve_v-tr_rel" ].

reversere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "reversere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reversere_v-intr_rel" ].

reversere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "reversere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_reversere_v-tr_rel" ].

revidere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "revidere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revidere_v-tr_rel" ].

revoltere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "revoltere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revoltere_v-intrObl_rel" ].

revoltere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "revoltere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revoltere_v-intr_rel" ].

revoltere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "revoltere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revoltere_v-tr_rel" ].

revolusjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "revolusjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_revolusjonere_v-tr_rel" ].

ri_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "ri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ri_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ri_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "ri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ri_v-intr_rel" ].

ri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "ri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ri_v-tr_rel" ].

ribbe_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "ribbe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ribbe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ribbe_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ribbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ribbe_v-trObl_rel" ].

ribbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ribbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ribbe_v-tr_rel" ].

ride_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "ride" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ride_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ride_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "ride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ride_v-intr_rel" ].

ride_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ride_v-tr_rel" ].

rifle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rifle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rifle_v-tr_rel" ].

rigge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rigge_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

rigge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rigge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rigge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rigge_v-tr_rel" ].

rikke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikke_v-tr_rel" ].

rikke_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rikke_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

rikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikke_v-tr_rel" ].

rikle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikle_v-intrObl_rel" ].

rikle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikle_v-intr_rel" ].

rikosjettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rikosjettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikosjettere_v-intr_rel" ].

rikse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikse_v-intr_rel" ].

rikte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rikte_v-intr_rel" ].

rime_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "rime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rime_v-intrImpers_rel" ].

rime_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rime" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rime_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

rime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rime_v-intr_rel" ].

rine_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "rine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rine_v-intr_rel" ].

ringe_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-intrImpersObl_rel" ].

ringe_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ringe_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ringe_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ringe_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

ringe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-intrPrtcl_rel" ].

ringe_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-intr_rel" ].

ringe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-trPrtcl_rel" ].

ringe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k,
   SYNSEM.LOCAL.CAT.QVAL.PREDIC.LOCAL.CAT.HEAD.KEYS.KEY inn-k ].

ringe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-tr_rel" ].

ringe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringe_v-tr_rel" ].

ringeakte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "ringeakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringeakte_v-trObl_rel" ].

ringeakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ringeakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringeakte_v-tr_rel" ].

ringle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ringle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringle_v-intrObl_rel" ].

ringle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ringle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringle_v-intr_rel" ].

ringle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "ringle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ringle_v-trPath_rel" ].

rinne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "rinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rinne_v-intr_rel" ].

ripe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ripe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

ripe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ripe_v-tr_rel" ].

ripostere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ripostere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ripostere_v-intr_rel" ].

rippe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rippe_v-intrObl_rel" ].

rise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rise_v-tr_rel" ].

risikere_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "risikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_risikere_v-tr_rel" ].

risikere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "risikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_risikere_v-tr_rel" ].

risikere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "risikere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_risikere_v-tr_rel" ].

risle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "risle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_risle_v-intr_rel" ].

rispe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rispe_v-intrObl_rel" ].

rispe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rispe_v-tr_rel" ].

risse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "risse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_risse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

riste_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "riste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_riste_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

riste_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "riste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_riste_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

riste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "riste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_riste_v-intr_rel" ].

riste_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "riste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_riste_v-trScprShft_rel" ].

riste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "riste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_riste_v-tr_rel" ].

ristornere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ristornere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ristornere_v-tr_rel" ].

rite_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rite_v-intr_rel" ].

rite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rite_v-tr_rel" ].

ritualisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ritualisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ritualisere_v-tr_rel" ].

rivalisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rivalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rivalisere_v-intr_rel" ].

rive_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-intrObl_rel" ].

rive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-intr_rel" ].

rive_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-trPrtcl_rel" ].

rive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-trScpr_rel" ].

rive_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-trObl_rel" ].

rive_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-trScprShft_rel" ].

rive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rive_v-tr_rel" ].

rivne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rivne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rivne_v-intr_rel" ].

ro_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "ro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ro_v-intr_rel" ].

ro_tr-dir := v-tr-obDir &
 [ INFLECTION finstr-dd,
   STEM < "ro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ro_v-tr_rel" ].

ro_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION finstr-dd,
   STEM < "ro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ro_v-trPath_rel" ].

ro_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "ro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ro_v-tr_rel" ].

robbe_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "robbe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_robbe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

robbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "robbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_robbe_v-tr_rel" ].

robotisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "robotisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_robotisere_v-tr_rel" ].

rocke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rocke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rocke_v-intr_rel" ].

roe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "roe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_roe_v-trPrtcl_rel" ].

roe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "roe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_roe_v-trScpr_rel" ].

roe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "roe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_roe_v-tr_rel" ].

roe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "roe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_roe_v-tr_rel" ].

rokere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rokere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rokere_v-intr_rel" ].

rokke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rokke_v-intrObl_rel" ].

rokke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rokke_v-intr_rel" ].

rokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rokke_v-tr_rel" ].

rolle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rolle_v-intr_rel" ].

romanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "romanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_romanisere_v-tr_rel" ].

romantisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "romantisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_romantisere_v-tr_rel" ].

romstere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "romstere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_romstere_v-intr_rel" ].

rope_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "rope" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rope_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

rope_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rope" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rope_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

rope_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "rope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rope_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

rope_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rope_v-intr_rel" ].

rope_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "rope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rope_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

rope_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rope_v-tr_rel" ].

rose_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "rose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rose_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

rose_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "rose" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rose_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

rose_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "rose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rose_v-tr_rel" ].

rosemale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rosemale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rosemale_v-tr_rel" ].

roste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "roste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_roste_v-tr_rel" ].

rote_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rote" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rote_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

rote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rote_v-intr_rel" ].

rote_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rote_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

rote_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rote_v-tr_rel" ].

rote_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rote_v-trObl_rel" ].

rotere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "rotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rotere_v-intr_rel" ].

rotfeste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rotfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rotfeste_v-tr_rel" ].

rotfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rotfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rotfeste_v-tr_rel" ].

rotfylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rotfylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rotfylle_v-tr_rel" ].

rotte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rotte_v-trPrtcl_rel" ].

rubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rubbe_v-tr_rel" ].

rubrisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rubrisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rubrisere_v-tr_rel" ].

rufse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rufse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

rufse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "rufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rufse_v-trScprShft_rel" ].

ruge_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ruge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ruge_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ruge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ruge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruge_v-intr_rel" ].

ruge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ruge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

ruge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ruge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruge_v-tr_rel" ].

rugge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugge_v-intr_rel" ].

rugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugge_v-intr_rel" ].

rugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugge_v-tr_rel" ].

rugle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugle_v-intr_rel" ].

rugle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugle_v-intr_rel" ].

rugle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rugle_v-tr_rel" ].

ruinere_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "ruinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruinere_v-trObl_rel" ].

ruinere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ruinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruinere_v-tr_rel" ].

ruinere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ruinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruinere_v-trObl_rel" ].

ruinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ruinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruinere_v-tr_rel" ].

rukke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rukke_v-intrObl_rel" ].

rukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rukke_v-tr_rel" ].

rulle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rulle_v-intrObl_rel" ].

rulle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rulle_v-trPrtcl_rel" ].

rulle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rulle_v-trScpr_rel" ].

rulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rulle_v-tr_rel" ].

rullere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rullere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rullere_v-intr_rel" ].

rullere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rullere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rullere_v-tr_rel" ].

rulte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rulte_v-intr_rel" ].

rumle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "rumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rumle_v-intrImpersObl_rel" ].

rumle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rumle_v-intr_rel" ].

rumle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rumle_v-intr_rel" ].

runde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "runde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runde_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

runde_tr-particleshift := v-trScprShft-obDir_scObNrgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "runde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runde_v-trScprShft_rel" ].

runde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "runde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runde_v-tr_rel" ].

rundjule_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rundjule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rundjule_v-tr_rel" ].

rundstele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rundstele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rundstele_v-tr_rel" ].

rundstjele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rundstjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rundstjele_v-tr_rel" ].

rundvaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rundvaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rundvaske_v-tr_rel" ].

rune_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rune" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rune_v-intr_rel" ].

runge_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "runge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runge_v-intrImpersObl_rel" ].

runge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "runge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runge_v-intr_rel" ].

runge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "runge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runge_v-intr_rel" ].

runke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "runke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_runke_v-intr_rel" ].

ruse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "ruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruse_v-intr_rel" ].

ruse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruse_v-tr_rel" ].

ruse_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "ruse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ruse_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

ruse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ruse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruse_v-tr_rel" ].

rushe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rushe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rushe_v-intr_rel" ].

rushe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rushe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rushe_v-intr_rel" ].

ruske_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "ruske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruske_v-intrImpersObl_rel" ].

ruske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "ruske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruske_v-intrObl_rel" ].

ruske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ruske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

ruske_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "ruske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruske_v-trObl_rel" ].

russifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "russifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_russifisere_v-tr_rel" ].

rustbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rustbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rustbehandle_v-tr_rel" ].

ruste_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-intrPrtcl_rel" ].

ruste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-intr_rel" ].

ruste_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "ruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-trObl_rel" ].

;ruste_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "ruste" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-trScpr_rel" ].

ruste_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-trObl_rel" ].

ruste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruste_v-tr_rel" ].

rustifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rustifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rustifisere_v-tr_rel" ].

rustne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rustne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rustne_v-intr_rel" ].

rute_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rute_v-intrObl_rel" ].

rutle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rutle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rutle_v-intr_rel" ].

rutsje_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rutsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rutsje_v-intr_rel" ].

rutsje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rutsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rutsje_v-intr_rel" ].

rutte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rutte_v-intrObl_rel" ].

ruve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ruve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ruve_v-intr_rel" ].

ry_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "ry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ry_v-intr_rel" ].

ry_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "ry" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ry_v-intr_rel" ].

rydde_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rydde_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

rydde_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rydde_v-intrPrtcl_rel" ].

rydde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rydde_v-intr_rel" ].

rydde_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rydde_v-trScpr_rel" ].

rydde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rydde_v-tr_rel" ].

rydde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rydde_v-tr_rel" ].

rygge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rygge_v-intr_rel" ].

rygge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rygge_v-intr_rel" ].

rygge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rygge_v-tr_rel" ].

ryke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-strong,
   STEM < "ryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryke_v-intrImpers_rel" ].

ryke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "ryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryke_v-intr_rel" ].

ryke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "ryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryke_v-intr_rel" ].

rykke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "rykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rykke_v-intr_rel" ].

rykke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rykke_v-intrObl_rel" ].

rykke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "rykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rykke_v-intrPrtcl_rel" ].

rykke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rykke_v-trScpr_rel" ].

ryktes_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ryktes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryktes_v-intr_rel" ].

rynke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "rynke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rynke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

rynke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "rynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rynke_v-trScpr_rel" ].

rynke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "rynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rynke_v-tr_rel" ].

ryste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ryste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryste_v-tr_rel" ].

ryte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "ryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ryte_v-intr_rel" ].

rå_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "rå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rå_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

rå_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "rå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rå_v-intr_rel" ].

rå_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION finstr-dd,
   STEM < "rå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rå_v-trObl_rel" ].

rå_tr-obl-til := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "rå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rå_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

råde_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "råde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_råde_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

råde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "råde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råde_v-intr_rel" ].

råde_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "råde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råde_v-trObl_rel" ].

råde_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "råde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_råde_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

rådføre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "rådføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådføre_v-tr_rel" ].

rådføre_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "rådføre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rådføre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

rådlegge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "rådlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådlegge_v-intrObl_rel" ].

rådlegge_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "rådlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådlegge_v-intr_rel" ].

rådslå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "rådslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådslå_v-intrObl_rel" ].

rådslå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "rådslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådslå_v-intr_rel" ].

rådspørre_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "rådspørre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rådspørre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

rådspørre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "rådspørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rådspørre_v-tr_rel" ].

råke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "råke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råke_v-intrObl_rel" ].

råke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "råke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råke_v-tr_rel" ].

råkjøre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "råkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råkjøre_v-intr_rel" ].

råkjøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "råkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råkjøre_v-intr_rel" ].

råle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "råle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råle_v-intr_rel" ].

råne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "råne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råne_v-intr_rel" ].

råtne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "råtne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_råtne_v-intrPrtcl_rel" ].

røde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "røde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røde_v-intr_rel" ].

rødme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rødme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rødme_v-intr_rel" ].

rødne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "rødne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rødne_v-intr_rel" ].

røfle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røfle_v-tr_rel" ].

røke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "røke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røke_v-intr_rel" ].

røke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "røke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røke_v-trScpr_rel" ].

røke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "røke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røke_v-tr_rel" ].

røklegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "røklegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røklegge_v-tr_rel" ].

røkte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røkte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røkte_v-tr_rel" ].

røle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "røle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røle_v-intr_rel" ].

rømme_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "rømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_rømme_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

rømme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "rømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rømme_v-intr_rel" ].

rømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "rømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rømme_v-tr_rel" ].

rømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "rømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_rømme_v-tr_rel" ].

røntgenfotografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "røntgenfotografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røntgenfotografere_v-tr_rel" ].

røpe_tr-interr := v-intrComp-compINTERR &
 [ INFLECTION nonfstr-te,
   STEM < "røpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røpe_v-intrComp_rel" ].

røpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "røpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røpe_v-tr_rel" ].

røpe_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "røpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_røpe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

røpe_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "røpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røpe_v-tr_rel" ].

røpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "røpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røpe_v-tr_rel" ].

;røre_intr-obl-på := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "røre" >,ryte
;   SYNSEM [ LKEYS.KEYREL.PRED "_røre_v_rel",
;            LOCAL.KEY-SPEC på-k ] ].

røre_intr-obl-ved := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "røre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_røre_v-intrObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

røre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "røre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC rundt-k ].

røre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "røre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røre_v-tr_rel" ].

røre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "røre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røre_v-tr_rel" ].

røske_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "røske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røske_v-intrObl_rel" ].

røske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "røske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

røste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røste_v-tr_rel" ].

røve_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "røve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_røve_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

røve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røve_v-tr_rel" ].

røyke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "røyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyke_v-intr_rel" ].

røyke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "røyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyke_v-trScpr_rel" ].

røyke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyke_v-tr_rel" ].

røyklegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "røyklegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyklegge_v-tr_rel" ].

røyne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "røyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyne_v-intrPrtcl_rel" ].

røyne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "røyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyne_v-tr_rel" ].

røyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "røyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyse_v-trScpr_rel" ].

røyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "røyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyse_v-tr_rel" ].

røyte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "røyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_røyte_v-intr_rel" ].

sabbe_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "sabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sabbe_v-intrImpersObl_rel" ].

sabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sabbe_v-intr_rel" ].

sabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sabbe_v-intr_rel" ].

sable_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sable_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

sable_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sable_v-tr_rel" ].

sabotere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sabotere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sabotere_v-tr_rel" ].

sadle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sadle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sadle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

sadle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sadle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sadle_v-tr_rel" ].

safe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "safe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_safe_v-intr_rel" ].

safte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "safte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_safte_v-intr_rel" ].

safte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "safte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_safte_v-tr_rel" ].

sage_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "sage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sage_v-intr_rel" ].

sage_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "sage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sage_v-trScpr_rel" ].

sage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "sage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sage_v-tr_rel" ].

sake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sake_v-intr_rel" ].

sake_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "sake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sake_v-trObl_rel" ].

sake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sake_v-tr_rel" ].

sakfelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sakfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakfelle_v-tr_rel" ].

sakke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakke_v-intrObl_rel" ].

sakke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakke_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

sakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakke_v-intr_rel" ].

sakke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

sakne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakne_v-tr_rel" ].

sakse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakse_v-intrObl_rel" ].

sakse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakse_v-intr_rel" ].

sakse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

sakse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "sakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakse_v-trObl_rel" ].

sakse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sakse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakse_v-tr_rel" ].

saksøke_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "saksøke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_saksøke_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

saksøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "saksøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saksøke_v-tr_rel" ].

sakte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakte_v-intrPrtcl_rel" ].

sakte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sakte_v-tr_rel" ].

saktne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "saktne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saktne_v-intr_rel" ].

saktne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "saktne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saktne_v-tr_rel" ].

saktne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "saktne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saktne_v-tr_rel" ].

saldere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "saldere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saldere_v-tr_rel" ].

sale_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sale_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

sale_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sale_v-tr_rel" ].

salte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "salte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_salte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

salte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "salte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_salte_v-tr_rel" ].

saluttere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "saluttere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saluttere_v-intr_rel" ].

saluttere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "saluttere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saluttere_v-tr_rel" ].

salve_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "salve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_salve_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

salve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "salve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_salve_v-tr_rel" ].

samarbeide_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "samarbeide" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samarbeide_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samarbeide_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "samarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samarbeide_v-intr_rel" ].

sameksistere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sameksistere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sameksistere_v-intr_rel" ].

samkjøre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "samkjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samkjøre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "samkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samkjøre_v-tr_rel" ].

samle_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samle_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

samle_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

samle_tr-arg12-secpred-sammen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

samle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samle_v-tr_rel" ].

samle_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samle_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

samle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "samle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samle_v-tr_rel" ].

sammenfatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sammenfatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenfatte_v-tr_rel" ].

sammenholde_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "sammenholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenholde_v-trObl_rel" ].

sammenholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sammenholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenholde_v-tr_rel" ].

sammenkalle_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sammenkalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenkalle_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sammenkalle_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "sammenkalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenkalle_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sammenkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sammenkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenkalle_v-tr_rel" ].

sammenligne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammenligne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenligne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sammenligne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sammenligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenligne_v-tr_rel" ].

sammenlikne_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "sammenlikne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenlikne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sammenlikne_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammenlikne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenlikne_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sammenlikne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sammenlikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenlikne_v-tr_rel" ].

sammenstille_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "sammenstille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammenstille_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sammenstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sammenstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammenstille_v-tr_rel" ].

sammensverge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammensverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammensverge_v-tr_rel" ].

sammensverge_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammensverge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sammensverge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sammensverje_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammensverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammensverje_v-tr_rel" ].

sammensverje_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sammensverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sammensverje_v-trObl_rel" ].

samordne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "samordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samordne_v-tr_rel" ].

samordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "samordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samordne_v-tr_rel" ].

sample_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sample" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sample_v-tr_rel" ].

samrå_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "samrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samrå_v-tr_rel" ].

samrå_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "samrå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samrå_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "samse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samse_v-tr_rel" ].

samstave_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "samstave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samstave_v-intrObl_rel" ].

samstave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "samstave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samstave_v-intr_rel" ].

samstemme_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "samstemme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samstemme_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samstemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "samstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samstemme_v-intr_rel" ].

samstemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "samstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samstemme_v-tr_rel" ].

samsvare_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "samsvare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samsvare_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samsvare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "samsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samsvare_v-intr_rel" ].

samtale_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "samtale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_samtale_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

samtale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "samtale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samtale_v-intr_rel" ].

samvirke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "samvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_samvirke_v-intr_rel" ].

sanere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanere_v-tr_rel" ].

sanforisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sanforisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanforisere_v-tr_rel" ].

sangre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sangre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sangre_v-intr_rel" ].

sanke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

sanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanke_v-tr_rel" ].

sanksjonere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sanksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanksjonere_v-intrObl_rel" ].

sanksjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sanksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanksjonere_v-tr_rel" ].

sanne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "sanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanne_v-tr_rel" ].

sanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanne_v-tr_rel" ].

sannsynliggjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "sannsynliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sannsynliggjøre_v-tr_rel" ].

sannsynliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sannsynliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sannsynliggjøre_v-tr_rel" ].

sanse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanse_v-tr_rel" ].

sanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sanse_v-tr_rel" ].

satinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "satinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_satinere_v-tr_rel" ].

satirisere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "satirisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_satirisere_v-intrObl_rel" ].

satisfisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "satisfisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_satisfisere_v-tr_rel" ].

satse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "satse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_satse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

satse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "satse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_satse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

satse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "satse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_satse_v-intr_rel" ].

satse_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "satse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_satse_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

satse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "satse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_satse_v-tr_rel" ].

saumfare_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "saumfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_saumfare_v-tr_rel" ].

sause_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sause_v-intr_rel" ].

sause_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sause_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

sause_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sause_v-tr_rel" ].

savle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "savle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_savle_v-intr_rel" ].

savne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "savne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_savne_v-tr_rel" ].

score_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "score" >,
   SYNSEM.LKEYS.KEYREL.PRED "_score_v-intr_rel" ].

score_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "score" >,
   SYNSEM.LKEYS.KEYREL.PRED "_score_v-tr_rel" ].

scripte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "scripte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_scripte_v-tr_rel" ].

se_intr-telicpartcl-opp := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "se" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_se_v-intrPrtcl_rel",
            LOCAL.KEY-SPEC opp-k ] ].

se_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "se" >,
   SYNSEM.LKEYS.KEYREL.PRED "_se_v-tr_rel" ].

se_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "se" >,
   SYNSEM.LKEYS.KEYREL.PRED "_se_v-trPrtcl_rel" ].

se_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "se" >,
   SYNSEM.LKEYS.KEYREL.PRED "_se_v-tr_rel" ].

se_tr-obV := v-tr-obDECL_obV &
 [ INFLECTION finstr-tt,
   STEM < "se" >,
   SYNSEM.LKEYS.KEYREL.PRED "_se_v-tr_rel" ].

sedimentere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sedimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sedimentere_v-tr_rel" ].

sedimentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sedimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sedimentere_v-tr_rel" ].

seede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seede_v-tr_rel" ].

sees_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sees" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sees_v-intr_rel" ].

segle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segle_v-intr_rel" ].

segle_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_segle_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

segle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segle_v-intr_rel" ].

segle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segle_v-trScpr_rel" ].

segle_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segle_v-tr_rel" ].

segle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "segle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segle_v-tr_rel" ].

segmentere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "segmentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segmentere_v-tr_rel" ].

segmentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "segmentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segmentere_v-tr_rel" ].

segne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "segne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segne_v-intrPrtcl_rel" ].

segne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "segne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segne_v-intr_rel" ].

segregere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "segregere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_segregere_v-tr_rel" ].

seide_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "seide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seide_v-trObl_rel" ].

seide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seide_v-tr_rel" ].

seigpine_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "seigpine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seigpine_v-tr_rel" ].

seile_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seile_v-intr_rel" ].

seile_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_seile_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

seile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seile_v-intr_rel" ].

seile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seile_v-trScpr_rel" ].

seile_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seile_v-tr_rel" ].

seile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "seile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seile_v-tr_rel" ].

seinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "seinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seinke_v-intr_rel" ].

seinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seinke_v-tr_rel" ].

seipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seipe_v-tr_rel" ].

seire_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "seire" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_seire_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

seire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "seire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seire_v-intr_rel" ].

seise_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seise_v-tr_rel" ].

seksdoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "seksdoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seksdoble_v-tr_rel" ].

seksjonere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "seksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seksjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

seksjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "seksjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seksjonere_v-tr_rel" ].

sekularisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sekularisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sekularisere_v-tr_rel" ].

sekundere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sekundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sekundere_v-intr_rel" ].

sekundere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sekundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sekundere_v-tr_rel" ].

sele_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "sele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sele_v-intrObl_rel" ].

sele_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sele_v-tr_rel" ].

selektere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "selektere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selektere_v-tr_rel" ].

selge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selge_v-ditr_rel" ].

selge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

selge_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_selge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

selge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selge_v-tr_rel" ].

selge_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_selge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

selge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "selge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selge_v-tr_rel" ].

selvstendiggjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "selvstendiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selvstendiggjøre_v-tr_rel" ].

selvstendiggjøre_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "selvstendiggjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_selvstendiggjøre_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

selvstendiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "selvstendiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_selvstendiggjøre_v-tr_rel" ].

semaforere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "semaforere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_semaforere_v-intr_rel" ].

semaforere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "semaforere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_semaforere_v-tr_rel" ].

sementere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sementere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sementere_v-tr_rel" ].

seminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "seminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_seminere_v-tr_rel" ].

semsgarve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "semsgarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_semsgarve_v-tr_rel" ].

semske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "semske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_semske_v-tr_rel" ].

semskgarve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "semskgarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_semskgarve_v-tr_rel" ].

sende_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "sende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sende_v-ditr_rel" ].

;sende_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "sende" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_sende_v_rel" ].

senke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "senke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_senke_v-trScpr_rel" ].

senke_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "senke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_senke_v-tr_rel" ].

senke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "senke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_senke_v-tr_rel" ].

sensurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sensurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sensurere_v-tr_rel" ].

sentimentalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sentimentalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sentimentalisere_v-tr_rel" ].

sentralisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sentralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sentralisere_v-tr_rel" ].

sentre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sentre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sentre_v-tr_rel" ].

sentrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sentrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sentrere_v-tr_rel" ].

sentrifugere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sentrifugere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sentrifugere_v-tr_rel" ].

separere_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "separere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_separere_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

separere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "separere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_separere_v-tr_rel" ].

separere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "separere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_separere_v-tr_rel" ].

serratere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "serratere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_serratere_v-tr_rel" ].

sertifisere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "sertifisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sertifisere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sertifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sertifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sertifisere_v-tr_rel" ].

serve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "serve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_serve_v-intr_rel" ].

serve_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "serve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_serve_v-tr_rel" ].

servere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "servere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_servere_v-ditr_rel" ].

servere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "servere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_servere_v-intr_rel" ].

servere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "servere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_servere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

servere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "servere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_servere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

servere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "servere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_servere_v-tr_rel" ].

ses_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "ses" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ses_v-intr_rel" ].

sesongdebutere_intr-arg1-som-secpred := v-intrLghtScpr-scSuNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "sesongdebutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sesongdebutere_v-intrLghtScpr_rel" ].

sesongdebutere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sesongdebutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sesongdebutere_v-intr_rel" ].

sesse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sesse_v-tr_rel" ].

sesse_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sesse_v-trObl_rel" ].

sesse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sesse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sesse_v-tr_rel" ].

setre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "setre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_setre_v-intr_rel" ].

sette_intr-telicpartcl-10 := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sette_v-intrPrtcl_rel" ].

sette_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sette_v-intrObl_rel" ].

sette_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sette_v-trPrtcl_rel" ].

sette_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sette_v-trScprShft_rel" ].

;sette_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr,
;   STEM < "sette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_sette_v_rel" ].

sette_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sette_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

sette_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sette_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

settle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "settle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_settle_v-intrObl_rel" ].

settle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "settle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_settle_v-tr_rel" ].

sexdebutere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sexdebutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sexdebutere_v-intr_rel" ].

shake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "shake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_shake_v-intr_rel" ].

shoppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "shoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_shoppe_v-intr_rel" ].

shoppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "shoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_shoppe_v-tr_rel" ].

showe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "showe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_showe_v-intr_rel" ].

shunte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "shunte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_shunte_v-tr_rel" ].

si_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-ditr_rel" ].

si_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-intrObl_rel" ].

si_tr-arg12-secpred := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-trScpr_rel" ].

si_tr-obl-om := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_si_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

si_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

si_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-tr_rel" ].

si_tr-obV := v-tr-obDECL_obV &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-tr_rel" ].

si_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "si" >,
   SYNSEM.LKEYS.KEYREL.PRED "_si_v-tr_rel" ].

sideordne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sideordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sideordne_v-tr_rel" ].

sidestille_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "sidestille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sidestille_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sidestille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sidestille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sidestille_v-tr_rel" ].

sidrikke_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sidrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sidrikke_v-intr_rel" ].

sifrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sifrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sifrere_v-tr_rel" ].

sige_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "sige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sige_v-intr_rel" ].

sige_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "sige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sige_v-intrPrtcl_rel" ].

signalere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "signalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signalere_v-tr_rel" ].

signalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "signalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signalere_v-tr_rel" ].

signalisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "signalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signalisere_v-tr_rel" ].

signalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "signalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signalisere_v-tr_rel" ].

signe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "signe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signe_v-intr_rel" ].

signe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "signe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signe_v-tr_rel" ].

signere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "signere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signere_v-intr_rel" ].

signere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "signere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_signere_v-tr_rel" ].

sike_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sike_v-intr_rel" ].

sikkerhetsklarere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sikkerhetsklarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikkerhetsklarere_v-tr_rel" ].

sikksakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sikksakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikksakke_v-intr_rel" ].

sikksakke_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "sikksakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikksakke_v-trPath_rel" ].

sikle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikle_v-intrImpersObl_rel" ].

sikle_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikle_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

sikle_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikle_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

sikle_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikle_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sikle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikle_v-intr_rel" ].

sikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikle_v-tr_rel" ].

sikre_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikre_v-ditr_rel" ].

sikre_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "sikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikre_v-ditr_rel" ].

sikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikre_v-tr_rel" ].

sikte_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikte_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

sikte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sikte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

sikte_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sikte_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sikte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikte_v-trObl_rel" ].

sikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sikte_v-tr_rel" ].

silblø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "silblø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_silblø_v-intr_rel" ].

sildre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "sildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sildre_v-intrImpersObl_rel" ].

sildre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sildre_v-intr_rel" ].

sildre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sildre_v-intr_rel" ].

sile_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "sile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sile_v-intrPrtcl_rel" ].

sile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sile_v-intr_rel" ].

sile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "sile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sile_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

sile_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sile_v-tr_rel" ].

silregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "silregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_silregne_v-intrImpers_rel" ].

silrenne_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "silrenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_silrenne_v-intr_rel" ].

simplifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "simplifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_simplifisere_v-tr_rel" ].

simulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "simulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_simulere_v-tr_rel" ].

sindre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sindre_v-intr_rel" ].

sindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sindre_v-tr_rel" ].

single_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "single" >,
   SYNSEM.LKEYS.KEYREL.PRED "_single_v-intrImpersObl_rel" ].

single_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "single" >,
   SYNSEM.LKEYS.KEYREL.PRED "_single_v-intr_rel" ].

single_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "single" >,
   SYNSEM.LKEYS.KEYREL.PRED "_single_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

sinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sinke_v-intr_rel" ].

;sinke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "sinke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_sinke_v-trScpr_rel" ].

sinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sinke_v-tr_rel" ].

sintre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sintre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sintre_v-tr_rel" ].

sipe_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sipe_v-intr_rel" ].

sippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sippe_v-intr_rel" ].

siregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "siregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_siregne_v-intrImpers_rel" ].

sirkle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkle_v-intr_rel" ].

sirkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkle_v-intr_rel" ].

sirkle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

sirkulere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "sirkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkulere_v-intr_rel" ].

sirkulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sirkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkulere_v-intr_rel" ].

sirkulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sirkulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sirkulere_v-tr_rel" ].

siselere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "siselere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_siselere_v-tr_rel" ].

sisle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "sisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sisle_v-intrImpers_rel" ].

sitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sitere_v-tr_rel" ].

sitre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "sitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sitre_v-intrImpersObl_rel" ].

sitre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sitre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sitre_v-intr_rel" ].

sitte_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "sitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sitte_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

sitte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "sitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sitte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sitte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "sitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sitte_v-intrPrtcl_rel" ].

sitte_tr-arg1-secpred := v-trScpr-scObNrgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "sitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sitte_v-trScpr_rel" ].

sive_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sive_v-intr_rel" ].

sivilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sivilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sivilisere_v-tr_rel" ].

sjabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sjabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjabbe_v-intr_rel" ].

sjabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjabbe_v-intr_rel" ].

sjakle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjakle_v-intrObl_rel" ].

sjakle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sjakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjakle_v-trScpr_rel" ].

sjakle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjakle_v-tr_rel" ].

sjakre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjakre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjakre_v-intrObl_rel" ].

sjakre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjakre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjakre_v-intr_rel" ].

sjalte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjalte_v-intrObl_rel" ].

sjalte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sjalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjalte_v-trScpr_rel" ].

sjamponere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sjamponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjamponere_v-tr_rel" ].

sjamponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjamponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjamponere_v-tr_rel" ].

sjanghaie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjanghaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjanghaie_v-tr_rel" ].

sjangle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sjangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjangle_v-intr_rel" ].

sjangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjangle_v-intr_rel" ].

sjanse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjanse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sjanse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sjanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjanse_v-intr_rel" ].

sjarmantisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sjarmantisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjarmantisere_v-tr_rel" ].

sjarmantisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjarmantisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjarmantisere_v-tr_rel" ].

sjarmere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjarmere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjarmere_v-tr_rel" ].

sjaske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjaske_v-intr_rel" ].

sjaske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sjaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjaske_v-trScpr_rel" ].

sjaske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "sjaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjaske_v-trScprShft_rel" ].

sjattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjattere_v-tr_rel" ].

sjaue_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjaue_v-intrObl_rel" ].

sjaue_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjaue_v-intr_rel" ].

sjefe_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjefe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sjefe_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sjefe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjefe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjefe_v-intr_rel" ].

sjeide_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjeide_v-intr_rel" ].

sjeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjeide_v-tr_rel" ].

sjekke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sjekke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sjekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjekke_v-intrPrtcl_rel" ].

sjekke_tr-arg12-secpred-opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

sjekke_tr-arg12-secpred-ut := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

sjekke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjekke_v-tr_rel" ].

sjekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjekke_v-tr_rel" ].

sjenere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sjenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjenere_v-tr_rel" ].

sjenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjenere_v-tr_rel" ].

sjevre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjevre_v-intr_rel" ].

sjikanere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjikanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjikanere_v-tr_rel" ].

sjingle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjingle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjingle_v-tr_rel" ].

sjofle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjofle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjofle_v-intr_rel" ].

sjofle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjofle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjofle_v-tr_rel" ].

sjoge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjoge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjoge_v-intr_rel" ].

sjogse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjogse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjogse_v-intr_rel" ].

sjokke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sjokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjokke_v-intr_rel" ].

sjokke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjokke_v-intr_rel" ].

sjokkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjokkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjokkere_v-tr_rel" ].

sjokkåpne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjokkåpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjokkåpne_v-intr_rel" ].

sjokkåpne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjokkåpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjokkåpne_v-tr_rel" ].

sjonglere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sjonglere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sjonglere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sjonglere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sjonglere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjonglere_v-intr_rel" ].

sjudoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sjudoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjudoble_v-tr_rel" ].

sjukemelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sjukemelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukemelde_v-tr_rel" ].

sjukemelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjukemelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukemelde_v-tr_rel" ].

sjukmelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sjukmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukmelde_v-tr_rel" ].

sjukmelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sjukmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukmelde_v-tr_rel" ].

sjukne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sjukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukne_v-intrPrtcl_rel" ].

sjukne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjukne_v-intr_rel" ].

sjuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjuske_v-intr_rel" ].

sjuske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "sjuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjuske_v-trScprShft_rel" ].

sjølstendiggjøre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sjølstendiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjølstendiggjøre_v-tr_rel" ].

sjølstendiggjøre_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sjølstendiggjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sjølstendiggjøre_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

sjølstendiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sjølstendiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjølstendiggjøre_v-tr_rel" ].

sjøsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sjøsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sjøsette_v-tr_rel" ].

ska_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "ska" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ska_v-tr_rel" ].

ska_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "ska" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ska_v-tr_rel" ].

skade_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skade_v-tr_rel" ].

skade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skade_v-tr_rel" ].

skadeskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skadeskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skadeskyte_v-tr_rel" ].

skaffe_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "skaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skaffe_v-ditr_rel" ].

skaffe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skaffe_v-ditr_rel" ].

skaffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skaffe_v-intr_rel" ].

skaffe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skaffe_v-trObl_rel" ].

skaffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skaffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skaffe_v-tr_rel" ].

skafte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skafte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skafte_v-tr_rel" ].

skake_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skake_v-intrObl_rel" ].

skake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skake_v-intr_rel" ].

skake_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skake_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

skake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skake_v-tr_rel" ].

skakke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skakke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skalere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skalere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalere_v-tr_rel" ].

skalke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skalke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalke_v-tr_rel" ].

skalle_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skalle_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

skalle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skalle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skalle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalle_v-intrPrtcl_rel" ].

skalle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalle_v-intr_rel" ].

skalle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

skalle_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalle_v-trObl_rel" ].

skalle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalle_v-tr_rel" ].

skalpere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skalpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalpere_v-tr_rel" ].

skalpere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skalpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalpere_v-tr_rel" ].

skalte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalte_v-intrObl_rel" ].

skalte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skalte_v-intr_rel" ].

skambite_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skambite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skambite_v-tr_rel" ].

skamfere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skamfere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamfere_v-tr_rel" ].

skamfere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skamfere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamfere_v-tr_rel" ].

skamfryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skamfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamfryse_v-intr_rel" ].

skamhogge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "skamhogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamhogge_v-tr_rel" ].

skamhugge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "skamhugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamhugge_v-tr_rel" ].

skamkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skamkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamkjøre_v-tr_rel" ].

skamklippe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skamklippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamklippe_v-tr_rel" ].

skamklyppe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skamklyppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamklyppe_v-tr_rel" ].

skamme_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skamme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skamme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skamme_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skamme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skamme_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

skamrose_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skamrose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamrose_v-tr_rel" ].

skamslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "skamslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skamslå_v-tr_rel" ].

skandalisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skandalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skandalisere_v-tr_rel" ].

skandalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skandalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skandalisere_v-tr_rel" ].

skandere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skandere_v-intr_rel" ].

skandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skandere_v-tr_rel" ].

skanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skanne_v-tr_rel" ].

skante_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skante_v-intrObl_rel" ].

skante_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skante_v-trScpr_rel" ].

skante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skante_v-tr_rel" ].

skape_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skape_v-ditr_rel" ].

skape_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skape_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC om-k ].

skape_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skape_v-tr_rel" ].

skape_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skape_v-tr_rel" ].

skare_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "skare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skare_v-intr_rel" ].

skare_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "skare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skare_v-tr_rel" ].

skarifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skarifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skarifisere_v-tr_rel" ].

skarre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skarre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skarre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skarre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skarre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skarre_v-intr_rel" ].

skarve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skarve_v-tr_rel" ].

skate_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skate_v-tr_rel" ].

skatte_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skatte_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skatte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skatte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skatte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skatte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skatte_v-tr_rel" ].

skattlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skattlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skattlegge_v-tr_rel" ].

skave_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skave_v-intrObl_rel" ].

skave_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skave_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

skave_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skave_v-tr_rel" ].

skavle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skavle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skavle_v-tr_rel" ].

skeie_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeie_v-intrPrtcl_rel" ].

skeie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeie_v-intr_rel" ].

skeie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeie_v-tr_rel" ].

skeine_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skeine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeine_v-intr_rel" ].

skeine_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skeine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeine_v-intrPrtcl_rel" ].

skeine_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skeine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeine_v-intr_rel" ].

skeise_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skeise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeise_v-intr_rel" ].

skeive_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skeive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeive_v-intrObl_rel" ].

skeive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skeive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeive_v-tr_rel" ].

skeivle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skeivle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeivle_v-intr_rel" ].

skeivle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skeivle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeivle_v-intr_rel" ].

skeivle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skeivle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skeivle_v-tr_rel" ].

skifte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skifte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skifte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-intrPrtcl_rel" ].

skifte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-intr_rel" ].

skifte_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-intrObl_rel" ].

skifte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-trPrtcl_rel" ].

skifte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-trScpr_rel" ].

skifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skifte_v-tr_rel" ].

skikke_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skikke_v-trAdv_rel" ].

skikke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skikke_v-tr_rel" ].

;skikke_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "skikke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skikke_v_rel" ].

skildre_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "skildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skildre_v-trScpr_rel" ].

skildre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skildre_v-tr_rel" ].

skille_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skille_v-trPrtcl_rel" ].

skille_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skille_v-trScpr_rel" ].

skille_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skille_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

skille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skille_v-tr_rel" ].

skille_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skille_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

skille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skille_v-tr_rel" ].

;skillinge_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "skillinge" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skillinge_v-trScpr_rel" ].

skilte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skilte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skilte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skilte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skilte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skilte_v-tr_rel" ].

skimle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skimle_v-intr_rel" ].

skimle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skimle_v-tr_rel" ].

skimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skimre_v-intr_rel" ].

skimte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "skimte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skimte_v-tr_rel" ].

skimte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skimte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skimte_v-tr_rel" ].

skingre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skingre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skingre_v-intr_rel" ].

skinne_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skinne_v-intr_rel" ].

skipe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skipe_v-intrObl_rel" ].

skipe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skipe_v-trScpr_rel" ].

skipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skipe_v-tr_rel" ].

skiple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skiple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skiple_v-tr_rel" ].

skissere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skissere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skissere_v-tr_rel" ].

skite_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skite" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skite_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

skite_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skite_v-intr_rel" ].

skitne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "skitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skitne_v-trPrtcl_rel" ].

skitne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skitne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skive_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

; bare 'skivede tomater' - only used as above
;skive_tv := v-tr &
; [ INFLECTION nonfstr-et,
;   STEM < "skive" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skive_v-tr_rel" ].

skjefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjefte_v-tr_rel" ].

skjele_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skjele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjele_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skjele_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjele_v-intr_rel" ].

skjelettere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skjelettere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelettere_v-intr_rel" ].

skjelle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelle_v-intrObl_rel" ].

skjelle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelle_v-intr_rel" ].

skjelle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skjelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelle_v-tr_rel" ].

skjelme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjelme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelme_v-intr_rel" ].

skjelne_intr-obl-mellom := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjelne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjelne_v-intrObl_rel",
            LOCAL.KEY-SPEC mellom-k ] ].

skjelne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skjelne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelne_v-trObl_rel" ].

skjelne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjelne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelne_v-tr_rel" ].

skjelve_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjelve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjelve_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skjelve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjelve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjelve_v-intr_rel" ].

skjematisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjematisere_v-tr_rel" ].

skjemme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemme_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skjemme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemme_v-tr_rel" ].

skjemme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemme_v-tr_rel" ].

skjemmes_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjemmes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjemmes_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

skjemmes_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjemmes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemmes_v-intr_rel" ].

skjemte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjemte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemte_v-intrObl_rel" ].

skjemte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjemte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjemte_v-intr_rel" ].

skjende_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjende_v-tr_rel" ].

skjene_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "skjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjene_v-intr_rel" ].

skjene_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "skjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjene_v-intrPrtcl_rel" ].

skjene_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "skjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjene_v-intr_rel" ].

skjenke_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenke_v-ditr_rel" ].

skjenke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenke_v-intr_rel" ].

skjenke_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjenke_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

skjenke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenke_v-trScpr_rel" ].

skjenke_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenke_v-trScpr_rel" ].

skjenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenke_v-tr_rel" ].

skjenne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skjenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjenne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skjenne_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjenne_v-intr_rel" ].

skjerme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjerme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjerme_v-intrObl_rel" ].

skjerme_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skjerme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjerme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skjerme_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skjerme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjerme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skjerme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjerme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjerme_v-tr_rel" ].

skjerpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjerpe_v-intr_rel" ].

skjerpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skjerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjerpe_v-tr_rel" ].

skjerpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjerpe_v-tr_rel" ].

skjolde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjolde_v-tr_rel" ].

;skjule_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "skjule" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skjule_v-trScpr_rel" ].

skjule_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjule_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skjule_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjule_v-trAdv_rel" ].

skjule_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjule_v-tr_rel" ].

skjule_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjule_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skjule_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjule_v-tr_rel" ].

skjule_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjule_v-tr_rel" ].

skjære_intr-obl-gjennom := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjære_v-intrObl_rel",
            LOCAL.KEY-SPEC gjennom-k ] ].

skjære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjære_v-trScpr_rel" ].

skjære_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjære_v-trObl_rel" ].

skjære_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjære_v-trObl_rel" ].

skjære_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjære_v-tr_rel" ].

skjære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjære_v-tr_rel" ].

skjærne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjærne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjærne_v-intr_rel" ].

skjønne_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "skjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønne_v-trObl_rel" ].

skjønne_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skjønne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjønne_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skjønne_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "skjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønne_v-tr_rel" ].

skjønne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønne_v-tr_rel" ].

skjønnmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skjønnmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønnmale_v-tr_rel" ].

skjønnsligne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjønnsligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønnsligne_v-tr_rel" ].

skjønnslikne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjønnslikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjønnslikne_v-tr_rel" ].

skjørne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skjørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjørne_v-intr_rel" ].

;skjørte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "skjørte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skjørte_v-trScpr_rel" ].

skjøte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skjøte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjøte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skjøte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjøte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

skjøte_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skjøte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skjøte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skjøte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "skjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjøte_v-trScprShft_rel" ].

skjøte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjøte_v-tr_rel" ].

skjøtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skjøtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skjøtte_v-tr_rel" ].

skli_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "skli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skli_v-intr_rel" ].

skli_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "skli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skli_v-intrPrtcl_rel" ].

skli_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skli_v-intr_rel" ].

sko_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "sko" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sko_v-tr_rel" ].

sko_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "sko" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sko_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sko_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "sko" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sko_v-tr_rel" ].

skofte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skofte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skofte_v-intr_rel" ].

skofte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skofte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skofte_v-tr_rel" ].

skoggerle_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skoggerle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skoggerle_v-intr_rel" ].

skogre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skogre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skogre_v-intr_rel" ].

skole_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skole_v-intr_rel" ].

skolere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "skolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skolere_v-trObl_rel" ].

skolere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skolere_v-tr_rel" ].

skolere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "skolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skolere_v-trObl_rel" ].

skolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skolere_v-tr_rel" ].

skolme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skolme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skolme_v-tr_rel" ].

skorde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skorde_v-intrObl_rel" ].

skorde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skorde_v-tr_rel" ].

skore_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skore_v-intrObl_rel" ].

skore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skore_v-tr_rel" ].

skorpe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skorpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skorpe_v-tr_rel" ].

skorte_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "skorte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skorte_v-intrImpersObl_rel" ].

skose_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "skose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skose_v-intrObl_rel" ].

skotte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skotte_v-intr_rel" ].

skotte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skotte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skotte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skotte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skotte_v-intr_rel" ].

skove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skove_v-tr_rel" ].

skove_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skove_v-tr_rel" ].

skovle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skovle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skovle_v-tr_rel" ].

skrakle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "skrakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrakle_v-intrImpersObl_rel" ].

;skrakle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "skrakle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skrakle_v-trScpr_rel" ].

skralle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skralle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skralle_v-intr_rel" ].

skramle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skramle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skramle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skramle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skramle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skramle_v-intr_rel" ].

skrangle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skrangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrangle_v-intr_rel" ].

skrangle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skrangle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrangle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skrangle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrangle_v-intr_rel" ].

skrangle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skrangle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrangle_v-trScpr_rel" ].

skrante_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrante_v-intr_rel" ].

skrape_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skrape" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrape_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skrape_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrape_v-trPrtcl_rel" ].

skrape_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrape_v-trScpr_rel" ].

skrape_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skrape" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrape_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

skrape_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrape_v-tr_rel" ].

skrappe_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "skrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrappe_v-intrImpersObl_rel" ].

skrappe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrappe_v-intrObl_rel" ].

skrappe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrappe_v-intr_rel" ].

skrasle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrasle_v-intr_rel" ].

skratle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skratle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skratle_v-intr_rel" ].

skratte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skratte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skratte_v-intr_rel" ].

skrattle_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skrattle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrattle_v-intr_rel" ].

skravere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skravere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skravere_v-tr_rel" ].

skravle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skravle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skravle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skravle_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skravle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skravle_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

skravle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skravle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skravle_v-intr_rel" ].

skre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "skre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skre_v-tr_rel" ].

skredderere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skredderere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skredderere_v-intr_rel" ].

skreddersy_tr-obl-for := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "skreddersy" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skreddersy_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skreddersy_tr-obl-til := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "skreddersy" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skreddersy_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

skreddersy_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "skreddersy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skreddersy_v-tr_rel" ].

skrelle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "skrelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrelle_v-intrImpersObl_rel" ].

skrelle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skrelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrelle_v-intr_rel" ].

skrelle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skrelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrelle_v-trScpr_rel" ].

skrelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skrelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrelle_v-tr_rel" ].

skremme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skremme_v-trScpr_rel" ].

skremme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skremme_v-tr_rel" ].

skrense_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrense_v-intr_rel" ].

skrense_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrense_v-intrObl_rel" ].

skrense_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrense_v-intr_rel" ].

skreppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skreppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skreppe_v-intrObl_rel" ].

skreppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skreppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skreppe_v-intr_rel" ].

skreve_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skreve_v-intrObl_rel" ].

skreve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skreve_v-intr_rel" ].

skri_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "skri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skri_v-intr_rel" ].

skri_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "skri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skri_v-intrPrtcl_rel" ].

skri_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skri_v-intr_rel" ].

skrible_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrible_v-intr_rel" ].

skrible_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skrible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrible_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

skrible_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrible" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrible_v-tr_rel" ].

skride_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "skride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skride_v-intr_rel" ].

skride_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "skride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skride_v-intrPrtcl_rel" ].

skride_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skride_v-intr_rel" ].

skrifte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrifte_v-intr_rel" ].

skrifte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skrifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrifte_v-trObl_rel" ].

skrifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrifte_v-tr_rel" ].

skriftfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skriftfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skriftfeste_v-tr_rel" ].

skrike_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrike_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

skrike_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "skrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrike_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skrike_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrike_v-intr_rel" ].

skrike_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "skrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrike_v-trScpr_rel" ].

skrike_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "skrike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrike_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

skrinlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skrinlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrinlegge_v-tr_rel" ].

skritte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skritte_v-intrPrtcl_rel" ].

skritte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skritte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

skrive_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-ditr_rel" ].

skrive_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrive_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

skrive_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrive_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

skrive_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrive_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

skrive_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrive_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skrive_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skrive_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

skrive_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-intrPrtcl_rel" ].

skrive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-intr_rel" ].

skrive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-trScpr_rel" ].

skrive_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-trScprShft_rel" ].

skrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrive_v-tr_rel" ].

skrote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrote_v-tr_rel" ].

skru_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "skru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skru_v-intrObl_rel" ].

skru_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skru_v-intr_rel" ].

skru_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "skru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skru_v-trScpr_rel" ].

skru_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "skru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skru_v-tr_rel" ].

skrubbe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skrubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrubbe_v-tr_rel" ].

skrubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrubbe_v-tr_rel" ].

skrue_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "skrue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrue_v-intrObl_rel" ].

skrue_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "skrue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrue_v-intr_rel" ].

skrue_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "skrue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrue_v-trScpr_rel" ].

skrue_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "skrue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrue_v-tr_rel" ].

skrukke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skrukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrukke_v-trScpr_rel" ].

skrukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrukke_v-tr_rel" ].

skrumpe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skrumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrumpe_v-intrPrtcl_rel" ].

skrumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrumpe_v-intr_rel" ].

skrumpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skrumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrumpe_v-trScpr_rel" ].

skrumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrumpe_v-tr_rel" ].

skruve_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "skruve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skruve_v-intrObl_rel" ].

skruve_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "skruve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skruve_v-intr_rel" ].

;skruve_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "skruve" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skruve_v-trScpr_rel" ].

skruve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "skruve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skruve_v-tr_rel" ].

skryte_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skryte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skryte_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

skryte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skryte_v-intr_rel" ].

skrå_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "skrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrå_v-intr_rel" ].

skrå_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrå_v-intr_rel" ].

skrå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "skrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrå_v-tr_rel" ].

skråle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skråle_v-intr_rel" ].

skråne_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skråne_v-intr_rel" ].

skråne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skråne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skråne_v-intr_rel" ].

skråsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skråsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skråsette_v-tr_rel" ].

skråstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skråstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skråstille_v-tr_rel" ].

skrø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "skrø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrø_v-intr_rel" ].

skrøfte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrøfte_v-intr_rel" ].

skrøfte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skrøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrøfte_v-tr_rel" ].

skrømte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrømte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrømte_v-intr_rel" ].

skrøne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skrøne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skrøne_v-intr_rel" ].

skubbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skubbe_v-intrObl_rel" ].

skubbe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skubbe_v-trScpr_rel" ].

skubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skubbe_v-tr_rel" ].

skue_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skue_v-intrObl_rel" ].

skue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skue_v-tr_rel" ].

skuffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skuffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skuffe_v-tr_rel" ].

skufle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "skufle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skufle_v-trScprShft_rel" ].

skufle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skufle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skufle_v-tr_rel" ].

skule_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skule" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skule_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

skule_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skule_v-intr_rel" ].

skulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skulke_v-intr_rel" ].

skulke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skulke_v-tr_rel" ].

skulptere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skulptere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skulptere_v-tr_rel" ].

skulse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skulse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skulse_v-intr_rel" ].

skumkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skumkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumkjøre_v-tr_rel" ].

skumle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumle_v-intrObl_rel" ].

skumlese_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skumlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumlese_v-intr_rel" ].

skumlese_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skumlese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumlese_v-tr_rel" ].

skumme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumme_v-intrObl_rel" ].

skumme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumme_v-intr_rel" ].

skumme_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumme_v-trObl_rel" ].

skumme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skumme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumme_v-tr_rel" ].

skumpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "skumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumpe_v-intr_rel" ].

skumpe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumpe_v-intrObl_rel" ].

skumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumpe_v-intr_rel" ].

skumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumpe_v-tr_rel" ].

skumpiske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skumpiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumpiske_v-tr_rel" ].

skumple_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skumple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumple_v-intr_rel" ].

skumple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skumple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumple_v-tr_rel" ].

skumre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "skumre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumre_v-intrImpers_rel" ].

skumtygge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "skumtygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skumtygge_v-intr_rel" ].

skure_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skure_v-tr_rel" ].

skurre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skurre_v-intr_rel" ].

skusle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skusle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

skutle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skutle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skutle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

;skutte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
; [ INFLECTION nonfstr-et,
;   STEM < "skutte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skutte_v-trPrtcl_rel" ].

;skutte_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr-et,
;   STEM < "skutte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skutte_v-tr_rel" ].

skuve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skuve_v-trScpr_rel" ].

skuve_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "skuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skuve_v-tr_rel" ].

skuve_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "skuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skuve_v-trPath_rel" ].

skuve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skuve_v-tr_rel" ].

skvadronere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skvadronere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvadronere_v-intr_rel" ].

skvaldre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skvaldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvaldre_v-intr_rel" ].

skvale_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skvale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvale_v-intr_rel" ].

skvalpe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skvalpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvalpe_v-intrPrtcl_rel" ].

skvalpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skvalpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvalpe_v-intr_rel" ].

skvatre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skvatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvatre_v-intr_rel" ].

skvette_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "skvette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvette_v-intr_rel" ].

skvette_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "skvette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skvette_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

skvette_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "skvette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvette_v-intr_rel" ].

;skvette_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "skvette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skvette_v-trScpr_rel" ].

;skvette_tv := v-tr &
; [ INFLECTION nonfstr-strong,
;   STEM < "skvette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skvette_v-tr_rel" ].

skvise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvise_v-intr_rel" ].

skvise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvise_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

skvulpe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skvulpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvulpe_v-intrPrtcl_rel" ].

skvulpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skvulpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvulpe_v-intr_rel" ].

skvære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "skvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvære_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

skvære_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skvære_v-tr_rel" ].

sky_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "sky" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sky_v-tr_rel" ].

skye_impers-pres-telicpart := v-intrImpersPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "skye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skye_v-intrImpersPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

skyfle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skyfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyfle_v-tr_rel" ].

skygge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skygge_v-intrObl_rel" ].

skygge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skygge_v-tr_rel" ].

skyggelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skyggelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyggelegge_v-tr_rel" ].

skylde_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "skylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylde_v-ditr_rel" ].

skylde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylde_v-intrObl_rel" ].

skylde_subj-doublobj-equi := v-ditr-obEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "skylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylde_v-ditr_rel" ].

skylde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylde_v-tr_rel" ].

skyldes_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skyldes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyldes_v-tr_rel" ].

skyldsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skyldsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyldsette_v-tr_rel" ].

skylle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylle_v-intrObl_rel" ].

skylle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "skylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylle_v-trScpr_rel" ].

skylle_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "skylle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skylle_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

skylle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "skylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylle_v-trScprShft_rel" ].

skylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "skylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skylle_v-tr_rel" ].

skynde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skynde_v-intrObl_rel" ].

skynde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "skynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skynde_v-tr_rel" ].

skysse_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "skysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skysse_v-tr_rel" ].

skysse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skysse_v-tr_rel" ].

;not clear for what
;skyte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION nonfstr-strong,
;   STEM < "skyte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_skyte_v-trScprShft_rel" ].

skyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "skyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyte_v-tr_rel" ].

skyve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "skyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyve_v-trScpr_rel" ].

skyve_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "skyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyve_v-tr_rel" ].

skyve_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "skyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyve_v-trPath_rel" ].

skyve_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skyve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skyve_v-tr_rel" ].

skålde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skålde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skålde_v-tr_rel" ].

skåle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "skåle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skåle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skåle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "skåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåle_v-intr_rel" ].

skåne_tr-obl-mot := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "skåne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skåne_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

skåne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåne_v-tr_rel" ].

skåre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåre_v-intrObl_rel" ].

skåre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåre_v-intr_rel" ].

skåre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåre_v-tr_rel" ].

skårlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "skårlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skårlegge_v-tr_rel" ].

skåte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skåte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåte_v-intr_rel" ].

skåte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "skåte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skåte_v-tr_rel" ].

skøye_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "skøye" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_skøye_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

skøye_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skøye_v-intr_rel" ].

skøyte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "skøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_skøyte_v-intr_rel" ].

slabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slabbe_v-intr_rel" ].

sladde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sladde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sladde_v-intr_rel" ].

sladde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sladde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sladde_v-tr_rel" ].

sladre_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sladre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sladre_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

sladre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sladre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sladre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sladre_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sladre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sladre_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sladre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sladre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sladre_v-intr_rel" ].

slafse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slafse_v-intr_rel" ].

slafse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slafse_v-trScprShft_rel" ].

slage_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slage_v-intr_rel" ].

slage_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slage_v-intr_rel" ].

slagge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slagge_v-intr_rel" ].

slagge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slagge_v-tr_rel" ].

slakke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slakke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slakke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slakke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "slakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slakke_v-intrPrtcl_rel" ].

slakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slakke_v-intr_rel" ].

slakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slakne_v-intr_rel" ].

slakte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slakte_v-intrObl_rel" ].

slakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slakte_v-tr_rel" ].

slamme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamme_v-intr_rel" ].

slamme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamme_v-tr_rel" ].

slampe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slampe_v-intr_rel" ].

slampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slampe_v-intr_rel" ].

slamre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamre_v-intrObl_rel" ].

slamre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamre_v-intr_rel" ].

slamre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "slamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

slamse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamse_v-intr_rel" ].

slamse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slamse_v-trScprShft_rel" ].

slange_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "slange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slange_v-tr_rel" ].

slange_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "slange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slange_v-trPath_rel" ].

slanke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slanke_v-intr_rel" ].

slanke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "slanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slanke_v-tr_rel" ].

slanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slanke_v-tr_rel" ].

slapne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slapne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slapne_v-intr_rel" ].

slappe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "slappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slappe_v-intrPrtcl_rel" ].

slappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slappe_v-tr_rel" ].

slarke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slarke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slarke_v-intr_rel" ].

slarve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slarve_v-intr_rel" ].

;slarve_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "slarve" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_slarve_v-trScpr_rel" ].

slaske_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slaske_v-intr_rel" ].

slaske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slaske_v-intr_rel" ].

slaure_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slaure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slaure_v-intr_rel" ].

slave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slave_v-intr_rel" ].

slavebinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "slavebinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slavebinde_v-tr_rel" ].

slegge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slegge_v-intr_rel" ].

slegge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slegge_v-tr_rel" ].

sleike_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sleike_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

sleike_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sleike_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sleike_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleike_v-trObl_rel" ].

sleike_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleike_v-trObl_rel" ].

sleike_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sleike_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sleike_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleike_v-trScprShft_rel" ].

sleike_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sleike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleike_v-tr_rel" ].

sleiske_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sleiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleiske_v-intr_rel" ].

sleive_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "sleive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleive_v-intr_rel" ].

sleive_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "sleive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleive_v-intrObl_rel" ].

sleive_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sleive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleive_v-intr_rel" ].

slekte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slekte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slekte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slemme_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "slemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slemme_v-tr_rel" ].

slenge_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-ditr_rel" ].

slenge_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slenge_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

slenge_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-intr_rel" ].

slenge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-trScpr_rel" ].

slenge_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-trObl_rel" ].

slenge_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slenge_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

slenge_tr-obl-over := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slenge_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

slenge_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slenge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slenge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-trScprShft_rel" ].

slenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "slenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slenge_v-tr_rel" ].

slentre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slentre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slentre_v-intr_rel" ].

slentre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slentre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slentre_v-intr_rel" ].

slepe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "slepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slepe_v-intrObl_rel" ].

slepe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "slepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slepe_v-trScpr_rel" ].

slepe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "slepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slepe_v-tr_rel" ].

slepe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "slepe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slepe_v-tr_rel" ].

sleppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-intrObl_rel" ].

sleppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-intrPrtcl_rel" ].

sleppe_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-tr_rel" ].

sleppe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-trPrtcl_rel" ].

sleppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-trScpr_rel" ].

sleppe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleppe_v-tr_rel" ].

sleske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sleske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleske_v-intr_rel" ].

sletne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sletne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sletne_v-intr_rel" ].

slette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slette_v-intrObl_rel" ].

slette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slette_v-tr_rel" ].

sleve_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleve_v-intrObl_rel" ].

sleve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sleve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sleve_v-intr_rel" ].

slikke_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slikke_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

slikke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slikke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slikke_v-trObl_rel" ].

slikke_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slikke_v-trObl_rel" ].

slikke_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slikke_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slikke_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slikke_v-trScprShft_rel" ].

slikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slikke_v-tr_rel" ].

slime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slime_v-intr_rel" ].

slime_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "slime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slime_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

slindbarke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slindbarke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slindbarke_v-tr_rel" ].

slinde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "slinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slinde_v-tr_rel" ].

slindre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slindre_v-tr_rel" ].

slingre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slingre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slingre_v-intr_rel" ].

slingre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slingre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slingre_v-intr_rel" ].

slipe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "slipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slipe_v-trScpr_rel" ].

slipe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "slipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slipe_v-tr_rel" ].

slippe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "slippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slippe_v-intrPrtcl_rel" ].

slippe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "slippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slippe_v-trPrtcl_rel" ].

slippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "slippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slippe_v-trScpr_rel" ].

slippe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "slippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slippe_v-tr_rel" ].

sliske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sliske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sliske_v-intr_rel" ].

slisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slisse_v-intr_rel" ].

slite_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slite_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

slite_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slite_v-intr_rel" ].

slite_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slite_v-trPrtcl_rel" ].

slite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

slite_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slite_v-trPath_rel" ].

slite_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "slite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slite_v-tr_rel" ].

slitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slitne_v-intr_rel" ].

slodde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "slodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slodde_v-tr_rel" ].

;slokke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "slokke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_slokke_v-trScpr_rel" ].

slokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slokke_v-tr_rel" ].

slokne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slokne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slokne_v-intr_rel" ].

slubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slubbe_v-intr_rel" ].

slubre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slubre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slubre_v-intr_rel" ].

slubre_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slubre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slubre_v-trScprShft_rel" ].

sludde_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "sludde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sludde_v-intrImpers_rel" ].

sludre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sludre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sludre_v-intr_rel" ].

sluffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sluffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluffe_v-intr_rel" ].

slufse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slufse_v-intr_rel" ].

sluke_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "sluke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluke_v-trScprShft_rel" ].

sluke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sluke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluke_v-tr_rel" ].

;slukke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "slukke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_slukke_v-trScpr_rel" ].

slukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slukke_v-tr_rel" ].

slukne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slukne_v-intr_rel" ].

slumpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "slumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slumpe_v-intr_rel" ].

slumpe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slumpe_v-intrObl_rel" ].

slumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slumpe_v-intr_rel" ].

slumre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slumre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slumre_v-intr_rel" ].

;slumse_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "slumse" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_slumse_v-trScpr_rel" ].

slumse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slumse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slumse_v-tr_rel" ].

sluntre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sluntre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sluntre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sluntre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sluntre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluntre_v-intr_rel" ].

slure_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slure_v-intrObl_rel" ].

slure_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "slure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slure_v-intr_rel" ].

slurke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slurke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurke_v-intr_rel" ].

slurke_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slurke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurke_v-trScprShft_rel" ].

slurke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slurke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurke_v-tr_rel" ].

slurpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurpe_v-intr_rel" ].

slurpe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "slurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurpe_v-trScprShft_rel" ].

slurpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurpe_v-tr_rel" ].

slurve_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slurve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slurve_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

slurve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "slurve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slurve_v-intr_rel" ].

sluse_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr,
   STEM < "sluse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluse_v-tr_rel" ].

sluse_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sluse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluse_v-tr_rel" ].

sluske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sluske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluske_v-intr_rel" ].

slute_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "slute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slute_v-intrImpers_rel" ].

slutte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slutte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

slutte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slutte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slutte_intr-telicpartcl-10 := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-intrPrtcl_rel" ].

slutte_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-intrObl_rel" ].

slutte_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-tr_rel" ].

slutte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-trPrtcl_rel" ].

;slutte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "slutte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-trScpr_rel" ].

slutte_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slutte_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

slutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "slutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slutte_v-tr_rel" ].

sluttføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sluttføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sluttføre_v-tr_rel" ].

slynge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "slynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slynge_v-trScpr_rel" ].

slynge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "slynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slynge_v-trPath_rel" ].

slynge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "slynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slynge_v-tr_rel" ].

slå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

slå_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-intrPrtcl_rel" ].

slå_iv-13 := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-intr_rel" ].

slå_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-trPrtcl_rel" ].

slå_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-trScpr_rel" ].

slå_tr-detachposs-refl-11 := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-trObl_rel" ].

slå_tr-ppshift-10 := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-trScprShft_rel" ].

slå_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-tr_rel" ].

slå_tr-refl-obl-17-til := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slå_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

slå_tr-secpred-arg1-refl-19 := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION finstr-tt,
   STEM < "slå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slå_v-trScpr_rel" ].

slåss_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "slåss" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slåss_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

slåss_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "slåss" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_slåss_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

slåss_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "slåss" >,
   SYNSEM.LKEYS.KEYREL.PRED "_slåss_v-intr_rel" ].

;sløkke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-te,
;   STEM < "sløkke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_sløkke_v-trScpr_rel" ].

sløkke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sløkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløkke_v-tr_rel" ].

sløre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløre_v-intr_rel" ].

sløre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløre_v-tr_rel" ].

sløse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sløse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sløse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sløse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløse_v-intr_rel" ].

sløse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "sløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

sløve_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sløve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløve_v-intr_rel" ].

sløve_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sløve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløve_v-tr_rel" ].

sløvne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sløvne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløvne_v-intr_rel" ].

sløyde_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sløyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløyde_v-intr_rel" ].

sløye_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløye_v-intrPrtcl_rel" ].

sløye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sløye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløye_v-tr_rel" ].

sløyfe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sløyfe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sløyfe_v-tr_rel" ].

smadre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smadre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smadre_v-tr_rel" ].

smake_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "smake" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smake_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

smake_intr-secpr := v-intrScpr-scSuNrgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "smake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smake_v-intrScpr_rel" ].

smake_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "smake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smake_v-intr_rel" ].

smake_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "smake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smake_v-tr_rel" ].

smaksette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "smaksette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smaksette_v-tr_rel" ].

smale_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-te,
   STEM < "smale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smale_v-intrImpersObl_rel" ].

smale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "smale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smale_v-intr_rel" ].

smalne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "smalne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smalne_v-intrPrtcl_rel" ].

smalne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smalne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smalne_v-intr_rel" ].

smashe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smashe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smashe_v-tr_rel" ].

smaske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smaske_v-intr_rel" ].

smaske_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "smaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smaske_v-trObl_rel" ].

smaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smaske_v-tr_rel" ].

smatre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smatre_v-intr_rel" ].

smatte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smatte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smatte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smatte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smatte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

smatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smatte_v-intr_rel" ].

smede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smede_v-tr_rel" ].

smeike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smeike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smeike_v-tr_rel" ].

smeise_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smeise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smeise_v-intrObl_rel" ].

smekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smekke_v-intrObl_rel" ].

smekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "smekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smekke_v-intrPrtcl_rel" ].

smekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "smekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

smekke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "smekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smekke_v-trObl_rel" ].

smekte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smekte_v-intrObl_rel" ].

smelle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-strong,
   STEM < "smelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelle_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

smelle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "smelle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smelle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smelle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "smelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelle_v-intrPrtcl_rel" ].

smelle_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "smelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelle_v-intr_rel" ].

smelle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "smelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

smelte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelte_v-intr_rel" ].

smelte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "smelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

smelte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smelte_v-tr_rel" ].

smergle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smergle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smergle_v-tr_rel" ].

smerte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smerte_v-tr_rel" ].

;smette_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "smette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smette_v_rel" ].

;smette_intr-telicpartcl := v-intrPrtcl &
; [ INFLECTION nonfstr,
;   STEM < "smette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smette_v_rel" ].

;smette_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
; [ INFLECTION nonfstr,
;   STEM < "smette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smette_v_rel" ].

;smette_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "smette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smette_v_rel" ].

;smette_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION nonfstr,
;   STEM < "smette" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smette_v_rel" ].

smi_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "smi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smi_v-intr_rel" ].

smi_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "smi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smi_v-tr_rel" ].

smigre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smigre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smigre_v-tr_rel" ].

smikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smikke_v-intrObl_rel" ].

smile_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "smile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smile_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sminke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sminke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sminke_v-tr_rel" ].

sminke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sminke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sminke_v-tr_rel" ].

smiske_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "smiske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smiske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smiske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smiske_v-intr_rel" ].

smitte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smitte_v-intr_rel" ].

smitte_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "smitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smitte_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smitte_v-tr_rel" ].

smugle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "smugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smugle_v-trPrtcl_rel" ].

smugle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "smugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smugle_v-trScpr_rel" ].

smugle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smugle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smugle_v-tr_rel" ].

smuldre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "smuldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smuldre_v-intrPrtcl_rel" ].

smuldre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smuldre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smuldre_v-tr_rel" ].

smule_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "smule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smule_v-tr_rel" ].

smule_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "smule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smule_v-tr_rel" ].

smulne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "smulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smulne_v-intr_rel" ].

smusse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "smusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smusse_v-trPrtcl_rel" ].

smusse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "smusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smusse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

smutte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "smutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smutte_v-intr_rel" ].

smyge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "smyge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smyge_v-trPath_rel" ].

smykke_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "smykke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smykke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "smykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smykke_v-tr_rel" ].

småløpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "småløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_småløpe_v-intr_rel" ].

småløpe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "småløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_småløpe_v-intr_rel" ].

småprate_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "småprate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_småprate_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

småprate_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "småprate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_småprate_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

småprate_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "småprate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_småprate_v-intr_rel" ].

smøre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "smøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smøre_v-trScpr_rel" ].

smøre_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "smøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_smøre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

smøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "smøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_smøre_v-tr_rel" ].

;smøye_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "smøye" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smøye_v-trScpr_rel" ].

;smøye_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
; [ INFLECTION nonfstr,
;   STEM < "smøye" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_smøye_v-trScprShft_rel" ].

snadre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snadre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snadre_v-intr_rel" ].

snafse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snafse_v-tr_rel" ].

snake_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snake_v-intrObl_rel" ].

snake_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "snake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snake_v-trScprShft_rel" ].

snake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snake_v-tr_rel" ].

snakke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "snakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snakke_v-intrPrtcl_rel" ].

snakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snakke_v-intr_rel" ].

snakke_tr-arg12-refl-secpred := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "snakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snakke_v-trScpr_rel" ].

snappe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snappe_v-intrObl_rel" ].

snappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

snappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snappe_v-tr_rel" ].

snapse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snapse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snapse_v-intr_rel" ].

;snare_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "snare" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_snare_v-trScpr_rel" ].

;snare_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "snare" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_snare_v-tr_rel" ].

snaske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snaske_v-intr_rel" ].

snaske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snaske_v-tr_rel" ].

snaublåse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snaublåse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snaublåse_v-tr_rel" ].

snaue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snaue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snaue_v-tr_rel" ].

snaugnage_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snaugnage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snaugnage_v-tr_rel" ].

snauhogge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "snauhogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snauhogge_v-tr_rel" ].

snauhugge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "snauhugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snauhugge_v-tr_rel" ].

snauklippe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snauklippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snauklippe_v-tr_rel" ].

snauklyppe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snauklyppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snauklyppe_v-tr_rel" ].

snauslite_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "snauslite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snauslite_v-tr_rel" ].

snavle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snavle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snavle_v-intr_rel" ].

snegle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "snegle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snegle_v-trPath_rel" ].

sneie_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "sneie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sneie_v-intrObl_rel" ].

;sneie_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-de,
;   STEM < "sneie" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_sneie_v-trScpr_rel" ].

sneie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "sneie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sneie_v-tr_rel" ].

sneise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sneise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sneise_v-intr_rel" ].

sneise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sneise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sneise_v-tr_rel" ].

sneke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "sneke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sneke_v-intr_rel" ].

snekkerere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "snekkerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekkerere_v-intr_rel" ].

snekkerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snekkerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekkerere_v-tr_rel" ].

snekre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekre_v-intrObl_rel" ].

snekre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekre_v-intr_rel" ].

snekre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

snekre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snekre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snekre_v-tr_rel" ].

snelle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "snelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snelle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

snelle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "snelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snelle_v-tr_rel" ].

snerke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "snerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerke_v-tr_rel" ].

snerpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerpe_v-intr_rel" ].

snerpe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "snerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerpe_v-trPrtcl_rel" ].

snerpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

snerpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snerpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerpe_v-tr_rel" ].

snerre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snerre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerre_v-intr_rel" ].

snerre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snerre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerre_v-tr_rel" ].

snerte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerte_v-intrObl_rel" ].

snerte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "snerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerte_v-intrPrtcl_rel" ].

snerte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snerte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snerte_v-tr_rel" ].

snevre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "snevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snevre_v-trPrtcl_rel" ].

snevre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snevre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snevre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

sniffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sniffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sniffe_v-intr_rel" ].

sniffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sniffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sniffe_v-tr_rel" ].

snike_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "snike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snike_v-intr_rel" ].

snike_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "snike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snike_v-trScprShft_rel" ].

snike_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "snike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snike_v-trPath_rel" ].

snikmyrde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snikmyrde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snikmyrde_v-tr_rel" ].

snirkle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "snirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snirkle_v-tr_rel" ].

snirkle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "snirkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snirkle_v-trPath_rel" ].

snitte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snitte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

snitte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "snitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snitte_v-trObl_rel" ].

snitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snitte_v-tr_rel" ].

sno_impers-pres := v-intrImpers &
 [ INFLECTION finstr-dd,
   STEM < "sno" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sno_v-intrImpers_rel" ].

sno_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "sno" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sno_v-tr_rel" ].

sno_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION finstr-dd,
   STEM < "sno" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sno_v-trPath_rel" ].

sno_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "sno" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sno_v-tr_rel" ].

snobbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "snobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snobbe_v-intr_rel" ].

snobbe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snobbe_v-intrObl_rel" ].

snobbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snobbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snobbe_v-intr_rel" ].

snoke_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snoke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snoke_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

snoke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snoke_v-intr_rel" ].

snope_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snope_v-intr_rel" ].

;snope_tr-arg12-secpred := v-trScpr-scObArgCsd &
;[ INFLECTION nonfstr-et,
;   STEM < "snope" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_snope_v-trScpr_rel" ].

snorke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snorke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snorke_v-intr_rel" ].

snorksove_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "snorksove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snorksove_v-intr_rel" ].

snu_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-intrObl_rel" ].

snu_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-intrPrtcl_rel" ].

snu_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-intr_rel" ].

snu_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-trPrtcl_rel" ].

snu_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-tr_rel" ].

snu_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "snu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snu_v-tr_rel" ].

snubbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snubbe_v-intr_rel" ].

snubbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snubbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snubbe_v-tr_rel" ].

snuble_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snuble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snuble_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

snuble_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snuble" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snuble_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

snuble_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snuble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuble_v-intr_rel" ].

snufse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snufse_v-intr_rel" ].

snultre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "snultre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snultre_v-intrPrtcl_rel" ].

snultre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snultre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snultre_v-tr_rel" ].

;snuppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "snuppe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_snuppe_v-trScpr_rel" ].

snuppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuppe_v-tr_rel" ].

snurpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snurpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

snurpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "snurpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snurpe_v-tr_rel" ].

snurre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "snurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snurre_v-intrPrtcl_rel" ].

snurre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snurre_v-intr_rel" ].

snurre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "snurre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snurre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC rundt-k ].

snuse_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "snuse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snuse_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

snuse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "snuse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snuse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

snuse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "snuse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuse_v-intr_rel" ].

snuse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "snuse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

snuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuske_v-intr_rel" ].

snuske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "snuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snuske_v-trScprShft_rel" ].

snusmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snusmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snusmale_v-tr_rel" ].

snylte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "snylte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_snylte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

snylte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snylte_v-intr_rel" ].

snyte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "snyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snyte_v-intrObl_rel" ].

snyte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "snyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snyte_v-trObl_rel" ].

snyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "snyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snyte_v-tr_rel" ].

snyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "snyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snyte_v-tr_rel" ].

snåle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "snåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snåle_v-intr_rel" ].

snåle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "snåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snåle_v-trScprShft_rel" ].

snåve_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "snåve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snåve_v-intr_rel" ].

snø_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "snø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snø_v-intrPrtcl_rel" ].

snøfle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snøfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøfle_v-intr_rel" ].

snøfte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snøfte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøfte_v-intr_rel" ].

snøgge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "snøgge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøgge_v-tr_rel" ].

snøre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "snøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøre_v-trPrtcl_rel" ].

snøre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "snøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

snøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "snøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøre_v-tr_rel" ].

snørekjøre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "snørekjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snørekjøre_v-intr_rel" ].

snørekjøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "snørekjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snørekjøre_v-intr_rel" ].

snøse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "snøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøse_v-intr_rel" ].

snøvle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "snøvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøvle_v-intr_rel" ].

snøye_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "snøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøye_v-intrObl_rel" ].

snøye_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "snøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_snøye_v-tr_rel" ].

sogne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sogne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sogne_v-intrObl_rel" ].

sokke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sokke_v-tr_rel" ].

sokne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sokne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sokne_v-intrObl_rel" ].

sole_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sole_v-tr_rel" ].

sole_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sole" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sole_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

sole_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sole_v-tr_rel" ].

solidarisere_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "solidarisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_solidarisere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sollisitere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sollisitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sollisitere_v-intr_rel" ].

sollisitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sollisitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sollisitere_v-tr_rel" ].

solmisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "solmisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_solmisere_v-intr_rel" ].

somle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "somle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_somle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

somle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "somle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_somle_v-intr_rel" ].

somle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "somle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_somle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

somres_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "somres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_somres_v-intrImpers_rel" ].

sondere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sondere_v-tr_rel" ].

sondre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sondre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sondre_v-intrObl_rel" ].

sone_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sone" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sone_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

sone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sone_v-tr_rel" ].

sope_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sope_v-intr_rel" ].

sope_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "sope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sope_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

sope_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sope_v-tr_rel" ].

soppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "soppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_soppe_v-intr_rel" ].

sordinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sordinere_v-intr_rel" ].

sordinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sordinere_v-tr_rel" ].

sortere_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sortere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sortere_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

sortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sortere_v-tr_rel" ].

sose_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "sose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sose_v-intr_rel" ].

sose_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "sose" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sose_v-intr_rel" ].

sosialisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sosialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sosialisere_v-tr_rel" ].

sosialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sosialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sosialisere_v-tr_rel" ].

sote_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sote_v-intr_rel" ].

sote_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sote_v-trPrtcl_rel" ].

sote_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sote_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

sote_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sote" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sote_v-tr_rel" ].

sove_tr-arg1-refl-secpred := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sove_v-trScpr_rel" ].

sovne_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sovne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sovne_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

sovne_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sovne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sovne_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

sovne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sovne_v-intrPrtcl_rel" ].

sovne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sovne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sovne_v-intr_rel" ].

spa_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "spa" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spa_v-intr_rel" ].

spa_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "spa" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spa_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

spa_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spa" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spa_v-tr_rel" ].

spakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spakne_v-intr_rel" ].

spalte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spalte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spalte_v-tr_rel" ].

spandere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spandere_v-intr_rel" ].

spandere_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "spandere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spandere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spandere_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "spandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spandere_v-trScprShft_rel" ].

spandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spandere_v-tr_rel" ].

spane_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spane" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spane_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spane_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spane_v-intr_rel" ].

spanke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "spanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spanke_v-intr_rel" ].

spanke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spanke_v-intr_rel" ].

spankulere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "spankulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spankulere_v-intr_rel" ].

spankulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spankulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spankulere_v-intr_rel" ].

spanske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "spanske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spanske_v-tr_rel" ].

spante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spante_v-tr_rel" ].

spare_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spare_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spare_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spare_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

spare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spare_v-intr_rel" ].

spare_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spare_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

spare_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spare_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

spare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spare_v-tr_rel" ].

sparke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sparke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sparke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sparke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sparke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sparke_v-intrPrtcl_rel" ].

sparke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "sparke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sparke_v-trObl_rel" ].

sparkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sparkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sparkle_v-tr_rel" ].

sparre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sparre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sparre_v-intr_rel" ].

spase_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spase_v-intr_rel" ].

spasere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "spasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spasere_v-intr_rel" ].

spasere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spasere_v-intr_rel" ].

spasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spasere_v-tr_rel" ].

spe_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "spe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spe_v-intrObl_rel" ].

spe_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spe_v-tr_rel" ].

speede_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "speede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speede_v-intrPrtcl_rel" ].

speede_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "speede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speede_v-intr_rel" ].

speede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "speede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speede_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

speide_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "speide" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_speide_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

speide_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "speide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speide_v-intr_rel" ].

speile_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "speile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speile_v-tr_rel" ].

speile_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "speile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_speile_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

speile_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "speile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speile_v-tr_rel" ].

speilvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "speilvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speilvende_v-tr_rel" ].

speke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "speke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_speke_v-tr_rel" ].

spekke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "spekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekke_v-intrObl_rel" ].

spekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekke_v-tr_rel" ].

spekkmåle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spekkmåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekkmåle_v-tr_rel" ].

spekne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekne_v-intr_rel" ].

spekse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spekse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekse_v-intr_rel" ].

spekulere_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spekulere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spekulere_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

spekulere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spekulere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spekulere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spekulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spekulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spekulere_v-intr_rel" ].

spenne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spenne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spenne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spenne_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

spenne_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spenne_v-intr_rel" ].

spenne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spenne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

spenne_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spenne_v-trScprShft_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

spenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spenne_v-tr_rel" ].

sperre_tr-arg12-secpred-av := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sperre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sperre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

sperre_tr-arg12-secpred-igjen := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sperre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sperre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

sperre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sperre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sperre_v-tr_rel" ].

spesialisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spesialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spesialisere_v-tr_rel" ].

spesialisere_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spesialisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spesialisere_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

spesialisere_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spesialisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spesialisere_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spesialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spesialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spesialisere_v-tr_rel" ].

spesifisere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "spesifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spesifisere_v-trScpr_rel" ].

spesifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spesifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spesifisere_v-tr_rel" ].

spidde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spidde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spidde_v-tr_rel" ].

spikke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "spikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikke_v-intr_rel" ].

spikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "spikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

spikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikke_v-tr_rel" ].

spikre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikre_v-intr_rel" ].

spikre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "spikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikre_v-trScpr_rel" ].

spikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spikre_v-tr_rel" ].

spildre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spildre_v-tr_rel" ].

spile_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "spile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spile_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjen-k ].

spille_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "spille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spille_v-ditr_rel" ].

spille_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spille_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

spille_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spille" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spille_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spille_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "spille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spille_v-trScpr_rel" ].

spille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spille_v-tr_rel" ].

spinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spinke_v-intr_rel" ].

spinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spinke_v-tr_rel" ].

spinne_intr-obl-rundt := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spinne_v-intrObl_rel",
            LOCAL.KEY-SPEC rundt-k ] ].

spinne_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spinne_v-intr_rel" ].

spinne_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spinne_v-tr_rel" ].

spionere_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spionere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spionere_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spionere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spionere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spionere_v-intr_rel" ].

spiralisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spiralisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spiralisere_v-tr_rel" ].

spire_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "spire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spire_v-intrPrtcl_rel" ].

spire_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spire_v-intr_rel" ].

spise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spise_v-intr_rel" ].

spise_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spise_v-trObl_rel" ].

spise_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spise_v-trScpr_rel" ].

spisse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spisse_v-tr_rel" ].

spissformulere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "spissformulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spissformulere_v-tr_rel" ].

spissformulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spissformulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spissformulere_v-tr_rel" ].

spjelke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spjelke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjelke_v-tr_rel" ].

spjette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "spjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjette_v-intrObl_rel" ].

spjette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spjette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjette_v-intr_rel" ].

spjåke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "spjåke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjåke_v-trPrtcl_rel" ].

spjære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "spjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjære_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

spjære_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "spjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spjære_v-tr_rel" ].

spleise_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spleise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spleise_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spleise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spleise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spleise_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

spleise_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spleise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spleise_v-tr_rel" ].

splintre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "splintre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_splintre_v-tr_rel" ].

splitte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "splitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_splitte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

splitte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "splitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_splitte_v-tr_rel" ].

spole_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "spole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spole_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

spole_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spole_v-tr_rel" ].

spolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "spolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spolere_v-tr_rel" ].

sponse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sponse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sponse_v-tr_rel" ].

spore_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "spore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spore_v-intrObl_rel" ].

spore_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "spore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spore_v-intrPrtcl_rel" ].

spore_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "spore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spore_v-trObl_rel" ].

spore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spore_v-tr_rel" ].

sporte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sporte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sporte_v-intr_rel" ].

spotte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "spotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spotte_v-trObl_rel" ].

spotte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spotte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spotte_v-tr_rel" ].

sprade_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprade_v-intr_rel" ].

sprade_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sprade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprade_v-intr_rel" ].

sprake_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "sprake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprake_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

sprake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sprake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprake_v-intr_rel" ].

spraye_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "spraye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spraye_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

spraye_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "spraye" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spraye_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spraye_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spraye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spraye_v-tr_rel" ].

spre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "spre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spre_v-trScpr_rel" ].

spre_tr-dir := v-tr-obDir &
 [ INFLECTION finstr-dd,
   STEM < "spre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spre_v-tr_rel" ].

spre_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "spre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spre_v-tr_rel" ].

spre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spre_v-tr_rel" ].

sprede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprede_v-trScpr_rel" ].

sprede_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprede_v-tr_rel" ].

sprede_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprede_v-tr_rel" ].

sprede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprede_v-tr_rel" ].

spreie_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "spreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spreie_v-trScpr_rel" ].

spreie_tr-dir := v-tr-obDir &
 [ INFLECTION finstr-dd,
   STEM < "spreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spreie_v-tr_rel" ].

spreie_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "spreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spreie_v-tr_rel" ].

spreie_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spreie_v-tr_rel" ].

sprekke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "sprekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprekke_v-intr_rel" ].

sprelle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sprelle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprelle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sprenge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "sprenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprenge_v-trScpr_rel" ].

sprenge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sprenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprenge_v-tr_rel" ].

sprenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sprenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprenge_v-tr_rel" ].

sprengkjøre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sprengkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprengkjøre_v-intr_rel" ].

sprenglese_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sprenglese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprenglese_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

sprenglese_intr-obl-igjennom := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sprenglese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprenglese_v-intrObl_rel",
            LOCAL.KEY-SPEC igjennom-k ] ].

sprenglese_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sprenglese" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprenglese_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sprenglese_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sprenglese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprenglese_v-intr_rel" ].

sprette_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "sprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprette_v-intr_rel" ].

sprette_subjdir-pres := v-intrPresnt-presDir &
 [ INFLECTION nonfstr-strong,
   STEM < "sprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprette_v-intr_rel" ].

sprette_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "sprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprette_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

sprette_tr-obl-over := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "sprette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprette_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

sprette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sprette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprette_v-tr_rel" ].

spri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spri_v-tr_rel" ].

sprike_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "sprike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprike_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sprike_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "sprike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprike_v-intr_rel" ].

springe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "springe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_springe_v-intr_rel" ].

springe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "springe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_springe_v-intrPrtcl_rel" ].

springe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "springe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_springe_v-intr_rel" ].

sprinte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprinte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprinte_v-intr_rel" ].

sprinte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sprinte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprinte_v-intr_rel" ].

sprite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sprite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

sprudle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprudle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprudle_v-intr_rel" ].

sprudle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sprudle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprudle_v-intr_rel" ].

sprute_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprute_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sprute_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprute_v-intrPrtcl_rel" ].

sprute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprute_v-intr_rel" ].

sprute_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprute_v-trScpr_rel" ].

sprute_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprute_v-tr_rel" ].

sprute_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sprute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprute_v-tr_rel" ].

sprutregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "sprutregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprutregne_v-intrImpers_rel" ].

sprøsteike_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sprøsteike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøsteike_v-tr_rel" ].

sprøsteke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sprøsteke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøsteke_v-tr_rel" ].

sprøyte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sprøyte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprøyte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sprøyte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sprøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøyte_v-trScpr_rel" ].

sprøyte_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "sprøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøyte_v-tr_rel" ].

sprøyte_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "sprøyte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sprøyte_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

sprøyte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sprøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøyte_v-tr_rel" ].

sprøytelakkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sprøytelakkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sprøytelakkere_v-tr_rel" ].

spunse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spunse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spunse_v-tr_rel" ].

spurtbeseire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spurtbeseire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spurtbeseire_v-tr_rel" ].

spurte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "spurte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spurte_v-intr_rel" ].

spurte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spurte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spurte_v-intr_rel" ].

spy_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "spy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spy_v-intr_rel" ].

spy_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "spy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spy_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

spyle_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "spyle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spyle_v-tr_rel" ].

spytte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "spytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spytte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

spytte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "spytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spytte_v-intrPrtcl_rel" ].

spytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "spytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spytte_v-intr_rel" ].

spytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spytte_v-tr_rel" ].

spå_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "spå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spå_v-ditr_rel" ].

spå_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "spå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spå_v-intrObl_rel" ].

spå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "spå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spå_v-tr_rel" ].

spå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "spå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spå_v-tr_rel" ].

spøke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "spøke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spøke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

spøke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "spøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spøke_v-intr_rel" ].

spørre_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spørre_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

spørre_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spørre_v-intr_rel" ].

spørre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spørre_v-trPrtcl_rel" ].

spørre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spørre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

spørre_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spørre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

spørre_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_spørre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

spørre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "spørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spørre_v-tr_rel" ].

spørres_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "spørres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spørres_v-intr_rel" ].

spøte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "spøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_spøte_v-tr_rel" ].

stabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stabbe_v-intr_rel" ].

stabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stabbe_v-intr_rel" ].

stabilisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "stabilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stabilisere_v-tr_rel" ].

stabilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stabilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stabilisere_v-tr_rel" ].

stable_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stable_v-trScpr_rel" ].

stable_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stable" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stable_v-tr_rel" ].

stadfeste_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "stadfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stadfeste_v-tr_rel" ].

stadfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stadfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stadfeste_v-tr_rel" ].

staffere_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "staffere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_staffere_v-trPrtcl_rel" ].

staffere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "staffere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_staffere_v-tr_rel" ].

stage_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stage_v-intr_rel" ].

stagge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stagge_v-tr_rel" ].

stagge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stagge_v-tr_rel" ].

stagnere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stagnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stagnere_v-intr_rel" ].

stagvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stagvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stagvende_v-tr_rel" ].

stake_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stake_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stake_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stake_v-trPath_rel" ].

stake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stake_v-tr_rel" ].

stakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stakke_v-tr_rel" ].

stalle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stalle_v-intrObl_rel" ].

stalle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stalle_v-tr_rel" ].

stambokføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stambokføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stambokføre_v-tr_rel" ].

stamme_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stamme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stamme_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

stamme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stamme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stamme_v-intr_rel" ].

stampe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stampe_v-intrObl_rel" ].

stampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stampe_v-intr_rel" ].

stampe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stampe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

stampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stampe_v-tr_rel" ].

standardisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "standardisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_standardisere_v-tr_rel" ].

stane_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "stane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stane_v-intr_rel" ].

stange_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stange_v-intr_rel" ].

stange_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stange_v-intr_rel" ].

stange_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stange_v-trScpr_rel" ].

stange_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stange_v-tr_rel" ].

stange_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stange_v-trPath_rel" ].

stanke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stanke_v-intr_rel" ].

stanse_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stanse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stanse_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

stanse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stanse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stanse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

stanse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stanse_v-intrPrtcl_rel" ].

stanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stanse_v-intr_rel" ].

stanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stanse_v-tr_rel" ].

staple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "staple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_staple_v-tr_rel" ].

stappe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stappe_v-intrObl_rel" ].

stappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stappe_v-trScpr_rel" ].

stappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stappe_v-tr_rel" ].

starte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "starte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_starte_v-intrPrtcl_rel" ].

starte_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "starte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_starte_v-intrObl_rel" ].

starte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "starte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_starte_v-tr_rel" ].

stase_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stase_v-trPrtcl_rel" ].

stase_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stase_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stasjonere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stasjonere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

stasjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stasjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stasjonere_v-tr_rel" ].

statuere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "statuere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_statuere_v-tr_rel" ].

staure_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "staure" >,
   SYNSEM.LKEYS.KEYREL.PRED "_staure_v-tr_rel" ].

stave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stave_v-intr_rel" ].

stave_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stave_v-trPath_rel" ].

stave_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stave_v-tr_rel" ].

stavre_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stavre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stavre_v-trPath_rel" ].

ste_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION finstr-dd,
   STEM < "ste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ste_v-trScpr_rel" ].

ste_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "ste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ste_v-tr_rel" ].

stede_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stede_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

stede_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "stede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stede_v-trScpr_rel" ].

stede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stede_v-tr_rel" ].

stedfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stedfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stedfeste_v-tr_rel" ].

stege_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "stege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stege_v-intr_rel" ].

stege_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "stege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stege_v-intr_rel" ].

steike_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "steike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steike_v-intr_rel" ].

steike_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "steike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steike_v-tr_rel" ].

steile_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "steile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steile_v-intr_rel" ].

steine_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "steine" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_steine_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

steine_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "steine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steine_v-tr_rel" ].

steinsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "steinsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steinsette_v-tr_rel" ].

steke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "steke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steke_v-intr_rel" ].

steke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "steke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steke_v-tr_rel" ].

stekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stekke_v-tr_rel" ].

stele_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "stele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stele_v-intr_rel" ].

stele_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "stele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stele_v-trObl_rel" ].

stele_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "stele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stele_v-trObl_rel" ].

stele_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "stele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stele_v-trObl_rel" ].

stele_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "stele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stele_v-tr_rel" ].

stelle_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stelle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stelle_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

stelle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stelle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stelle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

stelle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "stelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stelle_v-tr_rel" ].

stelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stelle_v-tr_rel" ].

stemme_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stemme_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

stemme_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stemme_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

stemme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemme_v-intrPrtcl_rel" ].

stemme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemme_v-intr_rel" ].

stemme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemme_v-tr_rel" ].

stemne_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemne_v-intr_rel" ].

stemne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "stemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemne_v-trObl_rel" ].

stemne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "stemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemne_v-trScpr_rel" ].

stemne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stemne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemne_v-tr_rel" ].

stemple_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "stemple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemple_v-trScpr_rel" ].

stemple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stemple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stemple_v-tr_rel" ].

stenge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenge_v-intrObl_rel" ].

stenge_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenge_v-intr_rel" ].

stenge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

stenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenge_v-tr_rel",
   EXTRACTED-FROM -].

stenke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenke_v-tr_rel" ].

stenografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stenografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stenografere_v-tr_rel" ].

stensilere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stensilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stensilere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stensilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stensilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stensilere_v-tr_rel" ].

steppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "steppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steppe_v-intrObl_rel" ].

steppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "steppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steppe_v-intrPrtcl_rel" ].

steppe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "steppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_steppe_v-intr_rel" ].

stereotypere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stereotypere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stereotypere_v-tr_rel" ].

sterilisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sterilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sterilisere_v-tr_rel" ].

sterilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sterilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sterilisere_v-tr_rel" ].

sterkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sterkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sterkne_v-intr_rel" ].

sterte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sterte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sterte_v-intr_rel" ].

stette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stette_v-tr_rel" ].

stevje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stevje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevje_v-intr_rel" ].

stevje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stevje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevje_v-tr_rel" ].

stevne_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevne_v-intr_rel" ].

stevne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "stevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevne_v-trObl_rel" ].

stevne_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "stevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevne_v-trScpr_rel" ].

stevne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stevne_v-tr_rel" ].

stifte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stifte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

stifte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stifte_v-tr_rel" ].

stige_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "stige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stige_v-intrObl_rel" ].

stige_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "stige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stige_v-intrPrtcl_rel" ].

stige_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "stige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stige_v-intr_rel" ].

stigmatisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "stigmatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stigmatisere_v-tr_rel" ].

stigmatisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stigmatisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stigmatisere_v-tr_rel" ].

stikke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stikke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

stikke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikke_v-intr_rel" ].

stikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

stikke_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stikke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

stikke_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikke_v-trPath_rel" ].

stikke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "stikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikke_v-tr_rel" ].

stikle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikle_v-intr_rel" ].

stikle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stikle_v-intr_rel" ].

stile_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "stile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stile_v-intrObl_rel" ].

stile_tr-obl := v-trObl &
 [ INFLECTION nonfstr,
   STEM < "stile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stile_v-trObl_rel" ].

stilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stilisere_v-tr_rel" ].

stille_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stille_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-trScpr_rel" ].

stille_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-trPath_rel" ].

stille_tr-refl-adj := v-trScpr-scObNrg_obRefl_scAdj &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-trScpr_rel" ].

;stille_tr-secpr-nonv := v-trScpr-scObNrg_scAdjORPredprtcl &
; [ INFLECTION nonfstr-te,
;   STEM < "stille" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_stille_v_rel" ].

stille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-tr_rel" ].

stille_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "stille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stille_v-tr_rel" ].

stilne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "stilne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stilne_v-intrImpers_rel" ].

stilne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stilne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stilne_v-intr_rel" ].

stiltre_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stiltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stiltre_v-trPath_rel" ].

stime_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stime_v-intr_rel" ].

stime_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stime_v-intrPrtcl_rel" ].

stime_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stime_v-intr_rel" ].

stime_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stime_v-tr_rel" ].

stimle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stimle_v-intr_rel" ].

stimle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stimle_v-intrPrtcl_rel" ].

stimrense_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stimrense" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stimrense_v-tr_rel" ].

stimulere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stimulere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stimulere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

stimulere_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "stimulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stimulere_v-trObl_rel" ].

stimulere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "stimulere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stimulere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

stimulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stimulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stimulere_v-tr_rel" ].

stinge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "stinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stinge_v-tr_rel" ].

stinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stinke_v-intr_rel" ].

stiple_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stiple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stiple_v-tr_rel" ].

stipulere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "stipulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stipulere_v-trObl_rel" ].

stipulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stipulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stipulere_v-tr_rel" ].

stirre_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stirre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stirre_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

stirre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stirre_v-intr_rel" ].

stive_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "stive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stive_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "stive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stive_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

stive_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "stive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stive_v-tr_rel" ].

stivfryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "stivfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stivfryse_v-intr_rel" ].

stivne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stivne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stivne_v-intr_rel" ].

stivpiske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stivpiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stivpiske_v-tr_rel" ].

stjele_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stjele_v-intr_rel" ].

stjele_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-te,
   STEM < "stjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stjele_v-trObl_rel" ].

stjele_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "stjele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stjele_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

stjele_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "stjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stjele_v-trObl_rel" ].

stjele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stjele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stjele_v-tr_rel" ].

stoffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stoffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stoffe_v-tr_rel" ].

stokke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stokke_v-tr_rel" ].

stokke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stokke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stokke_v-tr_rel" ].

stolpe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stolpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stolpe_v-intr_rel" ].

stolpe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stolpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stolpe_v-intrObl_rel" ].

stolpre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stolpre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stolpre_v-intr_rel" ].

stolpre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stolpre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stolpre_v-intrObl_rel" ].

stoltsere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stoltsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stoltsere_v-intrObl_rel" ].

stoltsere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stoltsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stoltsere_v-intr_rel" ].

stomle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "stomle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stomle_v-intr_rel" ].

stomle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stomle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stomle_v-intr_rel" ].

stoppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stoppe_v-intrPrtcl_rel" ].

stoppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stoppe_v-tr_rel" ].

storle_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "storle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_storle_v-intr_rel" ].

storme_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "storme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_storme_v-intrImpers_rel" ].

storme_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "storme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_storme_v-intr_rel" ].

storme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "storme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_storme_v-tr_rel" ].

stormgjø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "stormgjø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stormgjø_v-intr_rel" ].

storskrike_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "storskrike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_storskrike_v-intr_rel" ].

stortrives_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "stortrives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stortrives_v-intr_rel" ].

stotre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stotre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stotre_v-intr_rel" ].

straffe_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "straffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_straffe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

straffe_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "straffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_straffe_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

straffe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "straffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_straffe_v-tr_rel" ].

stramme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stramme_v-intr_rel" ].

stramme_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stramme_v-trPrtcl_rel" ].

stramme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stramme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stramme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stramme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stramme_v-tr_rel" ].

strande_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strande_v-intr_rel" ].

strangulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "strangulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strangulere_v-tr_rel" ].

strante_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strante_v-intr_rel" ].

stratifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stratifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stratifisere_v-tr_rel" ].

strebe_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "strebe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_strebe_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

streife_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "streife" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streife_v-intr_rel" ].

streife_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "streife" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streife_v-tr_rel" ].

streike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "streike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streike_v-intr_rel" ].

streite_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "streite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streite_v-trPrtcl_rel" ].

streite_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "streite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streite_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

streke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "streke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streke_v-intrObl_rel" ].

streke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "streke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

strekke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "strekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strekke_v-intrPrtcl_rel" ].

strekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "strekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

strekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "strekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strekke_v-tr_rel" ].

strekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "strekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strekke_v-tr_rel" ].

strende_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "strende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strende_v-intr_rel" ].

;strende_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "strende" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_strende_v-trScpr_rel" ].

strende_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strende_v-tr_rel" ].

strene_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "strene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strene_v-intr_rel" ].

;strene_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "strene" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_strene_v-trScpr_rel" ].

strenge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "strenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strenge_v-tr_rel" ].

strengle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strengle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strengle_v-tr_rel" ].

stresse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stresse_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

stresse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stresse_v-intr_rel" ].

stresse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stresse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stresse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

streve_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "streve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_streve_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

streve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "streve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streve_v-intr_rel" ].

streve_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-de,
   STEM < "streve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_streve_v-intrObl_rel" ].

stri_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "stri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stri_v-intrObl_rel" ].

stri_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "stri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stri_v-intr_rel" ].

stri_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION finstr-dd,
   STEM < "stri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stri_v-trPath_rel" ].

stride_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stride_v-intrObl_rel" ].

stride_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stride_v-intr_rel" ].

stride_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stride_v-trPath_rel" ].

stridgråte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "stridgråte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stridgråte_v-intr_rel" ].

stridregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "stridregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stridregne_v-intrImpers_rel" ].

strigle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strigle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strigle_v-tr_rel" ].

strigråte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "strigråte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strigråte_v-intr_rel" ].

strikke_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "strikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strikke_v-ditr_rel" ].

strikke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "strikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strikke_v-intrObl_rel" ].

strikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strikke_v-intr_rel" ].

strikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "strikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strikke_v-trScpr_rel" ].

strikke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strikke_v-tr_rel" ].

strimle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "strimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strimle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

strimle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strimle_v-tr_rel" ].

stripe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stripe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stripe_v-tr_rel" ].

strippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strippe_v-intr_rel" ].

striregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "striregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_striregne_v-intrImpers_rel" ].

stritte_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stritte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stritte_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

stritte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "stritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stritte_v-intrPrtcl_rel" ].

stritte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stritte_v-intr_rel" ].

;stroppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "stroppe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_stroppe_v-trScpr_rel" ].

stroppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stroppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stroppe_v-tr_rel" ].

strukturere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "strukturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strukturere_v-tr_rel" ].

strukturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "strukturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strukturere_v-tr_rel" ].

strupe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strupe_v-tr_rel" ].

strutte_intr-obl-av := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "strutte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_strutte_v-intrObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

strutte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strutte_v-intr_rel" ].

stryke_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stryke_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

stryke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stryke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

stryke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stryke_v-trObl_rel" ].

stryke_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stryke_v-trObl_rel" ].

stryke_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stryke_v-trScprShft_rel" ].

stryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "stryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stryke_v-tr_rel" ].

strype_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "strype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strype_v-tr_rel" ].

stråle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stråle_v-intr_rel" ].

stråle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "stråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stråle_v-trScpr_rel" ].

strø_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "strø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strø_v-trScpr_rel" ].

strø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "strø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strø_v-tr_rel" ].

strømme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "strømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strømme_v-intrObl_rel" ].

strømme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "strømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strømme_v-intrPrtcl_rel" ].

strømme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "strømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_strømme_v-intr_rel" ].

studere_intr := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "studere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_studere_v-intr_rel"] ].

studere_intr-obl-ved := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "studere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_studere_v-intrObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

studere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "studere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_studere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

studere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "studere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_studere_v-tr_rel" ].

stue_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stue_v-trPrtcl_rel" ].

stue_tr-arg1-secpred := v-trScpr-scObNrgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stue_v-trScpr_rel" ].

stue_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stue_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

stue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stue_v-tr_rel" ].

stuke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stuke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stuke_v-tr_rel" ].

stulle_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stulle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stulle_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

stulle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stulle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stulle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

stulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stulle_v-intr_rel" ].

stumpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stumpe_v-intr_rel" ].

stumpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stumpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stumpe_v-tr_rel" ].

stunde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stunde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stunde_v-intrObl_rel" ].

stunde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stunde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stunde_v-intr_rel" ].

stupe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "stupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stupe_v-intr_rel" ].

stupe_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "stupe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stupe_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

stupe_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "stupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stupe_v-intr_rel" ].

stupe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "stupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stupe_v-tr_rel" ].

sture_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sture" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sture_v-intr_rel" ].

sturte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sturte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sturte_v-intr_rel" ].

stusse_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stusse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stusse_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

stusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stusse_v-intr_rel" ].

stusse_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "stusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stusse_v-tr_rel" ].

stusse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stusse_v-tr_rel" ].

stusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stusse_v-tr_rel" ].

stutne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stutne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stutne_v-intr_rel" ].

stutte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stutte_v-tr_rel" ].

stuve_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stuve_v-trPrtcl_rel" ].

stuve_tr-arg1-secpred := v-trScpr-scObNrgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stuve_v-trScpr_rel" ].

stuve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stuve_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

stuve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "stuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stuve_v-tr_rel" ].

stygges_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stygges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stygges_v-intrObl_rel" ].

stygges_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stygges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stygges_v-intr_rel" ].

stykke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "stykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stykke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

stylte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stylte_v-intrObl_rel" ].

stylte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stylte_v-intr_rel" ].

stylte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "stylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stylte_v-trPrtcl_rel" ].

styltre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "styltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styltre_v-intrObl_rel" ].

styltre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "styltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styltre_v-intr_rel" ].

styltre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "styltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styltre_v-trPrtcl_rel" ].

styre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styre_v-intr_rel" ].

styre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_styre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

styre_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_styre_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

styre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styre_v-intr_rel" ].

styre_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styre_v-tr_rel" ].

styre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "styre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styre_v-tr_rel" ].

styrke_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "styrke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_styrke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

styrke_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "styrke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_styrke_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

styrke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "styrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrke_v-tr_rel" ].

styrtblø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "styrtblø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrtblø_v-intr_rel" ].

styrte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "styrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrte_v-intr_rel" ].

styrte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "styrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrte_v-intrPrtcl_rel" ].

styrte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "styrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrte_v-intr_rel" ].

styrte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "styrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrte_v-trScpr_rel" ].

styrte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "styrte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrte_v-tr_rel" ].

styrtregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "styrtregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_styrtregne_v-intrImpers_rel" ].

stå_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stå_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

stå_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stå_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

stå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

stå_intr-obl-ved := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stå_v-intrObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

stå_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stå_v-intrPrtcl_rel" ].

stå_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stå_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

stå_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "stå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stå_v-tr_rel" ].

;stå_tv := v-tr &
; [ INFLECTION finstr-tt,
;   STEM < "stå" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_stå_v-tr_rel" ].

ståke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "ståke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ståke_v-intrObl_rel" ].

ståke_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "ståke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ståke_v-intr_rel" ].

stålsette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "stålsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stålsette_v-tr_rel" ].

stålsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "stålsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stålsette_v-tr_rel" ].

stø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "stø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stø_v-intr_rel" ].

stø_tr-dir := v-tr-obDir &
 [ INFLECTION finstr-dd,
   STEM < "stø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stø_v-tr_rel" ].

stø_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "stø" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_stø_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

støe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "støe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støe_v-intr_rel" ].

støe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "støe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støe_v-tr_rel" ].

støe_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "støe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_støe_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

støkke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr,
   STEM < "støkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støkke_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

støkke_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "støkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støkke_v-intr_rel" ].

støkke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "støkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støkke_v-tr_rel" ].

støle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "støle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støle_v-intrObl_rel" ].

støle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "støle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støle_v-intr_rel" ].

stølne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stølne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stølne_v-intr_rel" ].

stønne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "stønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stønne_v-intrObl_rel" ].

stønne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "stønne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_stønne_v-intr_rel" ].

støpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "støpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k  ].

støpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "støpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støpe_v-tr_rel" ].

størkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "størkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_størkne_v-intr_rel" ].

støte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "støte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støte_v-intrObl_rel" ].

støte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "støte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støte_v-intrPrtcl_rel" ].

støte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "støte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støte_v-trScpr_rel" ].

støte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "støte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støte_v-trScprShft_rel" ].

støte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "støte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støte_v-tr_rel" ].

støtte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "støtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støtte_v-trScpr_rel" ].

støtte_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "støtte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_støtte_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

støtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "støtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støtte_v-tr_rel" ].

støve_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "støve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støve_v-intrImpers_rel" ].

støve_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "støve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støve_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

støve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "støve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støve_v-intr_rel" ].

støve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "støve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støve_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC av-k ].

støvsuge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "støvsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støvsuge_v-intrObl_rel" ].

støvsuge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "støvsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støvsuge_v-intr_rel" ].

støvsuge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "støvsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støvsuge_v-trScpr_rel" ].

støvsuge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "støvsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støvsuge_v-tr_rel" ].

støye_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "støye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støye_v-intr_rel" ].

støype_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "støype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støype_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

støype_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "støype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støype_v-tr_rel" ].

støyte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "støyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støyte_v-intrObl_rel" ].

støyte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "støyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støyte_v-intrPrtcl_rel" ].

støyte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "støyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støyte_v-trScpr_rel" ].

støyte_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "støyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støyte_v-trScprShft_rel" ].

støyte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "støyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_støyte_v-tr_rel" ].

subbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "subbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subbe_v-intr_rel" ].

subbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "subbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subbe_v-intr_rel" ].

subbe_tr-arg12-secpred := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "subbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subbe_v-trScpr_rel" ].

sublimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sublimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sublimere_v-tr_rel" ].

subordinere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "subordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subordinere_v-tr_rel" ].

subordinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "subordinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subordinere_v-tr_rel" ].

subsidiere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "subsidiere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subsidiere_v-tr_rel" ].

subskribere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "subskribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subskribere_v-intrObl_rel" ].

substantivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "substantivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_substantivere_v-tr_rel" ].

substituere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "substituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_substituere_v-trObl_rel" ].

substituere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "substituere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_substituere_v-tr_rel" ].

subsumere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "subsumere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subsumere_v-tr_rel" ].

subtrahere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "subtrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subtrahere_v-intr_rel" ].

subtrahere_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "subtrahere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_subtrahere_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

subtrahere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "subtrahere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subtrahere_v-tr_rel" ].

subvenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "subvenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_subvenere_v-tr_rel" ].

suffigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "suffigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suffigere_v-tr_rel" ].

sufflere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "sufflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sufflere_v-intr_rel" ].

sufflere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sufflere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sufflere_v-tr_rel" ].

suge_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "suge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_suge_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

suge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "suge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suge_v-intr_rel" ].

suge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "suge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suge_v-trScpr_rel" ].

suge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-de,
   STEM < "suge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suge_v-trScprShft_rel" ].

suge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "suge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suge_v-tr_rel" ].

suggerere_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "suggerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suggerere_v-intrObl_rel" ].

suggerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "suggerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suggerere_v-tr_rel" ].

sukke_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sukke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sukke_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

sukke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sukke_v-intr_rel" ].

sukle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sukle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sukle_v-intr_rel" ].

sukre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sukre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sukre_v-tr_rel" ].

suksedere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "suksedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suksedere_v-tr_rel" ].

sulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulke_v-intr_rel" ].

sulke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulke_v-trScpr_rel" ].

sulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulle_v-intr_rel" ].

sulle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulle_v-tr_rel" ].

sulte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulte_v-intr_rel" ].

sulte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

sulte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulte_v-tr_rel" ].

sulte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sulte_v-tr_rel" ].

sultefôre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sultefôre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sultefôre_v-tr_rel" ].

summe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "summe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_summe_v-intr_rel" ].

summe_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "summe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_summe_v-trObl_rel" ].

summe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "summe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_summe_v-tr_rel" ].

summere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "summere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_summere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

summere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "summere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_summere_v-tr_rel" ].

supe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "supe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supe_v-intr_rel" ].

supe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "supe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supe_v-trScpr_rel" ].

supe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "supe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supe_v-trScprShft_rel" ].

supe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "supe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supe_v-tr_rel" ].

supere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "supere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supere_v-intr_rel" ].

supinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "supinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supinere_v-tr_rel" ].

supplere_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "supplere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_supplere_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

supplere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "supplere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supplere_v-tr_rel" ].

supplikkere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "supplikkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supplikkere_v-trObl_rel" ].

supponere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "supponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supponere_v-tr_rel" ].

supponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "supponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supponere_v-tr_rel" ].

supprimere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "supprimere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_supprimere_v-tr_rel" ].

surfe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "surfe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surfe_v-intr_rel" ].

surfe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "surfe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surfe_v-intr_rel" ].

surkle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "surkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surkle_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

surkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "surkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surkle_v-intr_rel" ].

surle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "surle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surle_v-intr_rel" ].

surmule_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "surmule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surmule_v-intr_rel" ].

surne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "surne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surne_v-intr_rel" ].

surre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "surre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surre_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

surre_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "surre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_surre_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

surre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "surre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surre_v-intr_rel" ].

surre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "surre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

surre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "surre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_surre_v-tr_rel" ].

suse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "suse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suse_v-intr_rel" ].

suse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "suse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suse_v-intr_rel" ].

susle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "susle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_susle_v-intr_rel" ].

susle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "susle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_susle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

suspendere_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "suspendere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_suspendere_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

suspendere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "suspendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_suspendere_v-tr_rel" ].

susse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "susse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_susse_v-intr_rel" ].

susse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "susse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_susse_v-tr_rel" ].

sutenere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sutenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sutenere_v-tr_rel" ].

sutre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sutre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sutre_v-intr_rel" ].

sutte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sutte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sutte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

svabre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svabre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svabre_v-tr_rel" ].

svage_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svage_v-intr_rel" ].

svaie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svaie_v-intr_rel" ].

svale_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "svale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svale_v-tr_rel" ].

svale_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "svale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svale_v-tr_rel" ].

svalne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svalne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svalne_v-intr_rel" ].

svampe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "svampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svampe_v-tr_rel" ].

svampe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svampe_v-tr_rel" ].

svanse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "svanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svanse_v-intr_rel" ].

svanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svanse_v-intr_rel" ].

svare_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-ditr_rel" ].

svare_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-ditr_rel" ].

svare_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svare_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

svare_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svare_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

svare_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svare_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

svare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-intr_rel" ].

svare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-tr_rel" ].

svare_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-tr_rel" ].

svare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "svare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svare_v-tr_rel" ].

svarteliste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svarteliste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svarteliste_v-tr_rel" ].

svartmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "svartmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svartmale_v-tr_rel" ].

svartne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "svartne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svartne_v-intrImpers_rel" ].

svartne_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "svartne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svartne_v-intrImpersObl_rel" ].

svartne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svartne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svartne_v-intr_rel" ].

svarve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svarve_v-intr_rel" ].

svarve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svarve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svarve_v-tr_rel" ].

sveipe_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sveipe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sveipe_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

sveipe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sveipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveipe_v-tr_rel" ].

sveise_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sveise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveise_v-intr_rel" ].

sveise_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sveise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveise_v-intr_rel" ].

sveise_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sveise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveise_v-trScpr_rel" ].

sveise_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "sveise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveise_v-tr_rel" ].

sveive_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sveive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveive_v-trScpr_rel" ].

sveive_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sveive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveive_v-tr_rel" ].

svekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svekke_v-tr_rel" ].

svelge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelge_v-intr_rel" ].

svelge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "svelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

svelge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svelge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelge_v-tr_rel" ].

svelgje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svelgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelgje_v-intr_rel" ].

svelgje_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "svelgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelgje_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

svelgje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svelgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelgje_v-tr_rel" ].

svelle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelle_v-intrObl_rel" ].

svelle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "svelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelle_v-intr_rel" ].

svelte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "svelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelte_v-intr_rel" ].

svelte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "svelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ihjel-k ].

svelte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "svelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelte_v-tr_rel" ].

svelte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "svelte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svelte_v-tr_rel" ].

sverge_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sverge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sverge_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

sverge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverge_v-intr_rel" ].

sverge_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "sverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverge_v-tr_rel" ].

sverge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sverge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverge_v-tr_rel" ].

sverje_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverje_v-intrObl_rel" ].

sverje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverje_v-intr_rel" ].

sverje_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "sverje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverje_v-tr_rel" ].

sverme_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sverme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverme_v-intr_rel" ].

sverme_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sverme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sverme_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

sverme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sverme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverme_v-intr_rel" ].

sverte_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "sverte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverte_v-trObl_rel" ].

sverte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sverte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverte_v-tr_rel" ].

sverte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sverte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sverte_v-tr_rel" ].

svette_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "svette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svette_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

svette_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "svette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svette_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

svette_intr-obl-under := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "svette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svette_v-intrObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

svette_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "svette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svette_v-intrPrtcl_rel" ].

svette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svette_v-intr_rel" ].

sveve_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-de,
   STEM < "sveve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveve_v-intr_rel" ].

sveve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "sveve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sveve_v-intr_rel" ].

svi_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "svi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svi_v-intrObl_rel" ].

svi_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "svi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svi_v-intr_rel" ].

svi_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "svi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svi_v-tr_rel" ].

svike_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "svike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svike_v-tr_rel" ].

svikte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svikte_v-intr_rel" ].

svikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svikte_v-tr_rel" ].

svime_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "svime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svime_v-intr_rel" ].

svime_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "svime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svime_v-intrPrtcl_rel" ].

svime_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "svime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svime_v-intr_rel" ].

svimerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svimerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimerke_v-tr_rel" ].

svimeslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "svimeslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimeslå_v-tr_rel" ].

svimle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "svimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimle_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC for-k ].

svimle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimle_v-intr_rel" ].

svimre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "svimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimre_v-intrImpersObl_rel" ].

svimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svimre_v-intr_rel" ].

svindle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "svindle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svindle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

svindle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "svindle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svindle_v-trScprShft_rel" ].

svindle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svindle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svindle_v-tr_rel" ].

svine_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "svine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svine_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

svinebinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "svinebinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinebinde_v-tr_rel" ].

svinge_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "svinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinge_v-intr_rel" ].

svinge_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "svinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinge_v-tr_rel" ].

svinge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-te,
   STEM < "svinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinge_v-trPath_rel" ].

svinge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "svinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinge_v-tr_rel" ].

svinne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "svinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinne_v-intrPrtcl_rel" ].

svinne_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "svinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinne_v-intr_rel" ].

svinse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "svinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinse_v-intr_rel" ].

svinse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinse_v-intr_rel" ].

svinte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "svinte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinte_v-intrObl_rel" ].

svinte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "svinte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svinte_v-tr_rel" ].

svippe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "svippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svippe_v-tr_rel" ].

svire_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "svire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svire_v-intr_rel" ].

svirre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "svirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svirre_v-intr_rel" ].

svirre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svirre_v-intr_rel" ].

svive_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "svive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svive_v-intr_rel" ].

svive_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svive_v-intr_rel" ].

svivørde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "svivørde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svivørde_v-tr_rel" ].

svivøre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "svivøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svivøre_v-tr_rel" ].

svolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svolke_v-tr_rel" ].

svovle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "svovle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svovle_v-tr_rel" ].

svulme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "svulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svulme_v-intrObl_rel" ].

svulme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "svulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svulme_v-intrPrtcl_rel" ].

svulme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svulme_v-intr_rel" ].

svulne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "svulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svulne_v-intr_rel" ].

svuppe_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "svuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svuppe_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

svæve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "svæve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svæve_v-tr_rel" ].

svømme_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "svømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svømme_v-intr_rel" ].

svømme_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svømme_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

svømme_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svømme_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

svømme_intr-obl-under := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "svømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_svømme_v-intrObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

svømme_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "svømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svømme_v-intr_rel" ].

svøpe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "svøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svøpe_v-trObl_rel" ].

svøpe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "svøpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_svøpe_v-tr_rel" ].

swinge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "swinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_swinge_v-intr_rel" ].

sy_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "sy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sy_v-intr_rel" ].

sy_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "sy" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sy_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

syde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "syde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_syde_v-intr_rel" ].

sykemelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sykemelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykemelde_v-tr_rel" ].

sykemelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sykemelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykemelde_v-tr_rel" ].

sykle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "sykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykle_v-intr_rel" ].

sykle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykle_v-intr_rel" ].

sykle_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "sykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykle_v-tr_rel" ].

sykle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sykle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykle_v-tr_rel" ].

sykmelde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "sykmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykmelde_v-tr_rel" ].

sykmelde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "sykmelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykmelde_v-tr_rel" ].

sykne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sykne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykne_v-intrPrtcl_rel" ].

sykne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sykne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sykne_v-intr_rel" ].

sylte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "sylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sylte_v-intrPrtcl_rel" ].

sylte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sylte_v-intr_rel" ].

sylte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sylte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

sylte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sylte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sylte_v-tr_rel" ].

symbolisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "symbolisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_symbolisere_v-tr_rel" ].

symbolisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "symbolisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_symbolisere_v-tr_rel" ].

sympatisere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "sympatisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sympatisere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sympatistreike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sympatistreike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sympatistreike_v-intr_rel" ].

synde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "synde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synde_v-intrObl_rel" ].

synde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "synde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synde_v-intr_rel" ].

;syne_ditr := v-ditr &
; [ INFLECTION nonfstr,
;   STEM < "syne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_syne_v_rel" ].

;syne_ditr-subord := v-ditr-obDECL &
; [ INFLECTION nonfstr,
;   STEM < "syne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_syne_v_rel" ].

;syne_intr-obl := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "syne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_syne_v_rel" ].

;syne_tr-refl := v-tr-obRefl &
; [ INFLECTION nonfstr,
;   STEM < "syne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_syne_v_rel" ].

synes_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "synes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_synes_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

synes_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "synes" >,
   SYNSEM.LOCAL.CAT.QVAL.DOBJECT.LOCAL.CAT.HEAD.KEYS.KEY finit-comp-at,
   SYNSEM.LKEYS.KEYREL.PRED "_synes_v-tr_rel" ].

synfare_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "synfare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synfare_v-tr_rel" ].

synge_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "synge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_synge_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

synge_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "synge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_synge_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

synge_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "synge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_synge_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

synge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "synge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synge_v-intrPrtcl_rel" ].

;synge_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "synge" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_synge_v_rel" ].

synke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "synke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synke_v-intrPrtcl_rel" ].

synke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "synke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synke_v-intr_rel" ].

synkopere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "synkopere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synkopere_v-tr_rel" ].

synkronisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "synkronisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synkronisere_v-tr_rel" ].

synkverve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "synkverve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synkverve_v-tr_rel" ].

synliggjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "synliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synliggjøre_v-tr_rel" ].

synliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "synliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synliggjøre_v-tr_rel" ].

synse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "synse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synse_v-intrObl_rel" ].

synse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "synse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synse_v-intr_rel" ].

synse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "synse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_synse_v-tr_rel" ].

syntetisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "syntetisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_syntetisere_v-tr_rel" ].

syre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "syre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_syre_v-tr_rel" ].

syrne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "syrne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_syrne_v-intr_rel" ].

sysle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sysle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sysle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

sysselsette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "sysselsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sysselsette_v-tr_rel" ].

sysselsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sysselsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sysselsette_v-tr_rel" ].

systematisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "systematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_systematisere_v-tr_rel" ].

syte_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "syte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_syte_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

syte_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "syte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_syte_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

syte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "syte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_syte_v-intr_rel" ].

så_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "så" >,
   SYNSEM.LKEYS.KEYREL.PRED "_så_v-intr_rel" ].

så_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "så" >,
   SYNSEM.LKEYS.KEYREL.PRED "_så_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

så_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "så" >,
   SYNSEM.LKEYS.KEYREL.PRED "_så_v-tr_rel" ].

sålde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sålde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sålde_v-tr_rel" ].

;såle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "såle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_såle_v-trScpr_rel" ].

såle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "såle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_såle_v-tr_rel" ].

såpe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "såpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_såpe_v-trPrtcl_rel" ].

såpe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "såpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_såpe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

såre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "såre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_såre_v-tr_rel" ].

såte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "såte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_såte_v-tr_rel" ].

sælde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sælde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sælde_v-tr_rel" ].

særmerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "særmerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_særmerke_v-tr_rel" ].

særprege_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "særprege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_særprege_v-tr_rel" ].

sæte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "sæte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sæte_v-tr_rel" ].

sætre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sætre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sætre_v-intr_rel" ].

søke_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "søke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_søke_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

søke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "søke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søke_v-intr_rel" ].

søke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "søke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søke_v-tr_rel" ].

søke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "søke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søke_v-tr_rel" ].

søkke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-strong,
   STEM < "søkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søkke_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

søkke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-strong,
   STEM < "søkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søkke_v-intrPrtcl_rel" ].

søkke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "søkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søkke_v-intr_rel" ].

;søkke_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "søkke" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_søkke_v-trScpr_rel" ].

søkke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "søkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søkke_v-tr_rel" ].

søle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "søle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_søle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

; in semlab
;søle_intr-obl-på := v-intrObl-oblN &
; [ INFLECTION nonfstr,
;   STEM < "søle" >,
;   SYNSEM [ LKEYS.KEYREL.PRED "_søle_v_rel",
;            LOCAL.KEY-SPEC på-k ] ].

søle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "søle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søle_v-intr_rel" ].

søle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "søle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

sømme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sømme_v-intr_rel" ].

sømme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "sømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sømme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

sømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "sømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sømme_v-tr_rel" ].

sømme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "sømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sømme_v-tr_rel" ].

sønderrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "sønderrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sønderrive_v-tr_rel" ].

søple_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "søple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søple_v-intrPrtcl_rel" ].

søple_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "søple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søple_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

sørge_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "sørge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_sørge_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

sørge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "sørge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_sørge_v-intr_rel" ].

søte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "søte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_søte_v-tr_rel" ].

ta_ditr-refl-20 := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-ditr_rel" ].

ta_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-intrPrtcl_rel" ].

ta_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-trPrtcl_rel" ].

;hardly used without refl
;ta_tr-detachposs := v-trObl-oblPRTOFob &
; [ INFLECTION finstr-tt,
;   STEM < "ta" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-trObl_rel" ].

ta_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-trObl_rel" ].

ta_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-trScprShft_rel" ].

ta_tr-refl-obl-15 := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "ta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-trObl_rel" ].

; probably not needed...
;ta_tv := v-tr &
; [ INFLECTION finstr-tt,
;   STEM < "ta" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ta_v-tr_rel" ].

tabbe_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tabbe_v-trPrtcl_rel" ].

tabellarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tabellarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tabellarisere_v-tr_rel" ].

tabulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tabulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tabulere_v-tr_rel" ].

tafse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tafse_v-tr_rel" ].

tagge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tagge_v-tr_rel" ].

tagne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tagne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tagne_v-intr_rel" ].

takke_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "takke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_takke_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

takke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "takke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_takke_v-intrPrtcl_rel" ].

takke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "takke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_takke_v-intr_rel" ].

takke_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "takke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_takke_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

takke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "takke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_takke_v-tr_rel" ].

takle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "takle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_takle_v-tr_rel" ].

takse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "takse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_takse_v-intr_rel" ].

taksere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "taksere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_taksere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

taksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "taksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taksere_v-tr_rel" ].

taktere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "taktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taktere_v-intr_rel" ].

tale_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tale_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tale_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tale_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tale_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tale_v-intr_rel" ].

tale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tale_v-tr_rel" ].

talle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "talle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_talle_v-tr_rel" ].

tallfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tallfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tallfeste_v-tr_rel" ].

tampe_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tampe_v-tr_rel" ].

tamse_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tamse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tamse_v-intr_rel" ].

tane_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tane_v-intr_rel" ].

tangere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tangere_v-tr_rel" ].

tanke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tanke_v-intrPrtcl_rel" ].

tanke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tanke_v-intr_rel" ].

tanke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tanke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

tanke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tanke_v-tr_rel" ].

tape_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tape_v-intr_rel" ].

tape_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tape_v-tr_rel" ].

tape_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tape" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tape_v-tr_rel" ].

tapetsere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tapetsere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tapetsere_v-tr_rel" ].

tappe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tappe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tappe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

tappe_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tappe_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

tappe_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tappe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tappe_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tappe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tappe_v-tr_rel" ].

tariff-feste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tariff-feste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tariff-feste_v-tr_rel" ].

tariffeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tariffeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tariffeste_v-tr_rel" ].

tasle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tasle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tasle_v-intr_rel" ].

tasse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tasse_v-intr_rel" ].

tasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tasse_v-intr_rel" ].

taste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "taste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taste_v-intr_rel" ].

taste_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "taste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taste_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

tatovere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tatovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tatovere_v-tr_rel" ].

tatovere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tatovere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tatovere_v-tr_rel" ].

taue_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "taue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taue_v-trScpr_rel" ].

taue_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-de,
   STEM < "taue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taue_v-tr_rel" ].

taue_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "taue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taue_v-tr_rel" ].

tave_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tave_v-tr_rel" ].

taxe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "taxe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_taxe_v-intr_rel" ].

te_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "te" >,
   SYNSEM.LKEYS.KEYREL.PRED "_te_v-trAdv_rel" ].

te_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "te" >,
   SYNSEM.LKEYS.KEYREL.PRED "_te_v-tr_rel" ].

tefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tefte_v-tr_rel" ].

tegne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tegne_v-intr_rel" ].

tegne_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tegne_v-intrObl_rel" ].

tegne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tegne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

tegne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tegne_v-tr_rel" ].

tegne_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tegne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tegne_v-tr_rel" ].

teipe_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "teipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teipe_v-tr_rel" ].

;teite_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "teite" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_teite_v-trScpr_rel" ].

teite_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "teite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teite_v-tr_rel" ].

tekke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tekke_v-tr_rel" ].

teknifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "teknifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teknifisere_v-tr_rel" ].

tekste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tekste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tekste_v-tr_rel" ].

teksturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "teksturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teksturere_v-tr_rel" ].

tele_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tele_v-intr_rel" ].

telefonere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "telefonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telefonere_v-intrObl_rel" ].

telefonere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "telefonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telefonere_v-intr_rel" ].

telefonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "telefonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telefonere_v-tr_rel" ].

telegrafere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "telegrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telegrafere_v-intrObl_rel" ].

telegrafere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "telegrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telegrafere_v-intr_rel" ].

telegrafere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "telegrafere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telegrafere_v-tr_rel" ].

teleksere_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "teleksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teleksere_v-intrObl_rel" ].

teleksere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "teleksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teleksere_v-intr_rel" ].

teleksere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "teleksere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teleksere_v-tr_rel" ].

telemetrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "telemetrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telemetrere_v-tr_rel" ].

telgje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "telgje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telgje_v-tr_rel" ].

telle_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "telle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_telle_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

telle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "telle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telle_v-intr_rel" ].

telle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "telle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

telle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "telle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telle_v-tr_rel" ].

telne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "telne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telne_v-tr_rel" ].

telte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "telte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_telte_v-intr_rel" ].

tematisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tematisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tematisere_v-tr_rel" ].

temme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "temme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_temme_v-tr_rel" ].

temperere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "temperere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_temperere_v-tr_rel" ].

tendere_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tendere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tendere_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tendere_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-te,
   STEM < "tendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tendere_v-intrObl_rel" ].

tenke_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-ditr_rel" ].

tenke_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tenke_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tenke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tenke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tenke_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tenke_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

tenke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-intr_rel" ].

tenke_obj-eq-refl := v-ditr-iobRefl_obEqIobInf &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-ditr_rel" ].

tenke_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-tr_rel" ].

tenke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-trScpr_rel" ].

tenke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-tr_rel" ].

tenke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenke_v-tr_rel" ].

tenne_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tenne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tenne_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tenne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "tenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenne_v-intrPrtcl_rel" ].

tenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tenne_v-tr_rel" ].

teoretisere_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "teoretisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_teoretisere_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

teoretisere_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "teoretisere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_teoretisere_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

teoretisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "teoretisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teoretisere_v-tr_rel" ].

teppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "teppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teppe_v-tr_rel" ].

teppelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "teppelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teppelegge_v-tr_rel" ].

terge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "terge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terge_v-tr_rel" ].

terminfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "terminfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terminfeste_v-tr_rel" ].

terpe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "terpe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_terpe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

terpe_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "terpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terpe_v-trScprShft_rel" ].

terpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "terpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terpe_v-tr_rel" ].

terrassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "terrassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terrassere_v-tr_rel" ].

terrorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "terrorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terrorisere_v-tr_rel" ].

terske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "terske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_terske_v-tr_rel" ].

testamentere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "testamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_testamentere_v-ditr_rel" ].

testamentere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "testamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_testamentere_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

testamentere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "testamentere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_testamentere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

testamentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "testamentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_testamentere_v-tr_rel" ].

teste_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "teste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_teste_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

teste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "teste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teste_v-tr_rel" ].

tetne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tetne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tetne_v-intrPrtcl_rel" ].

tetne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tetne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tetne_v-intr_rel" ].

tette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tette_v-intrObl_rel" ].

tette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tette_v-tr_rel" ].

tette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tette_v-tr_rel" ].

teve_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "teve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_teve_v-intr_rel" ].

tevle_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tevle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tevle_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

tevle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tevle_v-intr_rel" ].

tidfeste_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tidfeste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tidfeste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tidfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tidfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tidfeste_v-tr_rel" ].

tidoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tidoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tidoble_v-tr_rel" ].

tidsbestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tidsbestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tidsbestemme_v-tr_rel" ].

tidsinnstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tidsinnstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tidsinnstille_v-tr_rel" ].

tie_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "tie" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tie_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tie_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "tie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tie_v-intr_rel" ].

tigge_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tigge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tigge_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tigge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tigge_v-intr_rel" ].

tigge_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tigge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tigge_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tikke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tikke_v-intrPrtcl_rel" ].

tikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tikke_v-intr_rel" ].

tilbakebetale_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakebetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakebetale_v-ditr_rel" ].

tilbakebetale_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakebetale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilbakebetale_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tilbakebetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakebetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakebetale_v-tr_rel" ].

tilbakeføre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakeføre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilbakeføre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tilbakeføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakeføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakeføre_v-tr_rel" ].

tilbakekalle_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakekalle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilbakekalle_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

tilbakekalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakekalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakekalle_v-tr_rel" ].

tilbakelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilbakelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakelegge_v-tr_rel" ].

tilbakevise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakevise_v-tr_rel" ].

tilbakevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilbakevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbakevise_v-tr_rel" ].

tilbe_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tilbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbe_v-tr_rel" ].

tilberede_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilberede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilberede_v-tr_rel" ].

tilbringe_tr-locobl := v-trObl-oblLoc &
 [ INFLECTION nonfstr-strong,
   STEM < "tilbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilbringe_v-trObl_rel" ].

tilby_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "tilby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilby_v-ditr_rel" ].

tilby_obj-eq-refl := v-ditr-iobRefl_obEqIobInf &
 [ INFLECTION finstr-dd,
   STEM < "tilby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilby_v-ditr_rel" ].

tilby_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tilby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilby_v-tr_rel" ].

tildekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tildekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tildekke_v-tr_rel" ].

tildele_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tildele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tildele_v-ditr_rel" ].

tildømme_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tildømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tildømme_v-ditr_rel" ].

tilegne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "tilegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilegne_v-ditr_rel" ].

tilegne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilegne_v-ditr_rel" ].

tilegne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tilegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilegne_v-trObl_rel" ].

tilendebringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilendebringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilendebringe_v-tr_rel" ].

tilfalle_io-pres := v-trPresnt &
 [ INFLECTION nonfstr-te,
   STEM < "tilfalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilfalle_v-trPresnt_rel" ].

tilflyte_io-pres := v-trPresnt &
 [ INFLECTION nonfstr-strong,
   STEM < "tilflyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilflyte_v-trPresnt_rel" ].

tilfredsstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilfredsstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilfredsstille_v-tr_rel" ].

tilfryse_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilfryse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilfryse_v-intr_rel" ].

tilfyke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilfyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilfyke_v-intr_rel" ].

tilføre_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføre_v-ditr_rel" ].

tilføre_ditr-subord := v-ditr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tilføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføre_v-ditr_rel" ].

tilføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføre_v-tr_rel" ].

tilføye_ditr := v-ditr &
 [ INFLECTION nonfstr-de,
   STEM < "tilføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføye_v-ditr_rel" ].

tilføye_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "tilføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføye_v-trObl_rel" ].

tilføye_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-de,
   STEM < "tilføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføye_v-tr_rel" ].

tilføye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tilføye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilføye_v-tr_rel" ].

tilgi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "tilgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgi_v-ditr_rel" ].

tilgi_tr-obl-for := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "tilgi" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilgi_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tilgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "tilgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgi_v-tr_rel" ].

tilgodese_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "tilgodese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgodese_v-trObl_rel" ].

tilgodese_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "tilgodese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgodese_v-tr_rel" ].

tilgrise_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "tilgrise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilgrise_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tilgrise_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "tilgrise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgrise_v-tr_rel" ].

tilgro_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "tilgro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilgro_v-intr_rel" ].

tilhogge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tilhogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilhogge_v-tr_rel" ].

tilholde_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilholde_v-ditr_rel" ].

tilholde_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-strong,
   STEM < "tilholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilholde_v-ditr_rel" ].

tilhugge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tilhugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilhugge_v-tr_rel" ].

tilhylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilhylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilhylle_v-tr_rel" ].

tilhøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilhøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilhøre_v-tr_rel" ].

tilintetgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilintetgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilintetgjøre_v-tr_rel" ].

tiljamne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tiljamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiljamne_v-tr_rel" ].

tiljevne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tiljevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiljevne_v-tr_rel" ].

tiljuble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tiljuble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiljuble_v-tr_rel" ].

tilkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkalle_v-tr_rel" ].

tilkjempe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilkjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjempe_v-ditr_rel" ].

tilkjenne_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjenne_v-ditr_rel" ].

tilkjennegi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "tilkjennegi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjennegi_v-tr_rel" ].

tilkjennegi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "tilkjennegi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjennegi_v-tr_rel" ].

tilkjøre_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjøre_v-ditr_rel" ].

tilkjøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilkjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkjøre_v-tr_rel" ].

tilkline_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "tilkline" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkline_v-tr_rel" ].

tilknytte_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilknytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilknytte_v-ditr_rel" ].

tilknytte_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tilknytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilknytte_v-ditr_rel" ].

tilknytte_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tilknytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilknytte_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tilkoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilkoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkoble_v-tr_rel" ].

tilkople_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilkople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilkople_v-tr_rel" ].

tillage_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tillage" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillage_v-tr_rel" ].

tillate_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tillate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillate_v-ditr_rel" ].

tillate_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "tillate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillate_v-tr_rel" ].

tillate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tillate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillate_v-tr_rel" ].

tillegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tillegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillegge_v-ditr_rel" ].

tillempe_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tillempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillempe_v-trObl_rel" ].

tillempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tillempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillempe_v-tr_rel" ].

tilligge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilligge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilligge_v-tr_rel" ].

tillyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tillyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tillyse_v-tr_rel" ].

tilmåle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilmåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilmåle_v-tr_rel" ].

tilnærme_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilnærme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilnærme_v-ditr_rel" ].

tilpasse_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilpasse_v-ditr_rel" ].

tilpasse_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tilpasse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilpasse_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tilpasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilpasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilpasse_v-tr_rel" ].

tilplante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilplante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilplante_v-tr_rel" ].

tilrane_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilrane" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrane_v-ditr_rel" ].

tilrede_tr-obladv := v-trAdv &
 [ INFLECTION nonfstr-et,
   STEM < "tilrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrede_v-trAdv_rel" ].

tilrettelegge_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "tilrettelegge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilrettelegge_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tilrettelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilrettelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrettelegge_v-tr_rel" ].

tilrettevise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilrettevise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrettevise_v-tr_rel" ].

tilrive_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tilrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrive_v-ditr_rel" ].

tilrå_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "tilrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrå_v-ditr_rel" ].

tilrå_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION finstr-dd,
   STEM < "tilrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrå_v-ditr_rel" ].

tilrå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "tilrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrå_v-tr_rel" ].

tilrå_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tilrå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilrå_v-tr_rel" ].

tilsende_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsende_v-ditr_rel" ].

tilsette_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsette_v-ditr_rel" ].

tilsette_tr-arg12-secpred := v-trScpr-scObArgCsd_scLoc &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsette_v-trScpr_rel" ].

tilsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsette_v-tr_rel" ].

tilsi_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "tilsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsi_v-tr_rel" ].

tilsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "tilsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsi_v-tr_rel" ].

tilsidesette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsidesette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsidesette_v-tr_rel" ].

tilsikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilsikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsikte_v-tr_rel" ].

tilskjøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilskjøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskjøte_v-tr_rel" ].

tilskrive_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskrive_v-ditr_rel" ].

tilskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskrive_v-tr_rel" ].

tilskye_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tilskye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskye_v-intr_rel" ].

tilskynde_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tilskynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskynde_v-trObl_rel" ].

tilskynde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "tilskynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilskynde_v-tr_rel" ].

tilslutte_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilslutte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilslutte_v-ditr_rel" ].

tilsløre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilsløre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsløre_v-tr_rel" ].

tilsmusse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilsmusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsmusse_v-tr_rel" ].

tilsmøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsmøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsmøre_v-tr_rel" ].

tilsnakke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilsnakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsnakke_v-tr_rel" ].

tilsnike_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tilsnike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsnike_v-ditr_rel" ].

tilspisse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilspisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilspisse_v-tr_rel" ].

tilstede_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "tilstede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstede_v-ditr_rel" ].

tilstede_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-et,
   STEM < "tilstede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstede_v-ditr_rel" ].

tilstede_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "tilstede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstede_v-tr_rel" ].

tilstede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilstede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstede_v-tr_rel" ].

tilstille_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstille_v-ditr_rel" ].

tilstille_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tilstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstille_v-trObl_rel" ].

tilstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstille_v-tr_rel" ].

tilstoppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tilstoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstoppe_v-tr_rel" ].

tilstoppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilstoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstoppe_v-tr_rel" ].

tilstrebe_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "tilstrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstrebe_v-tr_rel" ].

tilstrebe_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "tilstrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstrebe_v-tr_rel" ].

tilstrebe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilstrebe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstrebe_v-tr_rel" ].

tilstå_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "tilstå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilstå_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tilstå_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "tilstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstå_v-tr_rel" ].

tilstå_tr-obl-for := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "tilstå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tilstå_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tilstå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "tilstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstå_v-tr_rel" ].

tilstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "tilstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstå_v-tr_rel" ].

tilstøte_io-pres := v-trPresnt &
 [ INFLECTION nonfstr-te,
   STEM < "tilstøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstøte_v-trPresnt_rel" ].

tilstøyte_io-pres := v-trPresnt &
 [ INFLECTION nonfstr-te,
   STEM < "tilstøyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilstøyte_v-trPresnt_rel" ].

tilsvare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilsvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsvare_v-tr_rel" ].

tilsvine_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilsvine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsvine_v-tr_rel" ].

tilså_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tilså" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilså_v-tr_rel" ].

tilsøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilsøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilsøle_v-tr_rel" ].

tilta_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "tilta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilta_v-intr_rel" ].

tiltale_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tiltale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tiltale_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tiltale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tiltale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltale_v-tr_rel" ].

tiltenke_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tiltenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltenke_v-ditr_rel" ].

tiltre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tiltre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltre_v-tr_rel" ].

tiltrekke_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tiltrekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltrekke_v-ditr_rel" ].

tiltro_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "tiltro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltro_v-ditr_rel" ].

tiltru_ditr := v-ditr &
 [ INFLECTION finstr-dd,
   STEM < "tiltru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltru_v-ditr_rel" ].

tiltvinge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "tiltvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiltvinge_v-ditr_rel" ].

tilvende_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tilvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilvende_v-ditr_rel" ].

tilvenne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tilvenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilvenne_v-ditr_rel" ].

tilvirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tilvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilvirke_v-tr_rel" ].

tilvise_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "tilvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilvise_v-ditr_rel" ].

tilvise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tilvise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tilvise_v-tr_rel" ].

times_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "times" >,
   SYNSEM.LKEYS.KEYREL.PRED "_times_v-tr_rel" ].

tinde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tinde_v-tr_rel" ].

tindre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tindre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tindre_v-intr_rel" ].

tine_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "tine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tine_v-intrPrtcl_rel" ].

tine_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tine_v-intr_rel" ].

tine_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "tine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tine_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

tine_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tine_v-tr_rel" ].

tinge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tinge_v-intrObl_rel" ].

tinge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tinge_v-tr_rel" ].

tingliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tingliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tingliggjøre_v-tr_rel" ].

tinglyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tinglyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tinglyse_v-tr_rel" ].

tinkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tinkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tinkle_v-intr_rel" ].

tiple_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tiple" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiple_v-intr_rel" ].

tippe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tippe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tippe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tippe_v-intr_rel" ].

tippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tippe_v-trScpr_rel" ].

tippe_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "tippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tippe_v-tr_rel" ].

tippe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tippe_v-tr_rel" ].

tipse_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tipse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tipse_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tipse_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "tipse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tipse_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tipse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tipse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tipse_v-tr_rel" ].

tirre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tirre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tirre_v-tr_rel" ].

tiske_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "tiske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tiske_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tiske_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tiske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tiske_v-intr_rel" ].

tisle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tisle_v-intr_rel" ].

tisse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tisse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tisse_v-intr_rel" ].

titrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "titrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_titrere_v-tr_rel" ].

titte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "titte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_titte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

titte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "titte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_titte_v-intrPrtcl_rel" ].

titte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "titte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_titte_v-intr_rel" ].

titulere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "titulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_titulere_v-ditr_rel" ].

titulere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "titulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_titulere_v-trObl_rel" ].

tjadre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjadre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjadre_v-intr_rel" ].

tjafse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tjafse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjafse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

tjatre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjatre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjatre_v-intr_rel" ].

tjatte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjatte_v-intr_rel" ].

tjelde_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjelde_v-intr_rel" ].

tjelde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjelde_v-tr_rel" ].

tjene_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tjene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjene_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tjene_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tjene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjene_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tjene_tr-obl-på := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tjene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjene_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tjene_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tjene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjene_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tjene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tjene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjene_v-tr_rel" ].

tjenestegjøre_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "tjenestegjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjenestegjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tjenestegjøre_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "tjenestegjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjenestegjøre_v-intr_rel" ].

tjenstgjøre_intr-obl-for := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "tjenstgjøre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjenstgjøre_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tjenstgjøre_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "tjenstgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjenstgjøre_v-intr_rel" ].

tjone_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tjone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjone_v-intr_rel" ].

tjone_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tjone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjone_v-tr_rel" ].

tjore_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tjore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjore_v-trScpr_rel" ].

tjore_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tjore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjore_v-tr_rel" ].

tjukne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tjukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjukne_v-intrPrtcl_rel" ].

tjukne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjukne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjukne_v-intr_rel" ].

tjuve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuve_v-intr_rel" ].

tjuve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuve_v-tr_rel" ].

tjuvlytte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvlytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvlytte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tjuvlytte_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvlytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvlytte_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tjuvlytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvlytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvlytte_v-intr_rel" ].

tjuvlåne_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tjuvlåne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvlåne_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

tjuvlåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tjuvlåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvlåne_v-tr_rel" ].

tjuvslakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvslakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvslakte_v-tr_rel" ].

tjuvstarte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvstarte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvstarte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tjuvstarte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvstarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvstarte_v-intr_rel" ].

tjuvstarte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvstarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvstarte_v-tr_rel" ].

tjuvtitte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvtitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvtitte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tjuvtitte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjuvtitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvtitte_v-intr_rel" ].

tjuvtrene_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tjuvtrene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tjuvtrene_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tjuvtrene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tjuvtrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjuvtrene_v-intr_rel" ].

tjåke_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tjåke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjåke_v-intrObl_rel" ].

tjåke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tjåke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjåke_v-intr_rel" ].

tjære_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjære_v-tr_rel" ].

tjærebre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tjærebre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjærebre_v-tr_rel" ].

tjørebre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tjørebre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tjørebre_v-tr_rel" ].

;toe_tv := v-tr &
; [ INFLECTION nonfstr,
;   STEM < "toe" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_toe_v_rel" ].

toge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "toge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_toge_v-intr_rel" ].

tolerere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tolerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tolerere_v-tr_rel" ].

tolerere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tolerere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tolerere_v-tr_rel" ].

tolke_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "tolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tolke_v-trScpr_rel" ].

tolke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tolke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tolke_v-tr_rel" ].

tollbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tollbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tollbehandle_v-tr_rel" ].

tomse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tomse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tomse_v-intr_rel" ].

tone_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tone_v-trScpr_rel" ].

tone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tone_v-tr_rel" ].

toppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "toppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_toppe_v-tr_rel" ].

toppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "toppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_toppe_v-tr_rel" ].

tordne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "tordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tordne_v-intrImpers_rel" ].

tordne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tordne_v-intr_rel" ].

tore_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr,
   STEM < "tore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tore_v-tr_rel" ].

tore_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "tore" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tore_v-tr_rel" ].

torpedere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "torpedere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_torpedere_v-tr_rel" ].

torturere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "torturere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_torturere_v-tr_rel" ].

torve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "torve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_torve_v-intr_rel" ].

totalfrede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "totalfrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_totalfrede_v-tr_rel" ].

totalskade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "totalskade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_totalskade_v-tr_rel" ].

touche_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "touche" >,
   SYNSEM.LKEYS.KEYREL.PRED "_touche_v-tr_rel" ].

touchere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "touchere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_touchere_v-tr_rel" ].

tove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tove_v-tr_rel" ].

tove_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tove_v-tr_rel" ].

trabelere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "trabelere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trabelere_v-intr_rel" ].

trace_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trace" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trace_v-tr_rel" ].

tradere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tradere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tradere_v-tr_rel" ].

trafikkere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trafikkere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trafikkere_v-tr_rel" ].

trakassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trakassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trakassere_v-tr_rel" ].

trakke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trakke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trakke_v-intr_rel" ].

trakte_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trakte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trakte_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

trakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trakte_v-tr_rel" ].

traktere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "traktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_traktere_v-trObl_rel" ].

traktere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "traktere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_traktere_v-tr_rel" ].

trale_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "trale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trale_v-intrObl_rel" ].

trale_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "trale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trale_v-intr_rel" ].

trale_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr,
   STEM < "trale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trale_v-intrObl_rel" ].

tralle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tralle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tralle_v-intr_rel" ].

tralle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tralle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tralle_v-tr_rel" ].

trampe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trampe_v-intr_rel" ].

trampe_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trampe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trampe_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

trampe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trampe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trampe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trampe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trampe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trampe_v-intr_rel" ].

tranchere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tranchere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tranchere_v-tr_rel" ].

transcendere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "transcendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transcendere_v-intr_rel" ].

transcendere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transcendere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transcendere_v-tr_rel" ].

transferere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "transferere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_transferere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

transferere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transferere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transferere_v-tr_rel" ].

transfigurere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transfigurere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transfigurere_v-tr_rel" ].

transformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transformere_v-tr_rel" ].

transfundere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transfundere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transfundere_v-tr_rel" ].

transistorisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transistorisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transistorisere_v-tr_rel" ].

transitivere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transitivere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transitivere_v-tr_rel" ].

transittere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "transittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transittere_v-tr_rel" ].

transittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transittere_v-tr_rel" ].

transjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transjere_v-tr_rel" ].

transkribere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transkribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transkribere_v-tr_rel" ].

translitterere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "translitterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_translitterere_v-trObl_rel" ].

translitterere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "translitterere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_translitterere_v-tr_rel" ].

transmittere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "transmittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transmittere_v-trObl_rel" ].

transmittere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transmittere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transmittere_v-tr_rel" ].

transpirere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "transpirere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transpirere_v-intr_rel" ].

transplantere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transplantere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transplantere_v-tr_rel" ].

transponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transponere_v-tr_rel" ].

transportere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "transportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transportere_v-tr_rel" ].

transportere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transportere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transportere_v-tr_rel" ].

transskribere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "transskribere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_transskribere_v-tr_rel" ].

trappe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "trappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trappe_v-intrPrtcl_rel" ].

trappe_tr-arg12-secpred_opp := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "trappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

trappe_tr-arg12-secpred_ned := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "trappe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trappe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

trase_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "trase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trase_v-trPrtcl_rel" ].

;trase_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "trase" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_trase_v-trScpr_rel" ].

trasere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trasere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trasere_v-tr_rel" ].

traske_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "traske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_traske_v-intr_rel" ].

traske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "traske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_traske_v-intr_rel" ].

trasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trasse_v-intr_rel" ].

trasse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "trasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trasse_v-trScprShft_rel" ].

trassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trassere_v-tr_rel" ].

trave_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trave_v-intr_rel" ].

trave_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trave_v-intr_rel" ].

traversere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "traversere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_traversere_v-intr_rel" ].

travestere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "travestere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_travestere_v-tr_rel" ].

tre_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "tre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tre_v-intr_rel" ].

tre_intr-telicpartcl_av := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "tre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tre_v-intrPrtcl_rel",
            LOCAL.KEY-SPEC av-k ] ].

tre_intr-telicpartcl_til := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "tre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tre_v-intrPrtcl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tre_tr-arg12-secpred := v-trScpr-scObArgCsd_scEndpt &
 [ INFLECTION finstr-dd,
   STEM < "tre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tre_v-trScpr_rel" ].

tredele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tredele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tredele_v-tr_rel" ].

tredoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tredoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tredoble_v-tr_rel" ].

treffe_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "treffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_treffe_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

treffes_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "treffes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_treffes_v-intr_rel" ].

trege_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "trege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trege_v-intrObl_rel" ].

trekke_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-intrImpers_rel" ].

trekke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-intr_rel" ].

trekke_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trekke_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

trekke_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trekke_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

trekke_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-intr_rel" ].

trekke_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-trPrtcl_rel" ].

trekke_tr-arg12-secpred-11 := v-trScpr-scObArgCsd_scEndpt &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-trScpr_rel" ].

trekke_tr-obl-12 := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-trObl_rel" ].

trekke_tr-ppshift-10 := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-trScprShft_rel" ].

trekke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-tr_rel" ].

trekke_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trekke_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

trekke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "trekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekke_v-tr_rel" ].

trekte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trekte_v-tr_rel" ].

trellbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "trellbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trellbinde_v-tr_rel" ].

trelle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "trelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trelle_v-intrObl_rel" ].

trelle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "trelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trelle_v-intr_rel" ].

tremulere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tremulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tremulere_v-intr_rel" ].

trene_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trene_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trene_v-intr_rel" ].

trene_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trene_v-trPrtcl_rel" ].

trene_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trene_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

trene_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trene_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

trene_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trene_v-tr_rel" ].

trenere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trenere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenere_v-tr_rel" ].

trenge_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "trenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenge_v-tr_rel" ].

trenge_tr-arg12-secpred := v-trScpr-scObArgCsd_scEndpt &
 [ INFLECTION nonfstr-te,
   STEM < "trenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenge_v-trScpr_rel" ].

trenge_tr-arg12-reflsecpred_på := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "trenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

trenge_tr-arg12-reflsecpred_frem := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "trenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC frem-k ].

trenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenge_v-tr_rel" ].

trenges_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "trenges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trenges_v-intr_rel" ].

trepanere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trepanere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trepanere_v-tr_rel" ].

treske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "treske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_treske_v-tr_rel" ].

tretne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tretne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tretne_v-intr_rel" ].

trette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trette_v-intrObl_rel" ].

trette_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trette_v-intr_rel" ].

trette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trette_v-tr_rel" ].

trevle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trevle_v-trPrtcl_rel" ].

trevle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "trevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trevle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

trevle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trevle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trevle_v-tr_rel" ].

triangulere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "triangulere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_triangulere_v-tr_rel" ].

trigge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trigge_v-tr_rel" ].

trikke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trikke_v-intr_rel" ].

trikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trikke_v-intr_rel" ].

trikse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trikse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trikse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trikse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trikse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trikse_v-intr_rel" ].

trille_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "trille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trille_v-intr_rel" ].

trille_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "trille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trille_v-intr_rel" ].

trille_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "trille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trille_v-tr_rel" ].

trimme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trimme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trimme_v-intr_rel" ].

trine_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "trine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trine_v-intr_rel" ].

trine_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "trine" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trine_v-intr_rel" ].

trinse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trinse_v-intr_rel" ].

trinse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trinse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trinse_v-intr_rel" ].

trippe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trippe_v-intr_rel" ].

trippe_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trippe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trippe_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trippe_v-intr_rel" ].

triumfere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "triumfere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_triumfere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

triumfere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "triumfere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_triumfere_v-intr_rel" ].

trive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "trive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trive_v-tr_rel" ].

trives_intr-obl-bak := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC bak-k ] ].

trives_intr-obl-foran := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC foran-k ] ].

trives_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

trives_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trives_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trives_intr-obl-under := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC under-k ] ].

trives_intr-obl-ved := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trives_v-intrObl_rel",
            LOCAL.KEY-SPEC ved-k ] ].

trives_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "trives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trives_v-intr_rel" ].

trivialisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trivialisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trivialisere_v-tr_rel" ].

trivle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trivle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trivle_v-intrObl_rel" ].

tro_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "tro" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tro_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tro_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "tro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tro_v-tr_rel" ].

tro_tr-obV := v-tr-obDECL_obV &
 [ INFLECTION finstr-dd,
   STEM < "tro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tro_v-tr_rel" ].

tro_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tro" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tro_v-tr_rel" ].

trollbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "trollbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trollbinde_v-tr_rel" ].

trolle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trolle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trolle_v-intr_rel" ].

trollstemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trollstemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trollstemme_v-tr_rel" ].

trollstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trollstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trollstille_v-tr_rel" ].

trolove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "trolove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trolove_v-tr_rel" ].

trolove_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "trolove" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trolove_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tromle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tromle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tromle_v-tr_rel" ].

tromme_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tromme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tromme_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tromme_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tromme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tromme_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tromme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tromme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tromme_v-intr_rel" ].

tromme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tromme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tromme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

tromme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tromme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tromme_v-tr_rel" ].

trone_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trone_v-intrObl_rel" ].

trone_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trone_v-intr_rel" ].

troppe_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "troppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_troppe_v-intrObl_rel" ].

troppe_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "troppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_troppe_v-intrPrtcl_rel" ].

trosse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trosse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trosse_v-tr_rel" ].

tru_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "tru" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tru_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tru_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-dd,
   STEM < "tru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tru_v-tr_rel" ].

tru_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tru" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tru_v-tr_rel" ].

true_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_true_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

true_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM.LKEYS.KEYREL.PRED "_true_v-trObl_rel" ].

true_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM.LKEYS.KEYREL.PRED "_true_v-intrObl_rel" ].

true_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM.LKEYS.KEYREL.PRED "_true_v-trPrtcl_rel" ].

true_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_true_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

true_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM.LKEYS.KEYREL.PRED "_true_v-trScprShft_rel" ].

true_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "true" >,
   SYNSEM.LKEYS.KEYREL.PRED "_true_v-tr_rel" ].

truge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-intrObl_rel" ].

truge_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-trObl_rel" ].

truge_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-intrObl_rel" ].

truge_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-trPrtcl_rel" ].

truge_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-trObl_rel" ].

truge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-trScprShft_rel" ].

truge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "truge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_truge_v-tr_rel" ].

trulove_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trulove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trulove_v-tr_rel" ].

trulove_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trulove" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trulove_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trulte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "trulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trulte_v-intr_rel" ].

trulte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trulte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trulte_v-intr_rel" ].

trumfe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trumfe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trumfe_v-intr_rel" ].

trumfe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "trumfe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trumfe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC igjennom-k ].

trutne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trutne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trutne_v-intr_rel" ].

trygde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trygde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygde_v-tr_rel" ].

trygge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygge_v-ditr_rel" ].

trygge_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "trygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trygge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trygge_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygge_v-trObl_rel" ].

trygge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygge_v-tr_rel" ].

trygle_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "trygle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trygle_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

trygle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trygle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygle_v-intr_rel" ].

trygle_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "trygle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trygle_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

trygle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trygle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trygle_v-tr_rel" ].

trykke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "trykke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trykke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trykke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "trykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trykke_v-trScpr_rel" ].

trykke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trykke_v-tr_rel" ].

trykkimpregnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trykkimpregnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trykkimpregnere_v-tr_rel" ].

trylle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trylle_v-intr_rel" ].

trylle_tr-arg12-secpred := v-trScpr-scObArgCsd_scEndpt &
 [ INFLECTION nonfstr-et,
   STEM < "trylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trylle_v-trScpr_rel" ].

tryllebinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tryllebinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tryllebinde_v-tr_rel" ].

tryne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tryne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tryne_v-intr_rel" ].

tryte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tryte_v-intr_rel" ].

trå_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "trå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trå_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

trå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "trå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trå_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-tt,
   STEM < "trå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trå_v-intrPrtcl_rel" ].

trå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "trå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trå_v-intr_rel" ].

trå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "trå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trå_v-tr_rel" ].

tråde_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tråde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråde_v-intr_rel" ].

tråkke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkke_v-intr_rel" ].

tråkke_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tråkke_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

tråkke_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tråkke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tråkke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkke_v-intrPrtcl_rel" ].

tråkke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkke_v-intr_rel" ].

tråkke_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkke_v-trObl_rel" ].

tråkke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tråkke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkke_v-tr_rel" ].

tråkle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tråkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkle_v-intr_rel" ].

tråkle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tråkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC gjennom-k ].

tråkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tråkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråkle_v-tr_rel" ].

tråve_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr,
   STEM < "tråve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråve_v-intr_rel" ].

tråve_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tråve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tråve_v-intr_rel" ].

træ_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "træ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_træ_v-intrObl_rel" ].

træ_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "træ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_træ_v-trScpr_rel" ].

træ_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION finstr-dd,
   STEM < "træ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_træ_v-trScprShft_rel" ].

træ_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "træ" >,
   SYNSEM.LKEYS.KEYREL.PRED "_træ_v-tr_rel" ].

trø_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "trø" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trø_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

trø_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "trø" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trø_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

trø_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "trø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trø_v-intrPrtcl_rel" ].

trø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "trø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trø_v-intr_rel" ].

trø_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "trø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trø_v-tr_rel" ].

trøste_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "trøste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_trøste_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

trøste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trøste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trøste_v-tr_rel" ].

trøstespise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "trøstespise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trøstespise_v-intr_rel" ].

trøstespise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "trøstespise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trøstespise_v-tr_rel" ].

trøtne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "trøtne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trøtne_v-intr_rel" ].

trøtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "trøtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_trøtte_v-tr_rel" ].

tufse_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tufse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tufse_v-tr_rel" ].

tufte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tufte_v-intrObl_rel" ].

tufte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tufte_v-intr_rel" ].

tufte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tufte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC på-k ].

tufte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tufte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tufte_v-tr_rel" ].

tukle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tukle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tukle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tukte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tukte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tukte_v-tr_rel" ].

tulle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tulle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tulle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tulle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tulle_v-intr_rel" ].

tulle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tulle_v-trPrtcl_rel" ].

tulle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tulle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tulle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

tumle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tumle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tumle_v-intrObl_rel" ].

tune_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tune" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tune_v-tr_rel" ].

tupere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tupere_v-tr_rel" ].

tupere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tupere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tupere_v-tr_rel" ].

tuppe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuppe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

tuppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tuppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuppe_v-tr_rel" ].

ture_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ture" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ture_v-intrPrtcl_rel" ].

ture_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ture" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ture_v-intr_rel" ].

ture_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ture" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ture_v-tr_rel" ].

turne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "turne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_turne_v-intr_rel" ].

turnere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "turnere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_turnere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

turnere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "turnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_turnere_v-intr_rel" ].

turnere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "turnere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_turnere_v-tr_rel" ].

turve_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "turve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_turve_v-tr_rel" ].

tusje_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tusje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusje_v-intr_rel" ].

tusje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tusje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusje_v-tr_rel" ].

tusjere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tusjere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusjere_v-tr_rel" ].

tuske_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "tuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuske_v-intrImpers_rel" ].

tuske_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuske_v-intr_rel" ].

tuske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuske_v-intr_rel" ].

tuske_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "tuske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuske_v-trScprShft_rel" ].

tusle_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "tusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusle_v-intrImpers_rel" ].

tusle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusle_v-intr_rel" ].

tusle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tusle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusle_v-intr_rel" ].

tusse_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "tusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusse_v-intrImpers_rel" ].

tusse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tusse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tusse_v-intr_rel" ].

tuste_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tuste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tuste_v-tr_rel" ].

tute_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tute" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tute_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tute_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tute" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tute_v-intr_rel" ].

tutle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tutle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tutle_v-intrObl_rel" ].

tutle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tutle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tutle_v-intr_rel" ].

tvangsdirigere_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "tvangsdirigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvangsdirigere_v-tr_rel" ].

tvangsdirigere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tvangsdirigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvangsdirigere_v-tr_rel" ].

tvangsfôre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tvangsfôre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvangsfôre_v-tr_rel" ].

tvangsinnlegge_tr-arg12-secpred := v-trScpr-scObArgCsd_scLoc &
 [ INFLECTION nonfstr-strong,
   STEM < "tvangsinnlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvangsinnlegge_v-trScpr_rel" ].

tvangsinnlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tvangsinnlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvangsinnlegge_v-tr_rel" ].

tvedele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tvedele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvedele_v-tr_rel" ].

tverrsnu_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "tverrsnu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrsnu_v-intr_rel" ].

tverrsnu_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "tverrsnu" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrsnu_v-tr_rel" ].

tverrstanse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tverrstanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrstanse_v-intr_rel" ].

tverrstanse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tverrstanse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrstanse_v-tr_rel" ].

tverrstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tverrstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrstille_v-tr_rel" ].

tverrvende_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tverrvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrvende_v-intr_rel" ].

tverrvende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tverrvende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tverrvende_v-tr_rel" ].

tvette_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tvette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvette_v-tr_rel" ].

tvette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tvette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvette_v-tr_rel" ].

tviholde_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "tviholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tviholde_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tvile_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tvile" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tvile_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tvile_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tvile" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvile_v-intr_rel" ].

tvinge_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-intrObl_rel" ].

tvinge_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-trObl_rel" ].

tvinge_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-trObl_rel" ].

tvinge_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC til-k ].

tvinge_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-tr_rel" ].

tvinge_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tvinge_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tvinge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-trScprShft_rel" ].

tvinge_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-trPath_rel" ].

tvinge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinge_v-tr_rel" ].

tvinne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinne_v-tr_rel" ].

tvinne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvinne_v-tr_rel" ].

tviste_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tviste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tviste_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

tvære_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr,
   STEM < "tvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tvære_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

twiste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "twiste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_twiste_v-intr_rel" ].

ty_intr-dir := v-intr-suDir &
 [ INFLECTION finstr-dd,
   STEM < "ty" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ty_v-intr_rel" ].

ty_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "ty" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ty_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tyde_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyde_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tyde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "tyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyde_v-tr_rel" ].

tyde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyde_v-tr_rel" ].

tydeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tydeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tydeliggjøre_v-tr_rel" ].

tygge_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "tygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tygge_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tygge_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-de,
   STEM < "tygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tygge_v-intrPrtcl_rel" ].

tygge_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "tygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tygge_v-intr_rel" ].

tygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tygge_v-tr_rel" ].

tykke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tykke_v-tr_rel" ].

tykkes_intr-secpr-rais := v-intrScpr-suNrg-scInfORscAdjORscPPORscEQUAT &
 [ INFLECTION nonfstr-te,
   STEM < "tykkes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tykkes_v-intrScpr_rel" ].

tykne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tykne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tykne_v-intr_rel" ].

tylle_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "tylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tylle_v-trScprShft_rel" ].

tyne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyne_v-trObl_rel" ].

tyne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyne_v-tr_rel" ].

tyne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyne_v-tr_rel" ].

tynge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tynge_v-intr_rel" ].

tynge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tynge_v-tr_rel" ].

tynne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tynne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

tynne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tynne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tynne_v-tr_rel" ].

type_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "type" >,
   SYNSEM.LKEYS.KEYREL.PRED "_type_v-tr_rel" ].

typebestemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "typebestemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_typebestemme_v-tr_rel" ].

typegodkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "typegodkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_typegodkjenne_v-tr_rel" ].

typifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "typifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_typifisere_v-tr_rel" ].

typisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "typisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_typisere_v-tr_rel" ].

typologisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "typologisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_typologisere_v-tr_rel" ].

tyrannisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tyrannisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyrannisere_v-tr_rel" ].

tysse_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tysse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tysse_v-intrObl_rel" ].

tyste_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyste_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tyste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tyste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyste_v-intr_rel" ].

tystne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tystne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tystne_v-intr_rel" ].

tyte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "tyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyte_v-intrObl_rel" ].

tyte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "tyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyte_v-intrPrtcl_rel" ].

tyte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyte_v-intr_rel" ].

tyvlytte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyvlytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvlytte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tyvlytte_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyvlytte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvlytte_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tyvlytte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tyvlytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvlytte_v-intr_rel" ].

tyvlåne_tr-obl-av := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tyvlåne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvlåne_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

tyvlåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tyvlåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvlåne_v-tr_rel" ].

tyvslakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tyvslakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvslakte_v-tr_rel" ].

tyvstarte_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyvstarte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvstarte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tyvstarte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tyvstarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvstarte_v-intr_rel" ].

tyvstarte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tyvstarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvstarte_v-tr_rel" ].

tyvtitte_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tyvtitte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvtitte_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tyvtitte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tyvtitte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvtitte_v-intr_rel" ].

tyvtrene_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tyvtrene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvtrene_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tyvtrene_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tyvtrene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tyvtrene_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tyvtrene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tyvtrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tyvtrene_v-intr_rel" ].

tåkelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tåkelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåkelegge_v-tr_rel" ].

tåle_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-te,
   STEM < "tåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåle_v-tr_rel" ].

tåle_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "tåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåle_v-tr_rel" ].

tåle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåle_v-tr_rel" ].

tårne_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tårne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tårne_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

;tårne_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "tårne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_tårne_v-trScpr_rel" ].

tårne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tårne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tårne_v-tr_rel" ].

tåte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "tåte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåte_v-intrObl_rel" ].

tåte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tåte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tåte_v-intr_rel" ].

tære_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tære" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tære_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tære_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tære_v-intr_rel" ].

tø_impers-pres := v-intrImpers &
 [ INFLECTION finstr-dd,
   STEM < "tø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tø_v-intrImpers_rel" ].

tø_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION finstr-dd,
   STEM < "tø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tø_v-intrPrtcl_rel" ].

tø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "tø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tø_v-intr_rel" ].

tøffe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tøffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøffe_v-intr_rel" ].

tøffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tøffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøffe_v-intr_rel" ].

tøffe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tøffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøffe_v-tr_rel" ].

tøfle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "tøfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøfle_v-intr_rel" ].

tøfle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tøfle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøfle_v-intr_rel" ].

tømme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "tømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømme_v-trScpr_rel" ].

tømme_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "tømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tømme_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

tømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømme_v-tr_rel" ].

tømme_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "tømme" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tømme_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

tømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømme_v-tr_rel" ].

tømre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tømre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømre_v-intr_rel" ].

tømre_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tømre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

tømre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tømre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tømre_v-tr_rel" ].

tørke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "tørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørke_v-intrPrtcl_rel" ].

tørke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørke_v-intr_rel" ].

tørke_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "tørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørke_v-trScprShft_rel" ].

tørke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tørke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørke_v-tr_rel" ].

tørne_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "tørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørne_v-intrObl_rel" ].

tørne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr,
   STEM < "tørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørne_v-intrPrtcl_rel" ].

tørne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "tørne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørne_v-intr_rel" ].

tørre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørre_v-intrObl_rel" ].

tørre_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "tørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørre_v-tr_rel" ].

tørre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørre_v-tr_rel" ].

tørrkoke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tørrkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørrkoke_v-intr_rel" ].

tørrkoke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "tørrkoke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørrkoke_v-tr_rel" ].

tørrlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "tørrlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørrlegge_v-tr_rel" ].

tørrtrene_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tørrtrene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tørrtrene_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

tørrtrene_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "tørrtrene" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tørrtrene_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

tørrtrene_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "tørrtrene" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørrtrene_v-intr_rel" ].

tørste_intr-obl-etter := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tørste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tørste_v-intrObl_rel",
            LOCAL.KEY-SPEC etter-k ] ].

tørste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tørste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tørste_v-intr_rel" ].

tøtsje_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tøtsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøtsje_v-intrObl_rel" ].

tøtsje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tøtsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøtsje_v-tr_rel" ].

tøve_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøve_v-intr_rel" ].

tøye_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-de,
   STEM < "tøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøye_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

tøye_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "tøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøye_v-trScpr_rel" ].

tøye_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "tøye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøye_v-tr_rel" ].

tøyle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "tøyle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøyle_v-tr_rel" ].

tøyle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "tøyle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøyle_v-tr_rel" ].

tøyse_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "tøyse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_tøyse_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

tøyse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "tøyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøyse_v-intr_rel" ].

tøyse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "tøyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_tøyse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

udødeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "udødeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_udødeliggjøre_v-tr_rel" ].

ufarliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ufarliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ufarliggjøre_v-tr_rel" ].

uffe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uffe_v-tr_rel" ].

uffe_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uffe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_uffe_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

uføretrygde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uføretrygde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uføretrygde_v-tr_rel" ].

ugge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ugge_v-tr_rel" ].

ugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ugge_v-tr_rel" ].

uglese_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "uglese" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uglese_v-tr_rel" ].

ugreie_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "ugreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ugreie_v-tr_rel" ].

ugyldiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ugyldiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ugyldiggjøre_v-tr_rel" ].

ule_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ule_v-intr_rel" ].

uleilige_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uleilige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uleilige_v-tr_rel" ].

uleilige_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uleilige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uleilige_v-trObl_rel" ].

uleilige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uleilige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uleilige_v-tr_rel" ].

ulke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulke_v-intr_rel" ].

ulme_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "ulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulme_v-intrImpersObl_rel",
   SYNSEM.LOCAL.KEY-SPEC i-k ].

ulme_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ulme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulme_v-intr_rel" ].

ulne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ulne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulne_v-intr_rel" ].

ulykkesforsikre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ulykkesforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulykkesforsikre_v-tr_rel" ].

ulykkesforsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ulykkesforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ulykkesforsikre_v-tr_rel" ].

umake_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "umake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umake_v-tr_rel" ].

umake_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "umake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umake_v-trObl_rel" ].

umake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "umake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umake_v-tr_rel" ].

umenneskeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "umenneskeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umenneskeliggjøre_v-tr_rel" ].

umuliggjøre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "umuliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umuliggjøre_v-tr_rel" ].

umuliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "umuliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umuliggjøre_v-tr_rel" ].

umyndiggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "umyndiggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_umyndiggjøre_v-tr_rel" ].

underbetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underbetale_v-tr_rel" ].

underbinde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underbinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underbinde_v-tr_rel" ].

underbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underbringe_v-tr_rel" ].

underby_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "underby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underby_v-intr_rel" ].

underby_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "underby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underby_v-tr_rel" ].

underbygge_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "underbygge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_underbygge_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

underbygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "underbygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underbygge_v-tr_rel" ].

underdimensjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underdimensjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underdimensjonere_v-tr_rel" ].

underdrive_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "underdrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underdrive_v-intr_rel" ].

underdrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underdrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underdrive_v-tr_rel" ].

undereksponere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "undereksponere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undereksponere_v-tr_rel" ].

underforsikre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "underforsikre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underforsikre_v-tr_rel" ].

underforstå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "underforstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underforstå_v-tr_rel" ].

underforstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "underforstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underforstå_v-tr_rel" ].

undergi_ditr := v-ditr &
 [ INFLECTION finstr-tt,
   STEM < "undergi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergi_v-ditr_rel" ].

undergi_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "undergi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergi_v-ditr_rel" ].

undergjære_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "undergjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergjære_v-intr_rel" ].

undergjære_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "undergjære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergjære_v-tr_rel" ].

undergrave_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "undergrave" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergrave_v-tr_rel" ].

undergå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "undergå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undergå_v-tr_rel" ].

underhandle_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "underhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underhandle_v-intrObl_rel" ].

underhandle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "underhandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underhandle_v-intr_rel" ].

underholde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "underholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_underholde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

underholde_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "underholde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_underholde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

underholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underholde_v-tr_rel" ].

underkaste_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "underkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underkaste_v-ditr_rel" ].

underkaste_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "underkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underkaste_v-ditr_rel" ].

underkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underkjenne_v-tr_rel" ].

underkjøle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underkjøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underkjøle_v-tr_rel" ].

underkue_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "underkue" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underkue_v-tr_rel" ].

underlegge_ditr := v-ditr &
 [ INFLECTION nonfstr-strong,
   STEM < "underlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underlegge_v-ditr_rel" ].

underlegge_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "underlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underlegge_v-ditr_rel" ].

underlette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "underlette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underlette_v-tr_rel" ].

underminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underminere_v-tr_rel" ].

underordne_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "underordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underordne_v-ditr_rel" ].

underordne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "underordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underordne_v-ditr_rel" ].

underordne_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "underordne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underordne_v-trObl_rel" ].

underrepresentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "underrepresentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underrepresentere_v-tr_rel" ].

underrette_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "underrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underrette_v-intrObl_rel" ].

underrette_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "underrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underrette_v-trObl_rel" ].

underrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "underrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underrette_v-tr_rel" ].

underselge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underselge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underselge_v-tr_rel" ].

underskride_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underskride" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underskride_v-tr_rel" ].

underskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "underskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underskrive_v-tr_rel" ].

underslå_tr-obl-med := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "underslå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_underslå_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

underslå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "underslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underslå_v-tr_rel" ].

underslå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "underslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underslå_v-tr_rel" ].

underspille_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "underspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_underspille_v-intr_rel" ].

understellsbehandle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "understellsbehandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understellsbehandle_v-tr_rel" ].

understreke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "understreke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understreke_v-tr_rel" ].

understreke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "understreke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understreke_v-tr_rel" ].

understryke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "understryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understryke_v-tr_rel" ].

understryke_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "understryke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understryke_v-tr_rel" ].

understå_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "understå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understå_v-ditr_rel" ].

understå_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "understå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understå_v-trObl_rel" ].

understøtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "understøtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_understøtte_v-tr_rel" ].

undersøke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "undersøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undersøke_v-tr_rel" ].

undersøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "undersøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undersøke_v-tr_rel" ].

undertegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "undertegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undertegne_v-tr_rel" ].

undertrykke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "undertrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undertrykke_v-tr_rel" ].

undertvinge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "undertvinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undertvinge_v-tr_rel" ].

undervise_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "undervise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_undervise_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

undervise_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "undervise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undervise_v-intr_rel" ].

undervise_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "undervise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_undervise_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

undervise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "undervise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undervise_v-tr_rel" ].

undervurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "undervurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undervurdere_v-tr_rel" ].

undre_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "undre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undre_v-intrObl_rel" ].

undre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "undre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undre_v-tr_rel" ].

undre_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "undre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_undre_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

undres_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "undres" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_undres_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

undres_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "undres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_undres_v-intr_rel" ].

uniformere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "uniformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uniformere_v-tr_rel" ].

uniformere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uniformere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uniformere_v-tr_rel" ].

universalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "universalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_universalisere_v-tr_rel" ].

unnbe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-dd,
   STEM < "unnbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnbe_v-ditr_rel" ].

unndra_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "unndra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unndra_v-ditr_rel" ].

unndra_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "unndra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unndra_v-trObl_rel" ].

unndra_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "unndra" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unndra_v-tr_rel" ].

unnfange_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "unnfange" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnfange_v-tr_rel" ].

unnfly_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "unnfly" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnfly_v-tr_rel" ].

unngjelde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "unngjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unngjelde_v-intrObl_rel" ].

unngjelde_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "unngjelde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unngjelde_v-intr_rel" ].

unngå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "unngå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unngå_v-tr_rel" ].

unngå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "unngå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unngå_v-tr_rel" ].

unnkomme_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "unnkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnkomme_v-intrObl_rel" ].

unnlate_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "unnlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnlate_v-tr_rel" ].

unnse_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "unnse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnse_v-tr_rel" ].

unnsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnsette_v-tr_rel" ].

unnsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "unnsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnsi_v-tr_rel" ].

unnskylde_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "unnskylde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_unnskylde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

unnskylde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "unnskylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnskylde_v-tr_rel" ].

unnskylde_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "unnskylde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_unnskylde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

unnskylde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "unnskylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnskylde_v-tr_rel" ].

unnskylde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "unnskylde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnskylde_v-tr_rel" ].

unnsleppe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnsleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnsleppe_v-intr_rel" ].

unnsleppe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnsleppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnsleppe_v-tr_rel" ].

unnslippe_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnslippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnslippe_v-intr_rel" ].

unnslippe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnslippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnslippe_v-tr_rel" ].

unnslå_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-tt,
   STEM < "unnslå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnslå_v-tr_rel" ].

unnta_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "unnta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnta_v-trObl_rel" ].

unnta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "unnta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnta_v-tr_rel" ].

unnvike_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "unnvike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnvike_v-tr_rel" ].

unnvære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "unnvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_unnvære_v-tr_rel" ].

urbanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "urbanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urbanisere_v-tr_rel" ].

;ure_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr,
;   STEM < "ure" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ure_v-trScpr_rel" ].

urframføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "urframføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urframføre_v-tr_rel" ].

urfremføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "urfremføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urfremføre_v-tr_rel" ].

urgere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "urgere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urgere_v-tr_rel" ].

urinere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "urinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urinere_v-intr_rel" ].

uroe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uroe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uroe_v-tr_rel" ].

uroe_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uroe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_uroe_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

uroe_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "uroe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_uroe_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

uroe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uroe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uroe_v-tr_rel" ].

uroppføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uroppføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uroppføre_v-tr_rel" ].

urydde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "urydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urydde_v-intr_rel" ].

urydde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "urydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_urydde_v-tr_rel" ].

uskadeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "uskadeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uskadeliggjøre_v-tr_rel" ].

usurpere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "usurpere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_usurpere_v-tr_rel" ].

usynliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "usynliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_usynliggjøre_v-tr_rel" ].

utarbeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utarbeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utarbeide_v-tr_rel" ].

utarte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "utarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utarte_v-intrObl_rel" ].

utarte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "utarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utarte_v-intr_rel" ].

utarte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utarte_v-trObl_rel" ].

utause_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utause_v-trObl_rel" ].

utause_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utause" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utause_v-tr_rel" ].

utbasunere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "utbasunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbasunere_v-tr_rel" ].

utbasunere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utbasunere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbasunere_v-tr_rel" ].

utbe_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-dd,
   STEM < "utbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbe_v-ditr_rel" ].

utbe_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "utbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbe_v-tr_rel" ].

utbedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utbedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbedre_v-tr_rel" ].

utbetale_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "utbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbetale_v-ditr_rel" ].

utbetale_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbetale_v-trObl_rel" ].

utbetale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utbetale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbetale_v-tr_rel" ].

utbre_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "utbre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbre_v-tr_rel" ].

utbre_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "utbre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbre_v-trObl_rel" ].

utbre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "utbre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbre_v-tr_rel" ].

utbreie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "utbreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbreie_v-tr_rel" ].

utbreie_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "utbreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbreie_v-trObl_rel" ].

utbreie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utbreie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbreie_v-tr_rel" ].

utbringe_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utbringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbringe_v-tr_rel" ].

utbrodere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utbrodere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbrodere_v-tr_rel" ].

utbryte_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "utbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbryte_v-intr_rel" ].

utbryte_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "utbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbryte_v-tr_rel" ].

utbryte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utbryte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbryte_v-tr_rel" ].

utby_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "utby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utby_v-trObl_rel" ].

utby_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "utby" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utby_v-tr_rel" ].

utbygge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utbygge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbygge_v-tr_rel" ].

utbytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utbytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utbytte_v-tr_rel" ].

utdanne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utdanne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utdanne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utdanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdanne_v-tr_rel" ].

utdanne_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utdanne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utdanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utdanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdanne_v-tr_rel" ].

utdebattere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utdebattere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdebattere_v-tr_rel" ].

utdele_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utdele" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utdele_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utdele_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utdele" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdele_v-tr_rel" ].

utdjupe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utdjupe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdjupe_v-tr_rel" ].

utdype_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "utdype" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdype_v-tr_rel" ].

utdø_iv := v-intr &
 [ INFLECTION finstr-dd,
   STEM < "utdø" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utdø_v-intr_rel" ].

utebli_intr-obl-fra := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "utebli" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utebli_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utebli_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "utebli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utebli_v-intr_rel" ].

uteglemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uteglemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteglemme_v-tr_rel" ].

uteglømme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uteglømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteglømme_v-tr_rel" ].

uteksaminere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uteksaminere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteksaminere_v-tr_rel" ].

uteksperimentere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uteksperimentere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteksperimentere_v-tr_rel" ].

utelate_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-strong,
   STEM < "utelate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utelate_v-tr_rel" ].

utelate_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "utelate" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utelate_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utelate_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "utelate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utelate_v-tr_rel" ].

utelate_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utelate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utelate_v-tr_rel" ].

utelukke_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utelukke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utelukke_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utelukke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utelukke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utelukke_v-tr_rel" ].

uteske_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr,
   STEM < "uteske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteske_v-trObl_rel" ].

uteske_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "uteske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uteske_v-tr_rel" ].

utestenge_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utestenge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utestenge_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utestenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utestenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utestenge_v-tr_rel" ].

utfelle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "utfelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfelle_v-tr_rel" ].

utferdige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utferdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utferdige_v-tr_rel" ].

utfolde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "utfolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfolde_v-tr_rel" ].

utfolde_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "utfolde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfolde_v-tr_rel" ].

utfordre_intr-obl-til := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "utfordre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utfordre_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utfordre_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "utfordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfordre_v-trObl_rel" ].

utfordre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utfordre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utfordre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utfordre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utfordre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfordre_v-tr_rel" ].

utforme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utforme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utforme_v-tr_rel" ].

utforske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utforske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utforske_v-tr_rel" ].

utfri_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "utfri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfri_v-tr_rel" ].

utfritte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utfritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfritte_v-trObl_rel" ].

utfritte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utfritte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfritte_v-tr_rel" ].

utfylle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utfylle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utfylle_v-tr_rel" ].

utføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utføre_v-tr_rel" ].

utgi_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION finstr-tt,
   STEM < "utgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgi_v-trObl_rel" ].

utgi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "utgi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgi_v-tr_rel" ].

utgiftsføre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utgiftsføre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgiftsføre_v-tr_rel" ].

utgjøre_copnom := v-copN &
 [ INFLECTION nonfstr-strong,
   STEM < "utgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgjøre_v-copN_rel" ].

utgjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utgjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgjøre_v-tr_rel" ].

utgrunne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utgrunne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgrunne_v-tr_rel" ].

utgyte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "utgyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgyte_v-tr_rel" ].

utgyte_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "utgyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgyte_v-trObl_rel" ].

utgyte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "utgyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgyte_v-tr_rel" ].

utgå_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION finstr-tt,
   STEM < "utgå" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utgå_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

utgå_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "utgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utgå_v-intr_rel" ].

utheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utheve_v-tr_rel" ].

utholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utholde_v-tr_rel" ].

uthole_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uthole" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uthole_v-tr_rel" ].

uthule_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uthule" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uthule_v-tr_rel" ].

utjamne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utjamne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utjamne_v-tr_rel" ].

utjevne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utjevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utjevne_v-tr_rel" ].

utkalle_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkalle_v-trObl_rel" ].

utkalle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utkalle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkalle_v-tr_rel" ].

utkaste_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utkaste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utkaste_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utkaste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utkaste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkaste_v-tr_rel" ].

utkjempe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utkjempe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkjempe_v-tr_rel" ].

utklarere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utklarere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utklarere_v-tr_rel" ].

utklasse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utklasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utklasse_v-tr_rel" ].

utklekke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utklekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utklekke_v-tr_rel" ].

utkoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utkoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkoble_v-tr_rel" ].

utkommandere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utkommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkommandere_v-trObl_rel" ].

utkommandere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utkommandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkommandere_v-tr_rel" ].

utkomme_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "utkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkomme_v-intr_rel" ].

utkonkurrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utkonkurrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkonkurrere_v-tr_rel" ].

utkople_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utkople" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkople_v-tr_rel" ].

utkreve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utkreve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkreve_v-tr_rel" ].

utkrystallisere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utkrystallisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkrystallisere_v-tr_rel" ].

utkrystallisere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utkrystallisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkrystallisere_v-trObl_rel" ].

utkrystallisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utkrystallisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkrystallisere_v-tr_rel" ].

utkåre_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utkåre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utkåre_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utkåre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utkåre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utkåre_v-tr_rel" ].

utlade_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utlade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlade_v-tr_rel" ].

utlate_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "utlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlate_v-tr_rel" ].

utlate_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "utlate" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlate_v-trObl_rel" ].

utlede_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlede_v-trObl_rel" ].

utlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlede_v-tr_rel" ].

utlegge_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-strong,
   STEM < "utlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlegge_v-trScpr_rel" ].

utlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlegge_v-tr_rel" ].

utleie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utleie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utleie_v-tr_rel" ].

utlevere_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "utlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlevere_v-ditr_rel" ].

utlevere_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utlevere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utlevere_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utlevere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlevere_v-tr_rel" ].

utlevere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utlevere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlevere_v-tr_rel" ].

utligne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "utligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utligne_v-intr_rel" ].

utligne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utligne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utligne_v-tr_rel" ].

utlikne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "utlikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlikne_v-intr_rel" ].

utlikne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utlikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlikne_v-tr_rel" ].

utlodde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utlodde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlodde_v-tr_rel" ].

utlosse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utlosse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlosse_v-tr_rel" ].

utlove_ditr := v-ditr &
 [ INFLECTION nonfstr-de,
   STEM < "utlove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlove_v-ditr_rel" ].

utlove_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "utlove" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utlove_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

utlove_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utlove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlove_v-tr_rel" ].

utlyde_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-strong,
   STEM < "utlyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlyde_v-intrObl_rel" ].

utlyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utlyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlyse_v-tr_rel" ].

utlåne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utlåne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utlåne_v-tr_rel" ].

utløpe_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "utløpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utløpe_v-intr_rel" ].

utløse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utløse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utløse_v-tr_rel" ].

utløyse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utløyse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utløyse_v-tr_rel" ].

utmaie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utmaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmaie_v-tr_rel" ].

utmaie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utmaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmaie_v-tr_rel" ].

utmale_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmale_v-ditr_rel" ].

utmale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utmale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmale_v-tr_rel" ].

utmanøvrere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utmanøvrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmanøvrere_v-tr_rel" ].

utmatte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utmatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmatte_v-tr_rel" ].

utmatte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utmatte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmatte_v-tr_rel" ].

utmeisle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utmeisle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmeisle_v-tr_rel" ].

utmerke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utmerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmerke_v-tr_rel" ].

utmerke_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "utmerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmerke_v-trScpr_rel" ].

utmynte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utmynte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmynte_v-tr_rel" ].

utmåle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utmåle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utmåle_v-tr_rel" ].

utnevne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utnevne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utnevne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utnevne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utnevne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utnevne_v-tr_rel" ].

utnytte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utnytte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utnytte_v-tr_rel" ].

utpante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utpante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpante_v-tr_rel" ].

utparsellere_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utparsellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utparsellere_v-trObl_rel" ].

utparsellere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utparsellere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utparsellere_v-tr_rel" ].

utpeke_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utpeke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utpeke_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utpeke_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "utpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpeke_v-trScpr_rel" ].

utpeke_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "utpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpeke_v-trScpr_rel" ].

utpeke_tr-secpr-til := v-trScpr-scObNrg_scPredprtclTil &
 [ INFLECTION nonfstr-te,
   STEM < "utpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpeke_v-trScpr_rel" ].

utpeke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utpeke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpeke_v-tr_rel" ].

utpensle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utpensle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpensle_v-tr_rel" ].

utplassere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "utplassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utplassere_v-trScpr_rel" ].

utplassere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utplassere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utplassere_v-tr_rel" ].

utplyndre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utplyndre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utplyndre_v-tr_rel" ].

utporsjonere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utporsjonere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utporsjonere_v-tr_rel" ].

utprege_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utprege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utprege_v-tr_rel" ].

utprøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utprøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utprøve_v-tr_rel" ].

utpønse_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "utpønse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpønse_v-tr_rel" ].

utpønske_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utpønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utpønske_v-tr_rel" ].

utradere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utradere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utradere_v-tr_rel" ].

utrangere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utrangere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrangere_v-tr_rel" ].

utrede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utrede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrede_v-tr_rel" ].

utrette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utrette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrette_v-tr_rel" ].

utringe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utringe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utringe_v-tr_rel" ].

utrope_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-te,
   STEM < "utrope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrope_v-ditr_rel" ].

utrope_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utrope" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrope_v-tr_rel" ].

utruste_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utruste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utruste_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utruste_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utruste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utruste_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

utruste_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utruste" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utruste_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utruste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utruste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utruste_v-tr_rel" ].

utrydde_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utrydde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utrydde_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

utrydde_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utrydde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utrydde_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utrydde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utrydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utrydde_v-tr_rel" ].

utse_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "utse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utse_v-ditr_rel" ].

utse_tr-obl := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "utse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utse_v-trObl_rel" ].

utse_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "utse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utse_v-tr_rel" ].

utsende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utsende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsende_v-tr_rel" ].

utsette_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "utsette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utsette_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

utsette_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "utsette" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utsette_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

utsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsette_v-tr_rel" ].

utsi_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "utsi" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsi_v-tr_rel" ].

utskille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utskille_v-tr_rel" ].

utskille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utskille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utskille_v-tr_rel" ].

utskipe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utskipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utskipe_v-tr_rel" ].

utskrive_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "utskrive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utskrive_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utskrive_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utskrive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utskrive_v-tr_rel" ].

utskyte_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utskyte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utskyte_v-tr_rel" ].

utslette_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utslette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utslette_v-tr_rel" ].

utslynge_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "utslynge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utslynge_v-tr_rel" ].

utsmykke_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utsmykke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utsmykke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utsmykke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utsmykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsmykke_v-tr_rel" ].

utsmykke_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utsmykke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utsmykke_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utsmykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utsmykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsmykke_v-tr_rel" ].

utsondre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utsondre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsondre_v-tr_rel" ].

utsone_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utsone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsone_v-tr_rel" ].

utsortere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utsortere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsortere_v-tr_rel" ].

utspare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utspare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspare_v-tr_rel" ].

utspeide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utspeide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspeide_v-tr_rel" ].

utspille_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspille_v-tr_rel" ].

utspille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utspille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspille_v-tr_rel" ].

utspinne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utspinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspinne_v-tr_rel" ].

utspinne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utspinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspinne_v-tr_rel" ].

utspionere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utspionere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspionere_v-tr_rel" ].

utspre_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "utspre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspre_v-tr_rel" ].

utsprede_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utsprede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsprede_v-tr_rel" ].

utspørre_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "utspørre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utspørre_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

utspørre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utspørre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utspørre_v-tr_rel" ].

utstaffere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utstaffere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstaffere_v-tr_rel" ].

utstaffere_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utstaffere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstaffere_v-trObl_rel" ].

utstaffere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utstaffere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstaffere_v-tr_rel" ].

utstede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utstede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstede_v-tr_rel" ].

utstille_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utstille" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstille_v-tr_rel" ].

utstoppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utstoppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstoppe_v-tr_rel" ].

utstråle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utstråle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstråle_v-tr_rel" ].

utstykke_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utstykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstykke_v-trObl_rel" ].

utstykke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utstykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstykke_v-tr_rel" ].

utstyre_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utstyre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utstyre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utstyre_tr-refl-obl-med := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "utstyre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utstyre_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utstyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utstyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstyre_v-tr_rel" ].

utstå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "utstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstå_v-tr_rel" ].

utstøte_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utstøte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utstøte_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utstøte_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utstøte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utstøte_v-tr_rel" ].

utsuge_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utsuge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utsuge_v-tr_rel" ].

utta_tr-obl-fra := v-trObl &
 [ INFLECTION finstr-tt,
   STEM < "utta" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utta_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "utta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utta_v-tr_rel" ].

uttale_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "uttale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttale_v-tr_rel" ].

uttale_tr-refl-obl-om := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "uttale" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_uttale_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

uttale_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "uttale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttale_v-tr_rel" ].

uttale_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uttale" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttale_v-tr_rel" ].

uttegne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uttegne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttegne_v-tr_rel" ].

uttrykke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "uttrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttrykke_v-tr_rel" ].

uttrykke_tv := v-tr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "uttrykke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttrykke_v-tr_rel" ].

uttvære_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "uttvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttvære_v-intr_rel" ].

uttvære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "uttvære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttvære_v-tr_rel" ].

uttyde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "uttyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_uttyde_v-tr_rel" ].

utvandre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "utvandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvandre_v-intr_rel" ].

utvandre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "utvandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvandre_v-intr_rel" ].

utvanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utvanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvanne_v-tr_rel" ].

utvatne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utvatne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvatne_v-tr_rel" ].

utveksle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "utveksle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utveksle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

utveksle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utveksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utveksle_v-tr_rel" ].

utvide_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utvide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvide_v-tr_rel" ].

utvide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utvide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvide_v-tr_rel" ].

utvikle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvikle_v-tr_rel" ].

utvikle_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "utvikle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utvikle_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

utvikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvikle_v-tr_rel" ].

utvinne_tr-obl-fra := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "utvinne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_utvinne_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

utvinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "utvinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvinne_v-tr_rel" ].

utvirke_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "utvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvirke_v-tr_rel" ].

utvirke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "utvirke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utvirke_v-tr_rel" ].

utånde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "utånde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utånde_v-intr_rel" ].

utøse_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "utøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utøse_v-trObl_rel" ].

utøse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "utøse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utøse_v-tr_rel" ].

utøve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "utøve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_utøve_v-tr_rel" ].

vabbe_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vabbe_v-intr_rel" ].

vabbe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vabbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vabbe_v-intr_rel" ].

vade_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vade_v-intr_rel" ].

vade_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vade" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vade_v-intr_rel" ].

vadre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vadre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vadre_v-intr_rel" ].

vadre_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "vadre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vadre_v-trPath_rel" ].

vafle_tr-detachposs := v-trObl-oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "vafle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vafle_v-trObl_rel" ].

vafle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vafle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vafle_v-tr_rel" ].

vagabondere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vagabondere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vagabondere_v-intr_rel" ].

vagge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vagge_v-intr_rel" ].

vagge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vagge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vagge_v-intr_rel" ].

vagle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vagle_v-intr_rel" ].

vagle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vagle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vagle_v-tr_rel" ].

vaie_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaie_v-intr_rel" ].

vaie_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vaie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaie_v-intr_rel" ].

vake_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vake" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vake_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

vake_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vake_v-intr_rel" ].

vakle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vakle_v-intr_rel" ].

vakle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vakle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vakle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

vakle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vakle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vakle_v-intr_rel" ].

vakne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "vakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vakne_v-intrPrtcl_rel" ].

vakne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vakne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vakne_v-intr_rel" ].

vaksinere_intr-obl-mot := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "vaksinere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaksinere_v-intrObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

vaksinere_tr-obl-mot := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "vaksinere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaksinere_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

vaksinere_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vaksinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaksinere_v-tr_rel" ].

vaksinere_tr-refl-obl-mot := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vaksinere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaksinere_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

vaksinere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vaksinere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaksinere_v-tr_rel" ].

vakte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vakte_v-intrObl_rel" ].

valandere_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "valandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valandere_v-intr_rel" ].

valandere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "valandere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valandere_v-intr_rel" ].

valfarte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "valfarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valfarte_v-intr_rel" ].

valfarte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "valfarte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valfarte_v-intr_rel" ].

validere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "validere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_validere_v-tr_rel" ].

valke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "valke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valke_v-tr_rel" ].

valne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "valne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valne_v-intrPrtcl_rel" ].

valne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "valne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valne_v-intr_rel" ].

valne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "valne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valne_v-tr_rel" ].

valpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "valpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valpe_v-intr_rel" ].

valse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "valse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valse_v-intr_rel" ].

valse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "valse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valse_v-intr_rel" ].

valse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "valse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ned-k ].

valse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "valse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valse_v-tr_rel" ].

valte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "valte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valte_v-intrObl_rel" ].

valte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "valte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valte_v-intr_rel" ].

valutere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "valutere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valutere_v-tr_rel" ].

valvere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "valvere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_valvere_v-tr_rel" ].

vanakte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanakte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanakte_v-tr_rel" ].

vandalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vandalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vandalisere_v-tr_rel" ].

vande_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vande" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vande_v-tr_rel" ].

vandle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vandle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vandle_v-intr_rel" ].

vandre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vandre_v-intr_rel" ].

vandre_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "vandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vandre_v-intrPrtcl_rel" ].

vandre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vandre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vandre_v-intr_rel" ].

vanhedre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanhedre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanhedre_v-tr_rel" ].

vanhellige_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanhellige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanhellige_v-tr_rel" ].

vanke_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vanke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vanke_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

vanke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "vanke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanke_v-intrPrtcl_rel" ].

vannbeise_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vannbeise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vannbeise_v-tr_rel" ].

vanne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

vanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanne_v-tr_rel" ].

vannkjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vannkjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vannkjemme_v-tr_rel" ].

vannkjemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vannkjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vannkjemme_v-tr_rel" ].

vannslipe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vannslipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vannslipe_v-tr_rel" ].

vanrøkte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanrøkte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanrøkte_v-tr_rel" ].

vansire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vansire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vansire_v-tr_rel" ].

vanskeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "vanskeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanskeliggjøre_v-tr_rel" ].

vanskjøtte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanskjøtte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanskjøtte_v-tr_rel" ].

vanslekte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vanslekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanslekte_v-intrObl_rel" ].

vansmekte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vansmekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vansmekte_v-intrObl_rel" ].

vansmekte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vansmekte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vansmekte_v-intr_rel" ].

vanstelle_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vanstelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanstelle_v-intr_rel" ].

vanstelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vanstelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanstelle_v-tr_rel" ].

vanstyre_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vanstyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanstyre_v-intr_rel" ].

vanstyre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vanstyre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanstyre_v-tr_rel" ].

vante_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vante" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vante_v-tr_rel" ].

vantrives_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "vantrives" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vantrives_v-intr_rel" ].

vanvørde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanvørde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanvørde_v-tr_rel" ].

vanvøre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vanvøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanvøre_v-tr_rel" ].

vanære_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vanære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vanære_v-tr_rel" ].

;varde_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "varde" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_varde_v-trScpr_rel" ].

vare_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "vare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vare_v-intrPrtcl_rel" ].

;vare_iv := v-intr &
; [ INFLECTION nonfstr-te,
;   STEM < "vare" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_vare_v_rel" ].

vare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vare_v-tr_rel" ].

vareta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "vareta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vareta_v-tr_rel" ].

varetektsfengsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varetektsfengsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varetektsfengsle_v-tr_rel" ].

variere_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "variere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_variere_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

variere_intr-obl-mellom := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "variere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_variere_v-intrObl_rel",
            LOCAL.KEY-SPEC mellom-k ] ].

variere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "variere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_variere_v-intr_rel" ].

variere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "variere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_variere_v-tr_rel" ].

varme_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "varme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varme_v-intrPrtcl_rel" ].

varme_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "varme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varme_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

varme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "varme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varme_v-tr_rel" ].

varme_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varme_v-tr_rel" ].

varmhamre_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varmhamre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmhamre_v-tr_rel" ].

varmherde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varmherde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmherde_v-tr_rel" ].

varmheve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "varmheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmheve_v-intr_rel" ].

varmheve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "varmheve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmheve_v-tr_rel" ].

varmrøke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "varmrøke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmrøke_v-tr_rel" ].

varmrøyke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varmrøyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varmrøyke_v-tr_rel" ].

varpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "varpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varpe_v-intr_rel" ].

varpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varpe_v-tr_rel" ].

varsku_intr-obl := v-intrObl-oblN &
 [ INFLECTION finstr-dd,
   STEM < "varsku" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varsku_v-intrObl_rel" ].

varsku_tr-obl := v-trObl &
 [ INFLECTION finstr-dd,
   STEM < "varsku" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varsku_v-trObl_rel" ].

varsku_tv := v-tr &
 [ INFLECTION finstr-dd,
   STEM < "varsku" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varsku_v-tr_rel" ].

varsle_intr-obl-om := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "varsle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_varsle_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

varsle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "varsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varsle_v-intr_rel" ].

varsle_tr-obl-om := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "varsle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_varsle_v-trObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

varsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "varsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varsle_v-tr_rel" ].

varte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "varte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varte_v-intrPrtcl_rel" ].

varte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "varte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_varte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

vase_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "vase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vase_v-intr_rel" ].

vase_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vase_v-intr_rel" ].

vase_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vase_v-trPrtcl_rel" ].

vase_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "vase" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vase_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k ].

vaske_intr := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaske_v-intr_rel" ] ].

vaske_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaske_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

vaske_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vaske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

vaske_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaske_v-intrPrtcl_rel" ].

vaske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaske_v-trScpr_rel" ].

vaske_tr-detachposs-refl := v-trObl-obRefl_oblPRTOFob &
 [ INFLECTION nonfstr-et,
   STEM < "vaske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vaske_v-trObl_rel" ].

vass-slipe_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vass-slipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vass-slipe_v-tr_rel" ].

vassbeise_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vassbeise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vassbeise_v-tr_rel" ].

vasse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vasse_v-intr_rel" ].

vasse_intr-obl-i := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vasse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vasse_v-intrObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

vasse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vasse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vasse_v-intr_rel" ].

vasskjemme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vasskjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vasskjemme_v-tr_rel" ].

vasskjemme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vasskjemme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vasskjemme_v-tr_rel" ].

vasslipe_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vasslipe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vasslipe_v-tr_rel" ].

vatne_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vatne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vatne_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

vatne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vatne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vatne_v-tr_rel" ].

vedbli_iv := v-intr &
 [ INFLECTION finstr-tt,
   STEM < "vedbli" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedbli_v-intr_rel" ].

vedde_intr-obl-på := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "vedde" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vedde_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

vedde_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vedde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedde_v-intr_rel" ].

vedde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "vedde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedde_v-tr_rel" ].

vedde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vedde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedde_v-tr_rel" ].

vederfares_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vederfares" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vederfares_v-tr_rel" ].

vederkvege_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vederkvege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vederkvege_v-tr_rel" ].

vedgå_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "vedgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedgå_v-tr_rel" ].

vedgå_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "vedgå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedgå_v-tr_rel" ].

vedkjenne_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vedkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedkjenne_v-ditr_rel" ].

vedkjenne_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "vedkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedkjenne_v-ditr_rel" ].

vedkjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vedkjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedkjenne_v-tr_rel" ].

vedkomme_io-epon := v-trExpnSu-expnDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "vedkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedkomme_v-trExpnSu_rel" ].

vedkomme_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "vedkomme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedkomme_v-tr_rel" ].

vedlegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "vedlegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedlegge_v-tr_rel" ].

vedlikeholde_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "vedlikeholde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedlikeholde_v-tr_rel" ].

vedrøre_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vedrøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedrøre_v-tr_rel" ].

vedstå_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION finstr-tt,
   STEM < "vedstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedstå_v-ditr_rel" ].

vedstå_ditr-refl-subord := v-ditr-iobRefl_obDECL &
 [ INFLECTION finstr-tt,
   STEM < "vedstå" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedstå_v-ditr_rel" ].

vedta_subj-equi := v-tr-obEqInf &
 [ INFLECTION finstr-tt,
   STEM < "vedta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedta_v-tr_rel" ].

vedta_tr-subord := v-tr-obDECL &
 [ INFLECTION finstr-tt,
   STEM < "vedta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedta_v-tr_rel" ].

vedta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "vedta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedta_v-tr_rel" ].

vedtektsfeste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vedtektsfeste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedtektsfeste_v-tr_rel" ].

vedvare_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vedvare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vedvare_v-intr_rel" ].

vefte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vefte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vefte_v-tr_rel" ].

vege_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "vege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vege_v-intrObl_rel" ].

vege_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "vege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vege_v-intr_rel" ].

vege_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "vege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vege_v-tr_rel" ].

vege_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "vege" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vege_v-tr_rel" ].

vegetere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vegetere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vegetere_v-intr_rel" ].

vegre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vegre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vegre_v-intr_rel" ].

vegre_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "vegre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vegre_v-trObl_rel" ].

vegre_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "vegre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vegre_v-tr_rel" ].

vegre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vegre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vegre_v-tr_rel" ].

vegre_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vegre" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vegre_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

veide_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "veide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veide_v-intr_rel" ].

veide_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "veide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veide_v-tr_rel" ].

veie_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-de,
   STEM < "veie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veie_v-intrObl_rel" ].

veie_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "veie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veie_v-intr_rel" ].

veie_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "veie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veie_v-tr_rel" ].

veie_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "veie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veie_v-tr_rel" ].

veikne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "veikne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veikne_v-intr_rel" ].

veilede_tr-obl-i := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "veilede" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_veilede_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

veilede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "veilede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veilede_v-tr_rel" ].

veite_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "veite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veite_v-intr_rel" ].

veite_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "veite" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veite_v-tr_rel" ].

veive_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "veive" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_veive_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

veive_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "veive" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veive_v-intr_rel" ].

vekke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "vekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vekke_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC opp-k ].

vekke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vekke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vekke_v-tr_rel" ].

vekne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vekne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vekne_v-intr_rel" ].

veksle_intr-obl-med := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "veksle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_veksle_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

veksle_intr-obl-mellom := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "veksle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_veksle_v-intrObl_rel",
            LOCAL.KEY-SPEC mellom-k ] ].

veksle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "veksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veksle_v-trScpr_rel" ].

veksle_tr-obl-med := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "veksle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_veksle_v-trObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

veksle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "veksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veksle_v-tr_rel" ].

velle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "velle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velle_v-intr_rel" ].

velle_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "velle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velle_v-intrPrtcl_rel" ].

velsigne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "velsigne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velsigne_v-tr_rel" ].

velte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-intr_rel" ].

velte_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-intrObl_rel" ].

velte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-intrPrtcl_rel" ].

velte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-intr_rel" ].

velte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-trScpr_rel" ].

velte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "velte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_velte_v-tr_rel" ].

vemmes_intr-obl-over := v-intrObl-oblN &
 [ INFLECTION nonfstr,
   STEM < "vemmes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vemmes_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

vemmes_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "vemmes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vemmes_v-intr_rel" ].

vende_ditr := v-ditr &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-ditr_rel" ].

vende_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-intr_rel" ].

vende_intr-obl := v-intrObl-oblN &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-intrObl_rel" ].

vende_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-intr_rel" ].

vende_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-tr_rel" ].

vende_tr-obl := v-trObl &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-trObl_rel" ].

vende_tr-refl-obl-fra := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vende_v-trObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

vende_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vende" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vende_v-tr_rel" ].

venne_obj-eq-pp := v-trObl-oblEqObInf &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "venne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_venne_v-trObl_rel" ].

venne_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "venne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_venne_v-trObl_rel" ].

venne_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "venne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_venne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

venne_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "venne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_venne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

vente_subj-eq-pp := v-intrObl-oblEqSuInf &
 [ INFLECTION nonfstr-et,
   STEM < "vente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vente_v-intrObl_rel" ].

vente_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "vente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vente_v-tr_rel" ].

vente_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vente" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vente_v-tr_rel" ].

ventilere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "ventilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ventilere_v-tr_rel" ].

verbalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "verbalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verbalisere_v-tr_rel" ].

verdige_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "verdige" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdige_v-ditr_rel" ].

verdsette_tr-obl := v-trObl &
 [ INFLECTION nonfstr-strong,
   STEM < "verdsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdsette_v-trObl_rel" ].

verdsette_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "verdsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdsette_v-trAdv_rel" ].

verdsette_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "verdsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdsette_v-tr_rel" ].

verdsette_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "verdsette" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdsette_v-tr_rel" ].

verdsliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "verdsliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verdsliggjøre_v-tr_rel" ].

verge_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "verge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verge_v-trObl_rel" ].

verge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verge_v-tr_rel" ].

verge_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verge_v-trObl_rel" ].

verge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "verge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verge_v-tr_rel" ].

verifisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "verifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verifisere_v-tr_rel" ].

verifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "verifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verifisere_v-tr_rel" ].

verje_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "verje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verje_v-trObl_rel" ].

verje_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verje_v-tr_rel" ].

verje_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verje_v-trObl_rel" ].

verje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "verje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verje_v-tr_rel" ].

verke_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "verke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verke_v-intrImpersObl_rel" ].

verke_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "verke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verke_v-intrObl_rel" ].

verke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "verke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verke_v-intr_rel" ].

vernalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vernalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vernalisere_v-tr_rel" ].

verne_intr-obl-om := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "verne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_verne_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

verne_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "verne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verne_v-trObl_rel" ].

verne_tr-refl-obl-mot := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_verne_v-trObl_rel",
            LOCAL.KEY-SPEC mot-k ] ].

verne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "verne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verne_v-tr_rel" ].

verpe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "verpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verpe_v-intr_rel" ].

verpe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "verpe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verpe_v-tr_rel" ].

versere_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "versere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_versere_v-intrObl_rel" ].

versere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "versere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_versere_v-intr_rel" ].

versifisere_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "versifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_versifisere_v-tr_rel" ].

versifisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "versifisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_versifisere_v-tr_rel" ].

versne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "versne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_versne_v-intr_rel" ].

verve_tr-obl-til := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "verve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_verve_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

verve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "verve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verve_v-tr_rel" ].

verve_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "verve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verve_v-trScpr_rel" ].

verve_tr-secpr-nonv := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-et,
   STEM < "verve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verve_v-trScpr_rel" ].

verve_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "verve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_verve_v-tr_rel" ].

vettskremme_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vettskremme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vettskremme_v-tr_rel" ].

veve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "veve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veve_v-intr_rel" ].

veve_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-de,
   STEM < "veve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veve_v-trScpr_rel" ].

veve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "veve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_veve_v-tr_rel" ].

vibrere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vibrere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vibrere_v-intr_rel" ].

vide_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "vide" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vide_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

videreforedle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "videreforedle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_videreforedle_v-tr_rel" ].

videreutdanne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "videreutdanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_videreutdanne_v-tr_rel" ].

videreutdanne_tr-refl-obl-i := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "videreutdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_videreutdanne_v-trObl_rel",
            LOCAL.KEY-SPEC i-k ] ].

videreutdanne_tr-refl-obl-innenfor := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "videreutdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_videreutdanne_v-trObl_rel",
            LOCAL.KEY-SPEC innenfor-k ] ].

videreutdanne_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "videreutdanne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_videreutdanne_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

videreutdanne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "videreutdanne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_videreutdanne_v-tr_rel" ].

videreutvikle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "videreutvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_videreutvikle_v-tr_rel" ].

videreutvikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "videreutvikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_videreutvikle_v-tr_rel" ].

vie_ditr := v-ditr &
 [ INFLECTION nonfstr-et,
   STEM < "vie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vie_v-ditr_rel" ].

vifte_intr-obl-med := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vifte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vifte_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

vifte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vifte_v-intr_rel" ].

vifte_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vifte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vifte_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

vigge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vigge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vigge_v-tr_rel" ].

vigilere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vigilere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vigilere_v-intr_rel" ].

vigle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vigle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vigle_v-tr_rel" ].

vigsle_obj-equi := v-ditr-obEqIobInf &
 [ INFLECTION nonfstr-et,
   STEM < "vigsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vigsle_v-ditr_rel" ].

vigsle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vigsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vigsle_v-tr_rel" ].

vikariere_intr-obl-for := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "vikariere" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vikariere_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

vikariere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vikariere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vikariere_v-intr_rel" ].

vike_intr-obl-fra := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vike" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vike_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

vike_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "vike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vike_v-intrPrtcl_rel" ].

vike_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vike_v-intr_rel" ].

vike_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vike" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vike_v-tr_rel" ].

vikle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vikle_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC inn-k  ].

vikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vikle_v-tr_rel" ].

vikte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vikte_v-tr_rel" ].

vildre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vildre_v-intr_rel" ].

vildre_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vildre_v-trPrtcl_rel" ].

vildre_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "vildre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vildre_v-trPath_rel" ].

vill-lede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vill-lede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vill-lede_v-tr_rel" ].

vill-leie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vill-leie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vill-leie_v-tr_rel" ].

ville_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-strong,
   STEM < "ville" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ville_v-tr_rel" ].

villede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "villede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_villede_v-tr_rel" ].

villeie_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "villeie" >,
   SYNSEM.LKEYS.KEYREL.PRED "_villeie_v-tr_rel" ].

vime_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "vime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vime_v-intr_rel" ].

vime_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr,
   STEM < "vime" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vime_v-trPath_rel" ].

vimre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vimre_v-intr_rel" ].

vimre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vimre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vimre_v-intr_rel" ].

vimse_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vimse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vimse_v-intr_rel" ].

vimse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vimse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vimse_v-intr_rel" ].

vinde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vinde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinde_v-tr_rel" ].

vindisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vindisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vindisere_v-tr_rel" ].

vinge_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinge_v-intr_rel" ].

vinge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vinge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinge_v-intr_rel" ].

vingle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vingle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vingle_v-intr_rel" ].

vingle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vingle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vingle_v-intr_rel" ].

vinke_intr-obl-til := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vinke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vinke_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

vinke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinke_v-intr_rel" ].

vinke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinke_v-trScpr_rel" ].

vinke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vinke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinke_v-tr_rel" ].

;vinkle_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "vinkle" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_vinkle_v-trScpr_rel" ].

vinkle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vinkle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinkle_v-tr_rel" ].

vinne_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-strong,
   STEM < "vinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinne_v-intrObl_rel" ].

vinne_iv := v-intr &
 [ INFLECTION nonfstr-strong,
   STEM < "vinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinne_v-intr_rel" ].

;vinne_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-strong,
;   STEM < "vinne" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_vinne_v-trScpr_rel" ].

vinne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "vinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinne_v-tr_rel" ].

vinne_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "vinne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinne_v-tr_rel" ].

vinsje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vinsje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinsje_v-tr_rel" ].

vinterisolere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vinterisolere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vinterisolere_v-tr_rel" ].

vintre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vintre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vintre_v-intr_rel" ].

vintres_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "vintres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vintres_v-intrImpers_rel" ].

vippe_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vippe_v-intrObl_rel" ].

vippe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vippe_v-intr_rel" ].

vippe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vippe_v-trScpr_rel" ].

vippe_tr-dir := v-tr-obDir &
 [ INFLECTION nonfstr-et,
   STEM < "vippe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vippe_v-tr_rel" ].

vire_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vire" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vire_v-tr_rel" ].

virilisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "virilisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virilisere_v-tr_rel" ].

virke_intr-obl-på := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "virke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_virke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

virke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "virke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virke_v-intr_rel" ].

virkeliggjøre_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "virkeliggjøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virkeliggjøre_v-tr_rel" ].

virre_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "virre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virre_v-intr_rel" ].

virre_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "virre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virre_v-intrObl_rel" ].

virre_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "virre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virre_v-intr_rel" ].

virre_tr-arg12-refl-secpred := v-trScpr-obRefl_scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "virre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virre_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

virvle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "virvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virvle_v-intr_rel" ].

virvle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "virvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virvle_v-intr_rel" ].

virvle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "virvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_virvle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

vise_intr-obl-til := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "vise" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vise_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

vise_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vise_v-tr_rel" ].

vise_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-te,
   STEM < "vise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vise_v-tr_rel" ].

vise_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vise" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vise_v-tr_rel" ].

visere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "visere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visere_v-tr_rel" ].

visitere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "visitere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visitere_v-tr_rel" ].

viske_intr-obl-med := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "viske" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_viske_v-intrObl_rel",
            LOCAL.KEY-SPEC med-k ] ].

viske_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "viske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_viske_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

visle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "visle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visle_v-intr_rel" ].

visne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "visne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visne_v-intrPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

visne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "visne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visne_v-intr_rel" ].

vispe_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vispe_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC sammen-k ].

vispe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vispe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vispe_v-tr_rel" ].

visualisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "visualisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_visualisere_v-tr_rel" ].

vitalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vitalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vitalisere_v-tr_rel" ].

vitaminisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vitaminisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vitaminisere_v-tr_rel" ].

vitje_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vitje" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vitje_v-tr_rel" ].

vitne_intr-obl-om := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vitne" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vitne_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

vitne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vitne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vitne_v-intr_rel" ].

vitse_intr-obl-om := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vitse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vitse_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

vitse_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vitse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vitse_v-intr_rel" ].

vivisekere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vivisekere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vivisekere_v-intr_rel" ].

vivisekere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vivisekere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vivisekere_v-tr_rel" ].

voffe_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "voffe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_voffe_v-intr_rel" ].

vogge_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vogge_v-intrObl_rel" ].

vogge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vogge_v-intr_rel" ].

vogge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vogge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vogge_v-tr_rel" ].

vokalisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vokalisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokalisere_v-tr_rel" ].

vokse_intr-obl-fra := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vokse_v-intrObl_rel",
            LOCAL.KEY-SPEC fra-k ] ].

vokse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokse_v-intrPrtcl_rel" ].

vokse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokse_v-intr_rel" ].

vokse_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokse_v-trScprShft_rel" ].

vokse_tr-secpred-arg1-refl := v-trScpr-scObNrgCsd_obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokse_v-trScpr_rel" ].

vokse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vokse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokse_v-tr_rel" ].

vokte_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vokte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokte_v-intrObl_rel" ].

vokte_tr-obl-for := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "vokte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vokte_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

vokte_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vokte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vokte_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

vokte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vokte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vokte_v-tr_rel" ].

volde_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "volde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_volde_v-tr_rel" ].

voldta_tv := v-tr &
 [ INFLECTION finstr-tt,
   STEM < "voldta" >,
   SYNSEM.LKEYS.KEYREL.PRED "_voldta_v-tr_rel" ].

voltere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "voltere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_voltere_v-intr_rel" ].

voltigere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "voltigere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_voltigere_v-intr_rel" ].

vomere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "vomere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vomere_v-intr_rel" ].

vone_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vone_v-intrObl_rel" ].

vone_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "vone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vone_v-tr_rel" ].

vone_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "vone" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vone_v-tr_rel" ].

vorde_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "vorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vorde_v-tr_rel" ].

vorde_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "vorde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vorde_v-tr_rel" ].

votere_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "votere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_votere_v-intrObl_rel" ].

votere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "votere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_votere_v-intr_rel" ].

votere_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "votere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_votere_v-trScpr_rel" ].

vove_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "vove" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vove_v-intr_rel" ].

vrake_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vrake" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrake_v-tr_rel" ].

vralte_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vralte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vralte_v-intr_rel" ].

vralte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vralte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vralte_v-intr_rel" ].

vredes_intr-obl-over := v-intrObl &
 [ INFLECTION nonfstr,
   STEM < "vredes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vredes_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

vredes_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "vredes" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vredes_v-intr_rel" ].

vrenge_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "vrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrenge_v-intrObl_rel" ].

vrenge_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-te,
   STEM < "vrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrenge_v-trScprShft_rel" ].

vrenge_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vrenge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrenge_v-tr_rel" ].

vri_intr-obl := v-intrObl &
 [ INFLECTION finstr-dd,
   STEM < "vri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vri_v-intrObl_rel" ].

vri_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION finstr-dd,
   STEM < "vri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vri_v-trScpr_rel" ].

vri_tr-refl := v-tr-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "vri" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vri_v-tr_rel" ].

vri_tr-refl-obl-av := v-trObl-obRefl &
 [ INFLECTION finstr-dd,
   STEM < "vri" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vri_v-trObl_rel",
            LOCAL.KEY-SPEC av-k ] ].

vrikke_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikke_v-intr_rel" ].

vrikke_intr-obl-på := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vrikke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vrikke_v-intrObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

vrikke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikke_v-intr_rel" ].

vrikke_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "vrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikke_v-trScpr_rel" ].

vrikke_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "vrikke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikke_v-trPath_rel" ].

vrikle_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vrikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikle_v-intrObl_rel" ].

vrikle_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vrikle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrikle_v-tr_rel" ].

vrimle_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr-et,
   STEM < "vrimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrimle_v-intrImpersObl_rel" ].

vrimle_intr-dir := v-intr-suDir &
 [ INFLECTION nonfstr-et,
   STEM < "vrimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrimle_v-intr_rel" ].

vrimle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vrimle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrimle_v-intr_rel" ].

vringle_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vringle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vringle_v-trPrtcl_rel" ].

vringle_tr-refl-dir := v-trPath-obRefl_obDir &
 [ INFLECTION nonfstr-et,
   STEM < "vringle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vringle_v-trPath_rel" ].

vrinske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vrinske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrinske_v-intr_rel" ].

vriste_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vriste_v-trPrtcl_rel" ].

vriste_tr-ppshift := v-trScprShft-scObNrgRes_scPP-PLACEMENT &
 [ INFLECTION nonfstr-et,
   STEM < "vriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vriste_v-trScprShft_rel" ].

vriste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vriste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vriste_v-tr_rel" ].

vræle_iv := v-intr &
 [ INFLECTION nonfstr-et_or_te,
   STEM < "vræle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vræle_v-intr_rel" ].

vrøvle_intr-obl-om := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vrøvle" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_vrøvle_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

vrøvle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vrøvle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vrøvle_v-intr_rel" ].

vugge_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "vugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vugge_v-intrObl_rel" ].

vugge_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "vugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vugge_v-intr_rel" ].

vugge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vugge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vugge_v-tr_rel" ].

vulgarisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vulgarisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vulgarisere_v-tr_rel" ].

vulkanisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vulkanisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vulkanisere_v-tr_rel" ].

vulke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vulke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vulke_v-tr_rel" ].

vurdere_tr-obladv-refl := v-trAdv-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "vurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vurdere_v-trAdv_rel" ].

vurdere_tr-secpr-som := v-trScpr-scObNrg_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "vurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vurdere_v-trScpr_rel" ].

vurdere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "vurdere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vurdere_v-tr_rel" ].

våge_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-et,
   STEM < "våge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våge_v-trObl_rel" ].

våge_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "våge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våge_v-tr_rel" ].

våge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "våge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våge_v-tr_rel" ].

våge_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "våge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_våge_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

våge_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "våge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våge_v-tr_rel" ].

våke_intr-obl-over := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "våke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_våke_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

våke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "våke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våke_v-intr_rel" ].

våkne_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "våkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våkne_v-intrPrtcl_rel" ].

våkne_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "våkne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våkne_v-intr_rel" ].

våle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "våle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våle_v-intr_rel" ].

vånde_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "vånde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vånde_v-tr_rel" ].

våre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "våre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våre_v-intrImpers_rel" ].

våres_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-te,
   STEM < "våres" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våres_v-intrImpers_rel" ].

våse_intr-obl := v-intrObl &
 [ INFLECTION nonfstr,
   STEM < "våse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våse_v-intrObl_rel" ].

våse_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "våse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våse_v-intr_rel" ].

våtne_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "våtne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_våtne_v-intr_rel" ].

væpne_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "væpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væpne_v-tr_rel" ].

væpne_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "væpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væpne_v-trObl_rel" ].

væpne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "væpne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væpne_v-tr_rel" ].

væske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "væske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væske_v-intr_rel" ].

væske_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "væske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væske_v-tr_rel" ].

væte_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "væte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væte_v-trPrtcl_rel",
   SYNSEM.LOCAL.KEY-SPEC ut-k ].

;væte_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "væte" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_væte_v-trScpr_rel" ].

væte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "væte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væte_v-tr_rel" ].

væte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "væte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_væte_v-tr_rel" ].

vøle_intr-obl := v-intrObl &
 [ INFLECTION nonfstr,
   STEM < "vøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vøle_v-intrObl_rel" ].

vøle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "vøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vøle_v-intr_rel" ].

vøle_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vøle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vøle_v-tr_rel" ].

vørde_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "vørde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vørde_v-tr_rel" ].

vørde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "vørde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vørde_v-tr_rel" ].

vøre_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr,
   STEM < "vøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vøre_v-tr_rel" ].

vøre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "vøre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_vøre_v-tr_rel" ].

webbe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "webbe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_webbe_v-tr_rel" ].

;x-e_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "x-e" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_x-e_v-trScpr_rel" ].

xerografere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "xerografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_xerografere_v-intr_rel" ].

xerografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "xerografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_xerografere_v-tr_rel" ].

xylografere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "xylografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_xylografere_v-intr_rel" ].

xylografere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "xylografere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_xylografere_v-tr_rel" ].

ydde_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "ydde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ydde_v-intr_rel" ].

ydmyke_obj-eq-pp-refl := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr,
   STEM < "ydmyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ydmyke_v-trObl_rel" ].

ydmyke_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "ydmyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ydmyke_v-trObl_rel" ].

ydmyke_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "ydmyke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ydmyke_v-tr_rel" ].

yle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "yle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yle_v-intr_rel" ].

ymte_intr-obl-om := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "ymte" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ymte_v-intrObl_rel",
            LOCAL.KEY-SPEC om-k ] ].

ymte_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-et,
   STEM < "ymte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ymte_v-intrPrtcl_rel" ].

ynde_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "ynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynde_v-tr_rel" ].

ynde_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynde_v-trPrtcl_rel" ].

ynde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ynde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynde_v-tr_rel" ].

;ynge_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-et,
;   STEM < "ynge" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_ynge_v-trScpr_rel" ].

ynges_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ynges" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynges_v-intr_rel" ].

yngle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "yngle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yngle_v-intr_rel" ].

ynke_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynke_v-tr_rel" ].

ynke_tr-refl-obl-over := v-trObl-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ynke" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ynke_v-trObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

ynke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ynke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ynke_v-tr_rel" ].

ynkes_intr-obl-over := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "ynkes" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ynkes_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

yppe_intr-obl-til := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "yppe" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_yppe_v-intrObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

yppe_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "yppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yppe_v-tr_rel" ].

yppe_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "yppe" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yppe_v-tr_rel" ].

yre_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr,
   STEM < "yre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yre_v-intrImpers_rel" ].

yre_impers-pres-obl := v-intrImpersObl &
 [ INFLECTION nonfstr,
   STEM < "yre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yre_v-intrImpersObl_rel" ].

yre_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "yre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yre_v-intr_rel" ].

yrke_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "yrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yrke_v-intrObl_rel" ].

yrke_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "yrke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yrke_v-intr_rel" ].

yste_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "yste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yste_v-intr_rel" ].

yste_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "yste" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yste_v-tr_rel" ].

yte_ditr := v-ditr &
 [ INFLECTION nonfstr,
   STEM < "yte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yte_v-ditr_rel" ].

yte_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "yte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_yte_v-tr_rel" ].

ytre_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr,
   STEM < "ytre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ytre_v-tr_rel" ].

ytre_tr-refl-obl := v-trObl-obRefl &
 [ INFLECTION nonfstr,
   STEM < "ytre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ytre_v-trObl_rel" ].

ytre_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr,
   STEM < "ytre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ytre_v-tr_rel" ].

ytre_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "ytre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ytre_v-tr_rel" ].

åpenbare_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "åpenbare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_åpenbare_v-tr_rel" ].

åpenbare_tr-refl-obl-for := v-trObl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "åpenbare" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_åpenbare_v-trObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

åpenbare_tr-refl-rais-som := v-trScpr-scObNrg_obRefl_scPredprtclSom &
 [ INFLECTION nonfstr-te,
   STEM < "åpenbare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_åpenbare_v-trScpr_rel" ].

åpenbare_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "åpenbare" >,
   SYNSEM.LKEYS.KEYREL.PRED "_åpenbare_v-tr_rel" ].

åttedoble_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "åttedoble" >,
   SYNSEM.LKEYS.KEYREL.PRED "_åttedoble_v-tr_rel" ].

ære_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ære" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ære_v-tr_rel" ].

ærekrenke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ærekrenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ærekrenke_v-tr_rel" ].

æresforplikte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "æresforplikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æresforplikte_v-intr_rel" ].

æresforplikte_tr-obl := v-trObl &
 [ INFLECTION nonfstr-et,
   STEM < "æresforplikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æresforplikte_v-trObl_rel" ].

æresforplikte_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "æresforplikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æresforplikte_v-tr_rel" ].

æresforplikte_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "æresforplikte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æresforplikte_v-tr_rel" ].

æreskjelle_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "æreskjelle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æreskjelle_v-tr_rel" ].

æreskjenne_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "æreskjenne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_æreskjenne_v-tr_rel" ].

ætte_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "ætte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ætte_v-intrObl_rel" ].

ættlede_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "ættlede" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ættlede_v-tr_rel" ].

øde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "øde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øde_v-tr_rel" ].

ødelegge_intr-obl-for := v-intrObl &
 [ INFLECTION nonfstr-strong,
   STEM < "ødelegge" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_ødelegge_v-intrObl_rel",
            LOCAL.KEY-SPEC for-k ] ].

ødelegge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "ødelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ødelegge_v-tr_rel" ].

ødelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "ødelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ødelegge_v-tr_rel" ].

ødsle_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-et,
   STEM < "ødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ødsle_v-intrObl_rel" ].

ødsle_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ødsle_v-intr_rel" ].

ødsle_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "ødsle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ødsle_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

øke_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "øke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øke_v-intrPrtcl_rel" ].

øke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "øke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øke_v-intr_rel" ].

øke_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "øke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øke_v-tr_rel" ].

økonomisere_intr-obl := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "økonomisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økonomisere_v-intrObl_rel" ].

økonomisere_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "økonomisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økonomisere_v-intr_rel" ].

økonomisere_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "økonomisere" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økonomisere_v-tr_rel" ].

økse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-et,
   STEM < "økse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økse_v-trScpr_rel",
   SYNSEM.LOCAL.KEY-SPEC bort-k ].

økse_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "økse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økse_v-tr_rel" ].

øksle_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "øksle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øksle_v-tr_rel" ].

økte_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "økte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_økte_v-intr_rel" ].

øle_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "øle" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øle_v-intr_rel" ].

ømme_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ømme" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ømme_v-tr_rel" ].

ønske_ditr-refl := v-ditr-iobRefl &
 [ INFLECTION nonfstr-et,
   STEM < "ønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ønske_v-ditr_rel" ].

ønske_subj-equi := v-tr-obEqInf &
 [ INFLECTION nonfstr-et,
   STEM < "ønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ønske_v-tr_rel" ].

ønske_tr-subord := v-tr-obDECL &
 [ INFLECTION nonfstr-et,
   STEM < "ønske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ønske_v-tr_rel" ].

ønsketenke_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "ønsketenke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ønsketenke_v-intr_rel" ].

øre_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "øre" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øre_v-intr_rel" ].

øremerke_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "øremerke" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øremerke_v-tr_rel" ].

ørske_iv := v-intr &
 [ INFLECTION nonfstr-et,
   STEM < "ørske" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ørske_v-intr_rel" ].

ørte_iv := v-intr &
 [ INFLECTION nonfstr,
   STEM < "ørte" >,
   SYNSEM.LKEYS.KEYREL.PRED "_ørte_v-intr_rel" ].

øse_intr-obl-over := v-intrObl &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_øse_v-intrObl_rel",
            LOCAL.KEY-SPEC over-k ] ].

øse_intr-telicpartcl := v-intrPrtcl &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øse_v-intrPrtcl_rel" ].

øse_iv := v-intr &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øse_v-intr_rel" ].

øse_tr-arg1-refl-telicpart := v-trPrtcl-obRefl &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øse_v-trPrtcl_rel" ].

øse_tr-arg12-secpred := v-trScpr-scObArgCsd &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øse_v-trScpr_rel" ].

øse_tv := v-tr &
 [ INFLECTION nonfstr-te,
   STEM < "øse" >,
   SYNSEM.LOCAL.DERIVED-HEAD -,
   SYNSEM.LOCAL.CAN-PASTPART-ADJ -,
   SYNSEM.LKEYS.KEYREL.PRED "_øse_v-tr_rel" ].

øsregne_impers-pres := v-intrImpers &
 [ INFLECTION nonfstr-et,
   STEM < "øsregne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øsregne_v-intrImpers_rel" ].

øve_iv := v-intr &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øve_v-intr_rel" ].

;øve_tr-arg12-secpred := v-trScpr-scObArgCsd &
; [ INFLECTION nonfstr-de,
;   STEM < "øve" >,
;   SYNSEM.LKEYS.KEYREL.PRED "_øve_v-trScpr_rel" ].

øve_tr-obl := v-trObl &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øve_v-trObl_rel" ].

øve_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øve_v-tr_rel" ].

øve_tr-refl-obl-på := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_øve_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

øve__obj-eq-pp-refl-på := v-trObl-obRefl_oblEqObInf &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_øve_v-trObl_rel",
            LOCAL.KEY-SPEC på-k ] ].

øve_tr-refl-obl-til := v-trObl-obRefl &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM [ LKEYS.KEYREL.PRED "_øve_v-trObl_rel",
            LOCAL.KEY-SPEC til-k ] ].

øve_tv := v-tr &
 [ INFLECTION nonfstr-de,
   STEM < "øve" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øve_v-tr_rel" ].

øyde_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "øyde" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øyde_v-tr_rel" ].

øydelegge_tr-refl := v-tr-obRefl &
 [ INFLECTION nonfstr-strong,
   STEM < "øydelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øydelegge_v-tr_rel" ].

øydelegge_tv := v-tr &
 [ INFLECTION nonfstr-strong,
   STEM < "øydelegge" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øydelegge_v-tr_rel" ].

øye_tv := v-tr &
 [ INFLECTION nonfstr,
   STEM < "øye" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øye_v-tr_rel" ].

øyne_tv := v-tr &
 [ INFLECTION nonfstr-et,
   STEM < "øyne" >,
   SYNSEM.LKEYS.KEYREL.PRED "_øyne_v-tr_rel" ].
